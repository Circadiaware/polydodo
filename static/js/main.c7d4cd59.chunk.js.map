{"version":3,"sources":["assets/img/logo.png","assets/img/partners/polymtl.png","assets/img/partners/aep.png","assets/img/partners/protocase.png","assets/img/partners/ntx.png","assets/img/partners/diptrace.png","assets/data/hypnogram-predicted.csv","assets/data/hypnogram-electrophysiologist.csv","assets/data/hypnogram-openbci-electrophysiologist.csv","assets/data/hypnogram-openbci-predicted.csv","components/navbar/navbar.js","components/header.js","components/footer/partners.js","components/footer/footer.js","components/d3component.js","components/emoji.js","components/wip_warning.js","d3/hypnogram/constants.js","d3/hypnogram/mouse_over.js","d3/hypnogram/line_charts.js","d3/constants.js","d3/utils.js","d3/hypnogram/hypnogram.js","d3/spectrogram/constants.js","d3/spectrogram/spectrogram.js","d3/spectrogram/legend.js","components/waypoint_direction.js","d3/evolving_chart/preproc.js","d3/evolving_chart/constants.js","d3/evolving_chart/legend.js","d3/evolving_chart/chart_states.js","d3/evolving_chart/mouse_over.js","d3/evolving_chart/evolving_chart.js","hooks/api_hooks.js","views/sleep_analysis/stacked_bar_chart_scrollytelling.js","views/sleep_analysis/sleep_analysis.js","views/performance/performance.js","components/scroll_to_top.js","index.js","assets/data/hypnogram.csv"],"names":["module","exports","OutsideLink","href","iconClass","linkName","tooltipText","tooltipID","NavItem","NavLink","className","id","target","UncontrolledTooltip","delay","defaultProps","Navbar","props","navbarstrapRef","React","createRef","Headroom","this","init","ref","expand","Container","NavbarBrand","to","tag","Link","alt","src","Logo","Nav","navbar","text","Component","Header","sizeClass","shapeQty","title","subtitle","description","_","times","i","key","Col","lg","preserveAspectRatio","viewBox","x","y","points","Partner","img","width","style","Partners","Row","Polymtl","AEP","NTX","Protocase","Diptrace","PlatformButton","color","Button","Copyright","Date","getFullYear","rel","Navfooter","Footer","md","D3Component","memo","callback","data","useDiv","Spinner","height","useRef","useEffect","current","Emoji","symbol","label","role","aria-label","aria-hidden","WIPWarning","Alert","CANVAS_DIMENSION","MARGIN","DIMENSION","WIDTH","HEIGHT","COMPARATIVE_COLORS","Classifier","Electrophysiologist","createMouseOver","g","bisectTime","d3","d","left","append","attr","lineHover","dateHover","circleHover","selectAll","enter","name","textHover","on","mouse","timestamp","timestamps","values","map","currentTimeDate","invert","idx","epochIdx","currentValue","getHoveredData","sleepStage","createLine","curve","createAxes","xAxis","yAxis","call","createTitle","createLegend","hypnogramNames","comparativeColors","legendData","zip","createHypnogramChart","chartTitle","line","g_chart","STAGE_TO_COLOR","W","N1","N2","N3","REM","STAGES_ORDERED","convertTimestampsToDates","row","Object","parseTimestampToDate","date","getUTCFullYear","getUTCMonth","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","createHypnogram","containerNode","svg","range","length","colors","initializeScales","tickFormat","initializeAxes","createDrawingGroup","dates","datum","domain","setDomainOnScales","hypno","preprocessData","createSingleHypnogram","createComparativeHypnogram","getHoursFromIndex","getScalesAndAxes","channel","dimensions","powerAmplitudesByTimestamp","frequencies","spectrogramWidth","singleSpectrogramHeight","yLinear","yBand","yColor","interpolator","ticks","preprocessedData","flatMap","powerAmplitudeSingleTimestamp","index","intensity","frequency","Intensity","Frequency","Timestamp","currentData","first","last","createSpectrogramAxesAndLegend","scalesAndAxesBySpectrogram","channelNames","canvasWidth","singleSpectrogramCanvasHeight","forEach","spectrogramDrawingGroup","legendDrawingGroup","createDrawingGroups","channelName","spectrogramHeight","interpolate","NB_POINTS_COLOR_INTERPOLATION","createSpectrogram","parentDiv","node","getBoundingClientRect","canvasHeight","Math","min","window","innerHeight","spectrogramsHeight","NB_SPECTROGRAM","filter","keys","keyName","canvas","context","getContext","each","resetTransform","translate","beginPath","fillRect","bandwidth","fillStyle","fill","stroke","createSpectrogramRectangles","WaypointDirection","onUp","onDown","onEnter","previousPosition","Waypoint","below","bottomOffset","fireOnRapidScroll","convertEpochsToAnnotations","annotations","nbEpochs","currentAnnotationStart","currentSleepStage","currentAnnotationEpochCount","isNextAnnotation","push","stage","proportion","start","end","duration","saveCurrentAnnotation","getStageTimeProportions","nbEpochPerSleepStage","countBy","mapValues","countPerStage","findFirstStageIndex","reduce","firstStageIndexes","findIndex","element","BAR_HEIGHT","MAP_STAGE_TO_LABEL_OFFSET","MAP_STAGE_TO_COLOR_OFFSET","setAttrOnAnnotationRects","annotationRects","yPosition","tooltip","setTooltip","transition","show","hide","getVerticalPositionCallback","indexOf","getFirstRectangleProportionWidthCallback","stageTimeProportions","createVerticalAxis","transitionHorizontalAxis","select","createProportionLabels","round","getCumulativeProportionOfNightAtStart","totalStageProportions","sum","slice","stage_ordered","getOffsetSleepStageProportionCallback","cumulSumProportions","cumulSum","annotation","annotationIndexSleepStage","annotationsProportionByStage","annotationsProportion","currentCumulSum","initializeTooltip","getToolTipText","tip","offset","html","getBarToolTipText","moment","format","utc","diff","getStackedToolTipText","EPOCH_DURATION_SEC","instanceChartCallbacks","timelineChartCallbacks","barChartCallbacks","stackedBarChartCallbacks","createEvolvingChart","xTime","xLinear","xTimeAxis","getHours","xLinearAxis","tickSize","epochs","nightDuration","asHours","barToolTip","stackedToolTip","initializeTooltips","bindAnnotationsToRects","fromInitial","interrupt","fromInstance","remove","createTimelineChartCallbacks","fromTimeline","fromBarChart","xProportionCallback","createInstanceChartCallbacks","xAxisLinear","fromStackedBarChart","TRANSITION_TIME_MS","createBarChartCallbacks","firstAnnotationsByStage","getHorizontalPositionSleepStage","createStackedBarChartCallbacks","useCSVData","path","useState","setData","a","csv","receivedData","StackedBarChartScrollyTelling","csvData","hypnogramCSVPath","isInitialized","setIsInitialized","position","top","marginBottom","Card","CardBody","SleepAnalysis","csvDataSleepEDF","hypnogramDataSleepEDFPath","spectrogramData","ClassificationReport","rows","Table","size","responsive","el","j","Performance","hypnogramDataSleepEDF","csvDataPredicted","hypnogramDataPredicted","csvDataElectrophysiologist","hypnogramDataElectrophysiologist","csvDataOpenBCIElectrophysiologist","hypnogramDataOpenBCIElectrophysiologist","csvDataPredictedOpenBCI","hypnogramDataPredictedOpenBCI","ScrollToTop","prevProps","location","pathname","scrollTo","children","withRouter","ReactDOM","render","basename","process","exact","document","getElementById"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,s9z6FCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,2D,onBCA3CD,EAAOC,QAAU,IAA0B,mE,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oVCSrCC,EAAc,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7D,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,UAAU,gBAAgBP,KAAMA,EAAMQ,GAAIJ,EAAWK,OAAO,UACnE,uBAAGF,UAAS,aAAQN,KACpB,0BAAMM,UAAU,uCAAuCL,IAEzD,kBAACQ,EAAA,EAAD,CAAqBC,MAAO,EAAGF,OAAQL,GACpCD,KAcTJ,EAAYa,aAAe,CACzBX,UAAW,GACXC,SAAU,GACVC,YAAa,I,IA4EAU,E,kDAxEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,eAAiBC,IAAMC,YAFX,E,gEAMA,IAAIC,IAASC,KAAKJ,gBAC1BK,S,+BAGD,IAAD,OACP,OACE,yBAAKC,IAAK,SAACA,GAAD,OAAU,EAAKN,eAAiBM,GAAMd,UAAU,wDACxD,kBAAC,IAAD,CAAaC,GAAG,cAAcc,OAAO,MACnC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAajB,UAAU,UAAUkB,GAAG,IAAIC,IAAKC,KAC3C,yBAAKC,IAAI,WAAWC,IAAKC,OAG3B,kBAACC,EAAA,EAAD,CAAKxB,UAAU,yCAAyCyB,QAAM,GAC5D,kBAAC3B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASmB,GAAG,IAAIC,IAAKC,KAClBM,EAAI,cAGT,kBAAC5B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASmB,GAAG,mBAAmBC,IAAKC,KACjCM,EAAI,gBAGT,kBAAC5B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASmB,GAAG,oBAAoBC,IAAKC,KAClCM,EAAI,iBAGT,kBAAC5B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASmB,GAAG,eAAeC,IAAKC,KAC7BM,EAAI,sBAKX,kBAACF,EAAA,EAAD,CAAKxB,UAAU,mCAAmCyB,QAAM,GACtD,kBAAC,EAAD,CACEhC,KAAK,uCACLC,UAAU,qBACVC,SAAS,WACTC,YAAa8B,EAAI,wBACjB7B,UAAU,qBAEZ,kBAAC,EAAD,CACEJ,KAAK,wCACLC,UAAU,eACVC,SAAS,YACTC,YAAa8B,EAAI,yBACjB7B,UAAU,qBAEZ,kBAAC,EAAD,CACEJ,KAAK,gCACLC,UAAU,YACVC,SAAS,SACTC,YAAa8B,EAAI,sBACjB7B,UAAU,6B,GA/DLY,IAAMkB,W,yBChCrBC,EAAS,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACtD,OACE,6BAASjC,UAAS,4CAAuC6B,IACvD,yBAAK7B,UAAU,kCACZkC,IAAEC,MAAML,GAAU,SAACM,GAAD,OACjB,0BAAMC,IAAKD,QAGf,kBAACpB,EAAA,EAAD,KACE,yBAAKhB,UAAU,YACb,kBAACsC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAIvC,UAAU,wBACX+B,EACD,8BAAOC,IAET,uBAAGhC,UAAU,mBAAmBiC,MAKtC,yBAAKjC,UAAU,6CACb,yBAAKwC,oBAAoB,OAAOC,QAAQ,eAAeC,EAAE,IAAIC,EAAE,KAC7D,6BAAS3C,UAAU,aAAa4C,OAAO,8BAejDhB,EAAOvB,aAAe,CACpBwB,UAAW,SACXC,SAAU,EACVC,MAAO,GACPC,SAAU,GACVC,YAAa,IAGAL,Q,kGCtCTiB,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAKzB,EAAiB,EAAjBA,IAAK0B,EAAY,EAAZA,MAC3B,OAAO,yBAAK1B,IAAKA,EAAKrB,UAAU,uBAAuBsB,IAAKwB,EAAKE,MAAO,CAAED,MAAM,GAAD,OAAKA,EAAL,UASjFF,EAAQxC,aAAe,CACrBgB,IAAK,MACL0B,MAAO,KAGT,IAeeE,EAfE,WACf,OACE,kBAACjC,EAAA,EAAD,KACE,wBAAIhB,UAAU,cAAc0B,EAAK,sBACjC,kBAACwB,EAAA,EAAD,CAAKlD,UAAU,2BACb,kBAAC,EAAD,CAASqB,IAAI,4BAAyByB,IAAKK,IAASJ,MAAO,MAC3D,kBAAC,EAAD,CAAS1B,IAAI,4CAAyCyB,IAAKM,IAAKL,MAAO,MACvE,kBAAC,EAAD,CAAS1B,IAAI,aAAayB,IAAKO,IAAKN,MAAO,MAC3C,kBAAC,EAAD,CAAS1B,IAAI,YAAYyB,IAAKQ,IAAWP,MAAO,MAChD,kBAAC,EAAD,CAAS1B,IAAI,WAAWyB,IAAKS,IAAUR,MAAO,SC7BhDS,EAAiB,SAAC,GAAwD,IAAtD/D,EAAqD,EAArDA,KAAMgE,EAA+C,EAA/CA,MAAO/D,EAAwC,EAAxCA,UAAWE,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7D,OACE,oCACE,kBAAC6D,EAAA,EAAD,CAAQ1D,UAAU,oCAAoCyD,MAAOA,EAAOhE,KAAMA,EAAMQ,GAAIJ,EAAWK,OAAO,UACpG,0BAAMF,UAAU,mBACd,uBAAGA,UAAS,aAAQN,OAGxB,kBAACS,EAAA,EAAD,CAAqBC,MAAO,EAAGF,OAAQL,GACpCD,KAcT4D,EAAenD,aAAe,CAC5BoD,MAAO,YACP/D,UAAW,GACXE,YAAa,IAGf,IAAM+D,EAAY,WAChB,OACE,yBAAK3D,UAAU,aAAf,SACK,IAAI4D,MAAOC,cAAe,IAC7B,uBAAGpE,KAAK,gCAAgCS,OAAO,SAAS4D,IAAI,uBACzDpC,EAAI,+BAMPqC,EAAY,WAChB,OACE,kBAACvC,EAAA,EAAD,CAAKxB,UAAU,mCACb,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASN,KAAK,gCAAgCS,OAAO,UAClDwB,EAAK,qBAGV,kBAAC5B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASN,KAAK,gCAAgCS,OAAO,UAClDwB,EAAI,mBA+DAsC,E,uKAtDX,OACE,4BAAQhE,UAAU,UAChB,kBAAC,EAAD,MACA,kBAACgB,EAAA,EAAD,KACE,6BACA,wBAAIhB,UAAU,uCAAuC0B,EAAI,eACzD,kBAACwB,EAAA,EAAD,CAAKlD,UAAU,oCACb,kBAACsC,EAAA,EAAD,CAAKtC,UAAU,QAAQuC,GAAG,KACxB,wBAAIvC,UAAU,2BAA2B0B,EAAI,mBAC7C,kBAAC,EAAD,CACEjC,KAAK,sCACLgE,MAAM,WACN/D,UAAU,cACVE,YAAa8B,EAAI,yBACjB7B,UAAU,qBAEZ,kBAAC,EAAD,CACEJ,KAAK,wCACLgE,MAAM,YACN/D,UAAU,eACVE,YAAa8B,EAAI,0BACjB7B,UAAU,sBAEZ,kBAAC,EAAD,CACEJ,KAAK,gCACLgE,MAAM,SACN/D,UAAU,YACVE,YAAa8B,EAAI,uBACjB7B,UAAU,oBAId,kBAACyC,EAAA,EAAD,CAAKtC,UAAU,gBAAgBuC,GAAG,KAChC,wBAAIvC,UAAU,0BAA0B0B,EAAI,qBAC5C,kBAACgC,EAAA,EAAD,CAAQD,MAAM,UAAUhE,KAAK,2CAA2CS,OAAO,UAC5EwB,EAAI,yBAIX,6BACA,kBAACwB,EAAA,EAAD,CAAKlD,UAAU,kDACb,kBAACsC,EAAA,EAAD,CAAK2B,GAAG,KACN,kBAAC,EAAD,OAEF,kBAAC3B,EAAA,EAAD,CAAK2B,GAAG,KACN,kBAAC,EAAD,c,GA/COxD,IAAMkB,W,SCvCZuC,EArBKzD,IAAM0D,MAAK,YAAyC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,KAA2B,IAArBC,cAAqB,SACrE,GAAa,OAATD,EACF,OACE,kBAACnB,EAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAAKtC,UAAU,eACb,kBAACuE,EAAA,EAAD,CAASvB,MAAO,CAAED,MAAO,OAAQyB,OAAQ,YAIjD,IAAM1D,EAAM2D,mBAIZ,OAHAC,qBAAU,WACRN,EAAStD,EAAI6D,QAASN,MAEjBC,EAAS,yBAAKxD,IAAKA,IAAU,yBAAKA,IAAKA,O,SCd1C8D,GAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,MAAX,OACZ,0BAAMC,KAAK,MAAMC,aAAYF,EAAOG,cAAaH,EAAQ,QAAU,QAChED,IASLD,GAAMvE,aAAe,CACnByE,MAAO,IAGMF,UCFAM,GAZI,WACjB,OACE,kBAACC,EAAA,EAAD,CAAO1B,MAAM,WACX,8BACE,kBAAC,GAAD,CAAOoB,OAAO,iBACd,iEAFF,iCAGgC,kBAAC,GAAD,CAAOA,OAAO,oB,QCVvCO,GACJ,IADIA,GAEH,IAEGC,GACN,IADMA,GAGH,GAHGA,GAIL,GAEKC,GAAY,CACvBC,MAAOH,GAAyBC,GALzB,GAMPG,OAAQJ,GAA0BC,GAAaA,IAEpCI,GAAqB,CAChCC,WAAY,UACZ,YAAa,UACbC,oBAAqB,WCoFRC,GAtFS,SAACC,EAAGnD,EAAGC,EAAG0B,EAAMZ,GAAW,IACzC8B,EAAkBD,GAAlBC,MAAOC,EAAWF,GAAXE,OACTM,EAAaC,MAAY,SAACC,GAAD,OAAOA,KAAGC,KAGzCJ,EAAEK,OAAO,QAAQC,KAAK,QAASZ,GAAOY,KAAK,SAAUX,GAAQW,KAAK,UAAW,GAE7E,IAAMC,EAAYP,EACfK,OAAO,QACPC,KAAK,QAAS,aACdA,KAAK,KAAMX,GACXW,KAAK,KAAM,GACXA,KAAK,eAAgB,GACrBnD,MAAM,SAAU,QAChBA,MAAM,kBAAmB,cACzBA,MAAM,UAAW,GAEdqD,EAAYR,EACfK,OAAO,QACPC,KAAK,QAAS,iBACdA,KAAK,cAAe,UACpBA,KAAK,YAAa,IAClBA,KAAK,cAAe,QACpBnD,MAAM,UAAW,GAEdsD,EAAcT,EACjBU,UAAU,gBACVlC,KAAKA,GACLmC,QACAN,OAAO,UACPC,KAAK,QAAS,eACdnD,MAAM,OAAQ,QACdmD,KAAK,UAAU,SAACzD,GAAD,OAAOe,EAAMf,EAAE+D,SAC9BN,KAAK,IAAK,GACVA,KAAK,eAAgB,OACrBnD,MAAM,UAAW,GAEd0D,EAAYb,EACfU,UAAU,cACVlC,KAAKA,GACLmC,QACAN,OAAO,QACPC,KAAK,QAAS,aACdnD,MAAM,OAAQ,SACdmD,KAAK,cAAe,SACpBA,KAAK,YAAa,IAClBnD,MAAM,UAAW,GACjBmD,KAAK,UAAU,SAACzD,GAAD,OAAOe,EAAMf,EAAE+D,SAC9BN,KAAK,MAAM,SAACjE,EAAGE,GAAJ,OAAU,EAAQ,KAAJA,EAAW,QAmCvCyD,EAAEc,GAAG,aAjCa,WAChB,IAAMC,EAAQb,KAASnF,MAGjBiG,EAlEa,SAACxC,EAAM3B,EAAGkE,EAAOd,GACtC,IAAMgB,EAAazC,EAAK,GAAG0C,OAAOC,KAAI,SAACtE,GAAD,OAAOA,EAAEmE,aACzCI,EAAkBvE,EAAEwE,OAAON,EAAM,IACjCO,EAAMrB,EAAWgB,EAAYG,EAAiB,GAC9CG,EAAWH,EAAkBH,EAAWK,EAAM,GAAKL,EAAWK,GAAOF,EAAkBE,EAAMA,EAAM,EAEzG,OAAO9C,EAAK2C,KAAI,SAACtE,GAEf,OADAA,EAAE2E,aAAe3E,EAAEqE,OAAOK,GACnB1E,KAyDa4E,CAAejD,EAAM3B,EAAGkE,EAAOd,GACrB,GAAGuB,aAAaR,UAE9CT,EAAUD,KAAK,KAAMS,EAAM,IAAIT,KAAK,KAAMS,EAAM,IAAI5D,MAAM,UAAW,GAErEqD,EACG3E,KAAKqE,KAAc,WAAdA,CAA0Bc,IAC/BV,KAAK,YAFR,oBAEkCzD,EAAEmE,GAFpC,YAEkDrB,EAASH,GAAgB,GAF3E,MAGGrC,MAAM,UAAW,GAEpBsD,EACGH,KAAK,MAAM,SAACzD,GAAD,OAAOC,EAAED,EAAE2E,aAAaE,eACnCpB,KAAK,KAAMzD,EAAEmE,IACb7D,MAAM,UAAW,GAEpB0D,EACGP,KAAK,YADR,oBACkCzD,EAAEmE,GADpC,YACmD,EAAI,EAAKrB,EAD5D,MAEG9D,MAAK,SAACgB,GAAD,gBAAUA,EAAE+D,KAAZ,aAAqB/D,EAAE2E,aAAaE,eACzCvE,MAAM,UAAW,GAEpBN,EAAEmE,GAAc,GAAStB,EAAQmB,EAAUP,KAAK,cAAe,OAAOA,KAAK,MAAO,IAAMO,EAAUP,KAAK,cAAe,SAASA,KAAK,KAAM,OAU/GQ,GAAG,cAPb,WACjBP,EAAUpD,MAAM,UAAW,GAC3BqD,EAAUrD,MAAM,UAAW,GAC3BsD,EAAYtD,MAAM,UAAW,GAC7B0D,EAAU1D,MAAM,UAAW,OCrEzBwE,GAAa,SAAC9E,EAAGC,GAAJ,OACjBoD,OAEGrD,GAAE,SAACsD,GAAD,OAAOtD,EAAEsD,EAAEa,cACblE,GAAE,SAACqD,GAAD,OAAOrD,EAAEqD,EAAEuB,eACbE,MAAM1B,OAEL2B,GAAa,SAAC7B,EAAG8B,EAAOC,GAAW,IAC/BpC,EAAkBF,GAAlBE,OAAQD,EAAUD,GAAVC,MAEhBM,EAAEK,OAAO,KAAKC,KAAK,QAAS,UAAUA,KAAK,YAA3C,sBAAuEX,EAAvE,MAAkFqC,KAAKF,GAEvF9B,EAAEK,OAAO,KAAKC,KAAK,QAAS,UAAU0B,KAAKD,GAE3C/B,EAAEK,OAAO,QACNxE,KAAK,QACLyE,KAAK,cAAe,OACpBA,KAAK,IAAKZ,GACVY,KAAK,IAAKX,EAAU,EAAI,EAAKH,IAEhCQ,EAAEK,OAAO,QACNxE,KAAK,eACLyE,KAAK,cAAe,UACpBA,KAAK,YAAa,eAClBA,KAAK,KAAMX,EAAS,GACpBW,KAAK,KAAO,EAAI,EAAKd,KAGpByC,GAAc,SAACjC,EAAG9D,GACtB8D,EAAEK,OAAO,QACNxE,KAAKK,GACLoE,KAAK,QAAS,eACdA,KAAK,cAAe,UACpBA,KAAK,KAAO,EAAI,EAAKd,IACrBc,KAAK,IAAM,GAASb,GAAUC,QAG7BwC,GAAe,SAAClC,EAAGmC,EAAgBC,GACvC,IAAMC,EAAahG,IAAEiG,IAAIH,EAAgBC,GAAmBjB,KAAI,SAACtE,GAC/D,MAAO,CACL+D,KAAM/D,EAAE,GACRe,MAAOf,EAAE,OAIbmD,EAAEU,UAAU,gBACTlC,KAAK6D,GACL1B,QACAN,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,eAAgB,GACrBA,KAAK,QAAQ,SAACzD,GAAD,OAAOA,EAAEe,SACtB0C,KAAK,QAAS,OACdA,KAAK,SAAU,OACfA,KAAK,KAAM,GAAUd,IACrBc,KAAK,KAAK,SAACjE,EAAGE,GAAJ,gBAAiB,EAAJA,EAAb,SAEbyD,EAAEU,UAAU,gBACTlC,KAAK6D,GACL1B,QACAN,OAAO,QACPC,KAAK,QAAS,UACdzE,MAAK,SAACgB,GAAD,OAAOA,EAAE+D,QACdN,KAAK,YAAa,IAClBA,KAAK,oBAAqB,WAC1BA,KAAK,KAAM,GAAUd,IACrBc,KAAK,KAAM,UACXA,KAAK,KAAK,SAACjE,EAAGE,GAAJ,gBAAa,IAAU,GAAJA,EAAnB,UAGAgG,GA1Fc,SAACvC,EAAGxB,EAAM3B,EAAGC,EAAGgF,EAAOC,EAAOnE,EAAO4E,EAAYL,EAAgBC,GAC5F,IAAMK,EAAOd,GAAW9E,EAAGC,GACrB4F,EAAU1C,EAAEK,OAAO,KAAKC,KAAK,QAAS,mBAC5CoC,EACGhC,YACAlC,KAAKA,GACLmC,QACAN,OAAO,QACPC,KAAK,QAAS,QACdA,KAAK,OAAQ,QACbA,KAAK,KAAK,SAACzD,GAAD,OAAO4F,EAAK5F,EAAEqE,WACxBZ,KAAK,UAAU,SAACzD,GAAD,OAAOe,EAAMf,EAAE+D,SAC9BN,KAAK,eAAgB,GAExBP,GAAgB2C,EAAS7F,EAAGC,EAAG0B,EAAMZ,GACrCiE,GAAW7B,EAAG8B,EAAOC,GACrBE,GAAYjC,EAAGwC,GACfN,GAAalC,EAAGmC,EAAgBC,ICtBrBO,GAAiB,CAC5BC,EAAG,UACHC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,IAAK,WAEMC,GAAiB,CAAC,IAAK,MAAO,KAAM,KAAM,M,SCR1CC,GAA2B,SAAC1E,GAAD,OACtCA,EAAK2C,KAAI,SAACgC,GAAD,OACPC,OAAO,6BACFD,GADC,IAEJnC,UAAWqC,GAAqBF,EAAInC,kBAIpCqC,GAAuB,SAACrC,GAE5B,IAAMsC,EAAO,IAAIvF,KAAiB,IAAZiD,GACtB,OAAO,IAAIjD,KAAKuF,EAAKC,iBAAkBD,EAAKE,cAAeF,EAAKG,YAAaH,EAAKI,cAAeJ,EAAKK,gBAAiBL,EAAKM,kBC8BxHC,GAAkB,SAACC,EAAetF,EAAMgE,EAAYL,EAAgBC,GACxE,IAAM2B,EAAM7D,KAAU4D,GAAexD,KAAK,UAA9B,gBAAkDf,GAAlD,aAA6EA,KADK,EAjCvE,SAAC6C,GAAD,OACvBgB,OAAO,CACLvG,EAAGqD,KAAa,CAAC,EAAGT,GAAUC,QAC9B5C,EAAGoD,KAAgB7D,IAAE2H,MAAM,EAAGvE,GAAUE,OAAS,EAAGF,GAAUE,OAASsD,GAAegB,SACtFC,OAAQhE,KAAgBkC,KA+BD+B,CAAiB/B,GAAlCvF,EAFsF,EAEtFA,EAAGC,EAFmF,EAEnFA,EAAGoH,EAFgF,EAEhFA,OAFgF,EA1BzE,SAACrH,EAAGC,GAAJ,OACrBsG,OAAO,CACLtB,MAAO5B,KAAcrD,GAAGuH,WAAWlE,KAAc,UACjD6B,MAAO7B,KAAYpD,KA0BIuH,CAAexH,EAAGC,GAAnCgF,EAHsF,EAGtFA,MAAOC,EAH+E,EAG/EA,MACT/B,EAxBmB,SAAC+D,GAAD,OAASA,EAAI1D,OAAO,KAAKC,KAAK,YAArB,oBAA+Cd,GAA/C,aAA+DA,GAA/D,MAwBxB8E,CAAmBP,IAXL,SAAClH,EAAGC,EAAGoH,EAAQ1F,GACvC,IAAM+F,EAAQ/F,EAAK,GAAG0C,OAAOC,KAAI,SAACqD,GAAD,OAAWA,EAAMxD,aAClDnE,EAAE4H,OAAO,CAACvE,KAAOqE,GAAQrE,KAAOqE,KAChCzH,EAAE2H,OAAOxB,IACTiB,EAAOO,OAAOjG,EAAK2C,KAAI,SAACtE,GAAD,OAAOA,EAAE+D,UAUhC8D,CAAkB7H,EAAGC,EAAGoH,EADxB1F,EAxBqB,SAACA,EAAM2D,GAG5B,OAFA3D,EAAOA,EAAK2C,KAAI,SAACwD,GAAD,OAAWzB,GAAyByB,MAE7CtI,IAAEiG,IAAI9D,EAAM2D,GAAgBhB,KAAI,SAACtE,GAAD,OACrCuG,OAAO,CACLxC,KAAM/D,EAAE,GACRqE,OAAQrE,EAAE,QAkBP+H,CAAepG,EAAM2D,IAE5BI,GAAqBvC,EAAGxB,EAAM3B,EAAGC,EAAGgF,EAAOC,EAAOmC,EAAQ1B,EAAYL,EAAgBC,IAG3EyC,GAAwB,SAACf,EAAetF,GACnDqF,GAAgBC,EAAetF,EAAM,YAAa,CAAC,cAAe,CAACoB,GAAmBC,cAG3EiF,GAA6B,SAAChB,EAAetF,EAAM2D,GAC9D0B,GACEC,EACAtF,EAFa,4BAGQ2D,EAAe,GAHvB,gBAGiCA,EAAe,IAC7DA,EACAA,EAAehB,KAAI,SAACtE,GAAD,OAAO+C,GAAmB/C,Q,kBCvDpC2C,GACN,GADMA,GAEJ,IAFIA,GAGH,GAHGA,GAIL,GCsCFuF,GAAoB,SAACzD,GAAD,OJxCQ,GIwCEA,EAA4B,MAQ1D0D,GAAmB,SAACxG,EAAMyG,EAASC,GAAgB,IAnBjCC,EAA4BC,EAmBI,EA1C/B,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,wBAArB,OACvBlC,OAAO,CACLvG,EAAGqD,KAAe,CAAC,EAAGmF,IACtBE,QAASrF,KAAe,CAACoF,EAAyB,IAClDE,MAAOtF,KAAa,CAACoF,EAAyB,IAC9CG,OAAQvF,KAAe,CAACoF,EAAyB,IACjD1H,MAAOsC,OAAqBwF,aAAaxF,QAqCEiE,CAAiBe,GAAtDrI,EAD8C,EAC9CA,EAAG0I,EAD2C,EAC3CA,QAASC,EADkC,EAClCA,MAAOC,EAD2B,EAC3BA,OAAQ7H,EADmB,EACnBA,MADmB,EAjCjC,SAACf,EAAGC,GAAJ,OACrBsG,OAAO,CACLtB,MAAO5B,KAAcrD,GAAGuH,YAAW,SAACjE,GAAD,gBAAUA,EAAV,QACnC4B,MAAO7B,KAAYpD,GAAG6I,MAAM,EAAG,OAgCRtB,CAAexH,EAAG0I,GAAnCzD,EAF8C,EAE9CA,MAAOC,EAFuC,EAEvCA,MACT6D,GAtBgBT,EAsBkB3G,EAAKyG,GAtBKG,EAsBK5G,EAAK4G,YArB5D/I,IAAEwJ,QAAQV,GAA4B,SAACW,EAA+BC,GAAhC,OACpC1J,IAAE8E,IAAI9E,IAAEiG,IAAIwD,EAA+BV,IAAc,oCAAEY,EAAF,KAAaC,EAAb,YACvD7C,OAAO,CACL8C,UAAWF,EACXG,UAAWF,EACXG,UAAWrB,GAAkBgB,YAoBnC,OAlCwB,SAACM,EAAajB,EAAaQ,EAAkB/I,EAAG2I,EAAOD,EAAS3H,EAAO6H,GAC/F5I,EAAE4H,OAAO,CAAC,EAAGM,GAAkBsB,EAAYpC,UAC3CuB,EAAMf,OAAOW,GACbG,EAAQd,OAAO,CAACpI,IAAEiK,MAAMlB,GAAc/I,IAAEkK,KAAKnB,KAC7CxH,EAAM6G,OAAOvE,KAAU0F,GAAkB,qBAAGM,cAC5CT,EAAOhB,OAAOvE,KAAU0F,GAAkB,qBAAGM,cA2B7CxB,CAAkBlG,EAAKyG,GAAUzG,EAAK4G,YAAaQ,EAAkB/I,EAAG2I,EAAOD,EAAS3H,EAAO6H,GAExF,CAAEjH,KAAMoH,EAAkB/I,IAAG2I,QAAOC,SAAQ7H,QAAOkE,QAAOC,UA0D7DyE,GAAiC,SACrCzC,EACA0C,EACAC,EAHqC,OAInCC,EAJmC,EAInCA,YAAatB,EAJsB,EAItBA,iBAAkBuB,EAJI,EAIJA,8BAA+BtB,EAJ3B,EAI2BA,wBAJ3B,OAMrCjJ,IAAEwK,QAAQxK,IAAEiG,IAAImE,EAA4BC,IAAe,WAA6CX,GAAW,IAAD,2BAAnDjE,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,MAAOnE,EAAqC,EAArCA,MAAO6H,EAA8B,EAA9BA,OAAUR,EAAoB,OA7ExF,SAACjF,EAAGqF,GAAJ,OAC1BjC,OAAO,CACL0D,wBAAyB9G,EAAEK,OAAO,KAAKC,KAAK,YAAnB,oBAA6Cd,GAA7C,aAA6DA,GAA7D,MACzBuH,mBAAoB/G,EAAEK,OAAO,KAAKC,KAAK,YAAnB,oBAA6Cd,GAAc6F,EAA3D,aAAgF7F,GAAhF,QAiFoCwH,CANjBjD,EACpC1D,OAAO,KACPC,KAAK,YAF+B,uBAEFyF,EAAQa,EAA8Bb,GAFpC,MAGpCzF,KAAK,QAASqG,GACdrG,KAAK,SAAUsG,EAA8Bb,IAE4DV,GAApGyB,EAPwG,EAOxGA,wBAAyBC,EAP+E,EAO/EA,oBAvCjB,SAAC/G,EAAGiH,EAAa5B,GACnCrF,EACGK,OAAO,QACPC,KAAK,IAAK+E,EAAmB,GAC7B/E,KAAK,KAAMd,GAAa,GACxBrC,MAAM,cAAe,UACrBA,MAAM,YDlGoB,QCmG1BtB,KANH,iCAMkCoL,IAkChChF,CAAY6E,EAAyB7B,EAASI,GAtE/B,SAACrF,EAAG8B,EAAOC,EAAOuD,EAAyBD,GAC5DrF,EAAEK,OAAO,QACNC,KAAK,QAAS,UACdA,KAAK,IAAKgF,EAA0B9F,IACpCc,KAAK,IAAK+E,EAAmB,GAC7B/E,KAAK,OAAQ,gBACbnD,MAAM,cAAe,UACrBtB,KAAK,QAERmE,EAAEK,OAAO,QACNC,KAAK,QAAS,UACdA,KAAK,YAAa,eAClBA,KAAK,KAAMd,IACXc,KAAK,KAAMgF,EAA0B,GACrChF,KAAK,KAAM,OACXA,KAAK,OAAQ,gBACbnD,MAAM,cAAe,UACrBtB,KAAK,kBAERmE,EAAEK,OAAO,KACNC,KAAK,QAAS,UACdA,KAAK,YAFR,uBAEqCgF,EAFrC,MAGGtD,KAAKF,GACLpB,UAAU,QACVvD,MAAM,YDvFoB,QCyF7B6C,EAAEK,OAAO,KAAKC,KAAK,QAAS,UAAU0B,KAAKD,GAAOrB,UAAU,QAAQvD,MAAM,YDzF7C,QCsI3B0E,CAAWiF,EAAyBhF,EAAOC,EAAOuD,EAAyBD,GCtInD,SAACtB,EAAKnG,EAAOd,EAAGoK,GAC1C,IAAMC,EAAcjH,KAAetC,EAAM6G,SAAS,GAAI7G,EAAM6G,SAAS,IAE/DP,EAAS7H,IAAE8E,IAAI9E,IAAE2H,MAAMoD,IAAoC,SAACvK,GAAD,OAAOe,EAAMuJ,EAAYtK,EFJ/C,OEM3BkH,EAAI1D,OAAO,QAIxBA,OAAO,kBACPC,KAAK,KAJY,gBAKjBA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,QACXA,KAAK,KAAM,MACXI,UAAU,QACVlC,KAAK0F,GACLvD,QACAN,OAAO,QACPC,KAAK,cAAc,SAACH,GAAD,OAAOA,KAC1BG,KAAK,UAAU,SAACjE,EAAGE,GAAJ,OAAUA,GAAK2H,EAAOD,OAAS,MACjDF,EACG1D,OAAO,QACPC,KAAK,OAFR,eAfoB,eAepB,MAGGA,KAAK,IAAKd,GAAe,IACzBc,KAAK,IAAK,GACVA,KAAK,QAASd,GAAe,GAC7Bc,KAAK,SAAU4G,GAElB,IAAMnF,EAAQ7B,KAAapD,GAAG6I,MAAM,EAAG,KACvC5B,EACG1D,OAAO,KACPC,KAAK,QAAS,UACdA,KAAK,YAHR,oBAGkCd,GAAe,IAHjD,QAIGwC,KAAKD,GACLrB,UAAU,QAEbqD,EACG1D,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,YAAa,cAClBA,KAAK,KAAMd,IACXc,KAAK,IAAK4G,EAAoB,GAC9B5G,KAAK,KAAM,OACXA,KAAK,OAAQ,gBACbnD,MAAM,cAAe,UACrBA,MAAM,YF9CoB,QE+C1BtB,KAAK,qBDwFNqG,CAAa6E,EAAoBnJ,EAAO6H,EAAQH,OAkDrC+B,GApCW,SAACvD,EAAetF,GAUxC,IArBkC0I,EAqB5BI,EAAYpH,KAAU4D,GACtB6C,EAAcW,EAAUC,OAAOC,wBAAwBtK,MACvDuK,EAAeC,KAAKC,IDhKgB,GCgKZhB,ED/JW,GC+JiCiB,OAAOC,aAC3E3C,EAAa,CACjByB,YAAaA,EACbc,aAAcA,EACdpC,iBAAkBsB,EAAcnH,GAAcA,GAC9CsI,mBAAoBL,EAAejI,GAAaA,GAChDoH,+BA7BgCM,EA6B0BO,EAAejI,GAAaA,GA5BxFnD,IAAE2H,MD9I0B,GC8IJ7C,KAAI,SAACtE,GAC3B,IAAI8B,EAASuI,ED/Ia,ECqJ1B,OALU,IAANrK,EACF8B,GAAUa,GACKuI,IAANlL,IACT8B,GAAUa,IAELb,MAsBP2G,yBAA0BmC,EAAejI,GAAgBA,GD5KtC,KACO,GC8KtBkH,EAAerK,IAAE2L,OAAO3L,IAAE4L,KAAKzJ,IAAO,SAAC0J,GAAD,MD7KjB,gBC6K8BA,KACnDzB,EAA6BpK,IAAE8E,IAAIuF,GAAc,SAAC9F,GAAD,OAAUoE,GAAiBxG,EAAMoC,EAAMsE,MAExFiD,EAASb,EACZjH,OAAO,UACPC,KAAK,QAAS4E,EAAWyB,aACzBrG,KAAK,SAAU4E,EAAWuC,cAC1BtK,MAAM,WAAY,YACf4G,EAAMuD,EAAUjH,OAAO,OAAOC,KAAK,QAAS4E,EAAWyB,aAAarG,KAAK,SAAU4E,EAAWuC,eA9ElE,SAACU,EAAQ1B,EAAT,GAA4E,IAArCG,EAAoC,EAApCA,8BACnEwB,EAAUD,EAAOZ,OAAOc,WAAW,MAEzChM,IAAEiM,KAAK7B,GAA4B,WAA4BV,GAAW,IAApClJ,EAAmC,EAAnCA,EAAG2I,EAAgC,EAAhCA,MAAO5H,EAAyB,EAAzBA,MAAOY,EAAkB,EAAlBA,KACrD4J,EAAQG,iBACRH,EAAQI,UAAUhJ,GAAaA,GAAauG,EAAQa,EAA8Bb,IAElF1J,IAAEiM,KAAK9J,GAAM,YAA0C,IAAvC4H,EAAsC,EAAtCA,UAAWD,EAA2B,EAA3BA,UAAWD,EAAgB,EAAhBA,UACpCkC,EAAQK,YACRL,EAAQM,SAAS7L,EAAEuJ,GAAYZ,EAAMW,GAAYtJ,EAAEkI,GAAkB,IAAKS,EAAMmD,aAChFP,EAAQQ,UAAYhL,EAAMsI,GAC1BkC,EAAQS,OACRT,EAAQU,eAoEZC,CAA4BZ,EAAQ1B,EAA4BvB,GAChEsB,GAA+BzC,EAAK0C,EAA4BC,EAAcxB,I,iDEnLjE8D,GAJW,SAAC,GAAD,QAAGC,YAAH,MAAU,aAAV,MAAoBC,cAApB,MAA6B,aAA7B,SACxB,kBAAC,KAAD,CAAUC,QAAS,qBAAGC,mBAA6CC,KAASC,MAAQJ,IAAWD,KAASM,aAAa,MAAMC,mBAAiB,K,oBCexIC,GAA6B,SAACjL,GAClC,IAAMkL,EAAc,GACdC,EAAWnL,EAAKyF,OAClB2F,EAAyBpL,EAAK,GAAGwC,UACjC6I,EAAoBrL,EAAK,GAAGkD,WAC5BoI,EAA8B,EAyBlC,OAXAtL,EAAKqI,SAAQ,WAA4Bd,GAAW,IAApC/E,EAAmC,EAAnCA,UAAWU,EAAwB,EAAxBA,WACzBoI,IAbuB,SAACpI,EAAYqE,GAAb,OAAuBrE,IAAemI,GAAqB9D,IAAUvH,EAAKyF,OAAS,EAetG8F,CAAiBrI,EAAYqE,MAbL,SAAC/E,GAC7B0I,EAAYM,KAAK,CACfC,MAAOJ,EACPK,WAAYJ,EAA8BH,EAC1CQ,MAAOP,EACPQ,IAAKpJ,EACLqJ,SPzB4B,GOyBlBP,IAQVQ,CAAsBtJ,GACtB4I,EAAyB5I,EACzB6I,EAAoBnI,EACpBoI,EAA8B,MAI3BJ,GAGHa,GAA0B,SAAC/L,GAC/B,IAAMgM,EAAuBnO,IAAEoO,QAAQjM,EAAK2C,KAAI,SAACtE,GAAD,OAAOA,EAAE6E,eAGzD,OAFgCrF,IAAEqO,UAAUF,GAAsB,SAACG,GAAD,OAAmBA,EAAgBnM,EAAKyF,WAMtG2G,GAAsB,SAAClB,GAAD,OAC1BzG,GAAe4H,QACb,SAACC,EAAmBb,GAApB,OACE7G,OAAO,6BACF0H,GADC,IAEJ,CAACb,GAAQP,EAAYqB,WAAU,SAACC,GAAD,OAAaA,EAAQf,QAAUA,UAElE,KCjES1K,GACJ,IADIA,GAEH,IAEGC,GACN,GADMA,GAIL,GAEKC,GAAY,CACvBC,MAAOH,GAAyBC,GALzB,GAMPG,OAAQJ,GAA0BC,GAL1B,IAQGyL,GAAaxL,GAAUE,OAASsD,GAAegB,OCXtDiH,GAA4B,CAChCtI,EAAG,EACHI,IAAK,GACLH,GAAI,IACJC,GAAI,IACJC,GAAI,KAEAoI,GAA4B,CAChCvI,EAAGsI,GAA0BtI,EAAI,GACjCI,IAAKkI,GAA0BlI,IAAM,GACrCH,GAAIqI,GAA0BrI,GAAK,GACnCC,GAAIoI,GAA0BpI,GAAK,GACnCC,GAAImI,GAA0BnI,GAAK,ICiH/BqI,GAA2B,SAACC,EAAiBxO,EAAGyO,EAAW1N,EAAO2N,GAAvC,OAC/BC,GAAWH,EAAiBE,GACzBjL,KAAK,SAAU2K,IACfQ,aACApB,SVvI6B,KUwI7B/J,KAAK,KAAK,gBAAG6J,EAAH,EAAGA,MAAH,OAAetN,EAAEsN,MAC3B7J,KAAK,IAAKgL,GACVhL,KAAK,SAAS,gBAAG8J,EAAH,EAAGA,IAAKD,EAAR,EAAQA,MAAR,OAAoBtN,EAAEuN,GAAOvN,EAAEsN,MAC7C7J,KAAK,QAAQ,gBAAG2J,EAAH,EAAGA,MAAH,OAAerM,EAAMqM,OAEjCuB,GAAa,SAACR,EAASO,GAAV,OACjBP,EACGlK,GAAG,aAAa,SAAUX,GACzBoL,EAAQG,KAAKvL,EAAGpF,MAChBmF,KAAUnF,MAAMoC,MAAM,UAAW,OAElC2D,GAAG,YAAY,WACdyK,EAAQI,OACRzL,KAAUnF,MAAMoC,MAAM,UAAW,OAGjCyO,GAA8B,SAACzL,GAAD,OAAO8K,GAAahI,GAAe4I,QAAQ1L,EAAE8J,QAE3E6B,GAA2C,SAAChB,EAAmBiB,GAApB,OAA6C,WAAYxP,GAAZ,IAAG0N,EAAH,EAAGA,MAAH,OAC5F1N,IAAMuO,EAAkBb,GAAS8B,EAAqB9B,GAASxK,GAAUC,MAAQ,IAE7EsM,GAAqB,SAAChM,EAAG+B,EAAOnE,GAAX,OACzBoC,EACGK,OAAO,KACPC,KAAK,QAAS,UACdnD,MAAM,YAAa,UACnBsO,aACApB,SVnK6B,KUoK7BrI,KAAKD,GACLrB,UAAU,QACVJ,KAAK,QAAS,WACdA,KAAK,IAAK2K,GAAa,GACvB3K,KAAK,KAAM,IACXnD,MAAM,QAAQ,SAACgD,GAAD,OAAOvC,EAAMuC,MAC3BG,KAAK,cAAe,QACpBnD,MAAM,qBAAsB,WAE3B8O,GAA2B,SAACjM,EAAGsL,GAAJ,OAC/BtL,EAAEkM,OAAO,WAAWT,aAAapB,SV9KD,KU8K8B/J,KAAK,YAAnE,uBAAgGgL,EAAhG,OAEIa,GAAyB,SAACnM,EAAGxB,GAAJ,OAC7BwB,EACGU,UAAU,mBACVlC,KAAKA,EAAKkL,aACV/I,QACAN,OAAO,QACPC,KAAK,QAAS,cACdzE,MAAK,WAAYU,GAAZ,IAAG0N,EAAH,EAAGA,MAAH,OAAmB1N,IAAMiC,EAAKsM,kBAAkBb,GAA7B,UAAyC5N,IAAE+P,MAAyC,IAAnC5N,EAAKuN,qBAAqB9B,GAAc,GAAzF,KAAiG,MACzH3J,KAAK,IAAKb,GAAUC,MAAQ,IAC5BY,KAAK,KAAK,gBAAG2J,EAAH,EAAGA,MAAH,OAAegB,GAAahI,GAAe4I,QAAQ5B,GAASgB,GAAa,KACnF9N,MAAM,OAAQ,UAEbkP,GAAwC,SAACpC,EAAOqC,GAAR,OAC5CjQ,IAAEkQ,IACAlQ,IAAEmQ,MACAvJ,GAAe9B,KAAI,SAACsL,GAAD,OAAmBH,EAAsBG,MAC5D,EACApQ,IAAEwP,QAAQ5I,GAAgBgH,MAI1ByC,GAAwC,SAAClO,GAAU,IAC/CkL,EAAsClL,EAAtCkL,YAAaqC,EAAyBvN,EAAzBuN,qBACfY,EAAsBC,GAC1BvQ,IAAEqO,UAAUqB,GAAsB,SAAC7B,EAAYD,GAAb,OAChC5N,IAAE2L,OAAO0B,GAAa,SAACvJ,GAAD,OAAOA,EAAE8J,QAAUA,KAAO9I,KAAI,SAAC0L,GAAD,OAAgBA,EAAW3C,WAAaA,SAG1F4C,EAA4BpD,EAAYvI,KAAI,SAAC0L,GACjD,OAAOxQ,IAAEwP,QACPxP,IAAE2L,OAAO0B,GAAa,SAACvJ,GAAD,OAAOA,EAAE8J,QAAU4C,EAAW5C,SACpD4C,MAIJ,OAAO,SAAC1M,EAAG4F,GAAJ,OAActG,GAAUC,MAAQqM,EAAqB5L,EAAE8J,OAAS0C,EAAoBxM,EAAE8J,OAAO6C,EAA0B/G,MAG1H6G,GAAW,SAACG,GAAD,OACf1Q,IAAEqO,UAAUqC,GAA8B,SAACC,GACzC,IAAMC,EAAkB,CAAC,GAMzB,OALAD,EAAsBnG,SAAQ,SAACqD,EAAYnE,GACrCA,IAAUiH,EAAsB/I,OAAS,GAC3CgJ,EAAgBjD,KAAKE,EAAa+C,EAAgBlH,OAG/CkH,M,UClNLC,GAAoB,SAACnJ,EAAKoJ,GAC9B,IAAM5B,EAAU6B,eAAM9M,KAAK,QAAS,UAAU+M,OAAO,EAAE,GAAI,IAI3D,OAHAtJ,EAAI/B,KAAKuJ,GACTA,EAAQ+B,KAAKH,GAEN5B,GAGHgC,GAAoB,SAACpN,GACzB,MAAM,oBAAN,OAA2BA,EAAE8J,MAA7B,2DAC+BuD,KAAOrN,EAAEgK,OAAOsD,OAAO,YADtD,gDAEyBD,KAAOrN,EAAEiK,KAAKqD,OAAO,YAF9C,2DAG+BD,KAAOE,IAAIF,KAAOrN,EAAEiK,KAAKuD,KAAKxN,EAAEgK,QAAQsD,OAAO,YAH9E,eAMIG,GAAwB,SAACzN,EAAG4L,EAAsBpC,GAA1B,iCACRxJ,EAAE8J,MADM,+CACsCuD,KAC/DE,IAAI3B,EAAqB5L,EAAE8J,OAASN,EXnBRkE,KWoB5BJ,OAAO,YAHkB,mBChBnBK,GAAyB,GACzBC,GAAyB,GACzBC,GAAoB,GACpBC,GAA2B,GA2DvBC,GAxBa,SAACpK,EAAetF,GAC1C,IAAMuF,EAAM7D,KAAU4D,GAAexD,KAAK,UAA9B,gBAAkDf,GAAlD,aAA6EA,KADtC,EAjC5B,WAAO,IACtBG,EAAkBD,GAAlBC,MAAOC,EAAWF,GAAXE,OAMf,MAAO,CAAEwO,MALKjO,KAAa,CAAC,EAAGR,IAKf0O,QAJAlO,KAAe,CAAC,EAAGR,IAIV5C,EAHfoD,KAAgB7D,IAAE2H,MAAM,EAAGrE,EAAS,EAAGsL,KAGrB/G,OAFbhE,KAAgB+C,GAAe9B,KAAI,SAACtE,GAAD,OAAO8F,GAAe9F,QA8BlCsH,GAA9BgK,EAF2C,EAE3CA,MAAOC,EAFoC,EAEpCA,QAAStR,EAF2B,EAE3BA,EAAGoH,EAFwB,EAExBA,OAFwB,EAZ9B,SAACiK,EAAOC,EAAStR,GAKtC,MAAO,CAAEuR,UAJSnO,KAAciO,GAAO/J,YAAW,SAACjE,GAAD,gBAAUA,EAAEmO,WAAZ,QAI9BC,YAHArO,KAAckO,GAAShK,YAAW,SAACjE,GAAD,gBAAUA,EAAV,QAGrB4B,MAFnB7B,KAAYpD,GAAG0R,UAAU/O,GAAUC,QAYP2E,CAAe8J,EAAOC,EAAStR,GAAjEuR,EAH2C,EAG3CA,UAAWE,EAHgC,EAGhCA,YAAaxM,EAHmB,EAGnBA,MAC1B/B,EARmB,SAAC+D,GAAD,OAASA,EAAI1D,OAAO,KAAKC,KAAK,YAArB,oBAA+Cd,GAA/C,aAA+DA,GAA/D,MAQxB8E,CAAmBP,IHhCH,SAACA,EAAKnG,GAChCmG,EACGrD,UAAU,SACVlC,KAAKyE,IACLtC,QACAN,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,KAAK,SAAC2J,GAAD,OAAWiB,GAA0BjB,MAC/C3J,KAAK,IAzBa,IA0BlBzE,MAAK,SAACsE,GAAD,OAAOA,KACZhD,MAAM,QAAQ,SAACd,EAAGE,GAAJ,OAAUqB,EAAMrB,MAC9BY,MAAM,YAAa,QACnBmD,KAAK,cAAe,QACpBnD,MAAM,qBAAsB,UAC5BmD,KAAK,YAbR,oBAakCd,GAblC,SAeAuE,EACGrD,UAAU,QACVlC,KAAKyE,IACLtC,QACAN,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,KAAK,SAAC2J,GAAD,OAAWkB,GAA0BlB,MAC/C3J,KAAK,IAvCa,IAwClBA,KAAK,QA1CU,IA2CfA,KAAK,SA3CU,IA4CfnD,MAAM,QAAQ,SAACd,EAAGE,GAAJ,OAAUqB,EAAMrB,MAC9B+D,KAAK,YAXR,oBAWkCd,GAXlC,SGiBA0C,CAAa6B,EAAKG,GA5BM,SAACiK,EAAOC,EAAStR,EAAGoH,EAAQuK,GACpD,IAAMtE,EAAQ9N,IAAEiK,MAAMmI,GAAQzN,UACxBoJ,EAAM/N,IAAEkK,KAAKkI,GAAQzN,UACrB0N,EAAgBlB,KAAOnD,SAASmD,KAAOpD,GAAKuD,KAAKxD,IAEvDgE,EAAM1J,OAAO,CAAC0F,EAAOC,IACrBgE,EAAQ3J,OAAO,CAAC,EAAGiK,EAAcC,YACjC7R,EAAE2H,OAAOxB,IACTiB,EAAOO,OAAOxB,IAwBdyB,CAAkByJ,EAAOC,EAAStR,EAAGoH,GAFrC1F,ELnD4B,SAACA,GAC7BA,EAAO0E,GAAyB1E,GAChC,IAAMkL,EAAcD,GAA2BjL,GAI/C,MAAO,CACLiQ,OAAQjQ,EACRkL,cACAqC,qBAN2BxB,GAAwB/L,GAOnDsM,kBANwBF,GAAoBlB,IK+CvC9E,CAAepG,IAE4BiQ,QATC,MD5CnB,SAAC1K,EAAKvF,GAItC,MAAO,CAAEoQ,WAHU1B,GAAkBnJ,EAAKwJ,IAGrBsB,eAFE3B,GAAkBnJ,GAAK,SAAC5D,GAAD,OAAOyN,GAAsBzN,EAAG3B,EAAKuN,qBAAsBvN,EAAKiQ,OAAOxK,YCoD9E6K,CAAmB/K,EAAKvF,GAAvDoQ,EAV2C,EAU3CA,WAAYC,EAV+B,EAU/BA,gBAZS,SAAC7O,EAAG0J,GAAgB1J,EAAEU,UAAU,SAASlC,KAAKkL,GAAa/I,QAAQN,OAAO,QAAQC,KAAK,QAAS,gBAa7HyO,CAAuB/O,EAAGxB,EAAKkL,aAE/BqE,GFvD0C,SAAC/N,EAAGmO,EAAOE,EAAWzQ,EAAO2N,GAA7B,OAC1CnI,OAAO,CACL4L,YAAa,WACX,IAAM3D,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAErD7D,GAAyBC,EAAiB8C,EAAO,EAAGvQ,EAAO2N,GAE3DvL,EAAEK,OAAO,KAAKC,KAAK,QAAS,UAAUA,KAAK,YAA3C,uBAAwE2K,GAAxE,MAAuFjJ,KAAKqM,IAE9Fa,aAAc,WACZ,IAAM7D,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAErDjP,EAAEU,UAAU,WAAWyO,SAEvB/D,GAAyBC,EAAiB8C,EAAO,EAAGvQ,EAAO2N,GAE3DU,GAAyBjM,EAAGiL,OEuCPmE,CAA6BpP,EAAGmO,EAAOE,EAAWnK,EAAQ0K,GAEnFd,GFrC0C,SAAC9N,EAAGxB,EAAM2P,EAAOE,EAAWtM,EAAOnE,EAAO2N,GAA1C,OAC1CnI,OAAO,CACLiM,aAAc,WACZ,IAAMhE,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAErDjD,GAAmBhM,EAAG+B,EAAOnE,GAC7BqO,GAAyBjM,EAAGiD,GAAegB,OAASgH,IACpDG,GAAyBC,EAAiB8C,EAAOvC,GAA6BhO,EAAO2N,IAEvF+D,aAAc,WACZ,IAAMjE,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAC/CM,EAAsB7C,GAAsClO,GAClE6M,EAAgB/K,KAAK,IAAKiP,GAAqBjP,KAAK,SAAS,gBAAG8J,EAAH,EAAGA,IAAKD,EAAR,EAAQA,MAAR,OAAoBgE,EAAM/D,GAAO+D,EAAMhE,MAEpGnK,EAAEU,UAAU,mBAAmByO,SAE/BnP,EAAEkM,OAAO,WAAW+C,YAAYxD,aAAazJ,KAAKqM,GAClDpC,GAAyBjM,EAAGiD,GAAegB,OAASgH,IAEpDG,GAAyBC,EAAiB8C,EAAOvC,GAA6BhO,EAAO2N,MEkBhEiE,CAA6BxP,EAAGxB,EAAM2P,EAAOE,EAAWtM,EAAOmC,EAAQ0K,GAEhGZ,GFhBqC,SAAChO,EAAGxB,EAAMiR,EAAa1N,EAAOnE,EAAOwP,GAArC,OACrChK,OAAO,CACL8L,aAAc,WAAO,IACXpE,EAA4CtM,EAA5CsM,kBAAmBiB,EAAyBvN,EAAzBuN,qBACrBV,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAC/CM,EAAsB7C,GAAsClO,GAElEwB,EAAEkM,OAAO,WAAWT,aAAazJ,KAAKyN,GACtCxD,GAAyBjM,EAAGiD,GAAegB,OAASgH,IAEpDO,GAAWH,EAAiB+B,GACzB3B,aACApB,SV9DyB,KU+DzB/J,KAAK,IAAKsL,IACVtL,KAAK,IAAKiP,GACVzO,GAAG,OAAO,WAETd,EAAEU,UAAU,iBAAiBJ,KAAK,IAAK,GAAGA,KAAK,QAASwL,GAAyChB,EAAmBiB,IACpHI,GAAuBnM,EAAGxB,OAGhCkR,oBAAqB,WACnB,IAAMrE,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAErDjP,EAAEU,UAAU,wBAAwByO,SACpCnP,EAAEU,UAAU,mBAAmByO,SAE/BnD,GAAmBhM,EAAG+B,EAAOnE,GAC7BqO,GAAyBjM,EAAGiD,GAAegB,OAASgH,IAEpDI,EACGI,aACApB,SAASsF,KACTrP,KAAK,KAAK,SAACH,GAAD,OAAO8K,GAAahI,GAAe4I,QAAQ1L,EAAE8J,UACvDwB,aACApB,SAASsF,KACTrP,KAAK,IAAK,GACVQ,GAAG,OAAO,kBAAMqL,GAAuBnM,EAAGxB,SErB7BoR,CAAwB5P,EAAGxB,EAAM+P,EAAaxM,EAAOmC,EAAQ2K,GAEjFZ,GFuB4C,SAACjO,EAAGxB,GAAJ,OAC5C4E,OAAO,CACLkM,aAAc,WAAO,IACX5F,EAAiElL,EAAjEkL,YAAaoB,EAAoDtM,EAApDsM,kBAAmBiB,EAAiCvN,EAAjCuN,qBAAsB0C,EAAWjQ,EAAXiQ,OACxDoB,EAA0BxT,IAAE2L,OAAO0B,GAAa,WAAY3D,GAAZ,IAAGkE,EAAH,EAAGA,MAAH,OAAsBa,EAAkBb,KAAWlE,KACnG+J,EAAkC,SAAC,GAAD,IAAG7F,EAAH,EAAGA,MAAH,OACrCoC,GAAsCpC,EAAO8B,GAAwBA,EAAqB9B,GAAS,GAAKxK,GAAUC,OAC/G2L,EAAkBrL,EAAEU,UAAU,iBAAiBuO,YAErDjP,EAAEU,UAAU,WAAWyO,SACvBnP,EAAEU,UAAU,mBAAmByO,SAE/BlD,GAAyBjM,EAAGiL,IAE5BI,EACGI,aACApB,SAASsF,KACTrP,KAAK,KAAK,gBAAG2J,EAAH,EAAGA,MAAH,OAAeoC,GAAsCpC,EAAO8B,GAAwBtM,GAAUC,SACxGY,KAAK,QAASwL,GAAyChB,EAAmBiB,IAC1EN,aACApB,SAASsF,KACTrP,KAAK,IAAK,GAEbN,EAAEU,UAAU,SACTlC,KAAKqR,GACLlP,QACAN,OAAO,QACPC,KAAK,QAAS,cACdnD,MAAM,cAAe,UACrBkD,OAAO,SACPxE,MAAK,gBAAGoO,EAAH,EAAGA,MAAH,OAAeuD,KAAOE,IAAI3B,EAAqB9B,GAASwE,EAAOxK,OV/G5C4J,KU+GwEJ,OAAO,YACvGnN,KAAK,IAAKwP,GACVxP,KAAK,IAAK,IACVD,OAAO,SACPxE,MAAK,gBAAGoO,EAAH,EAAGA,MAAH,gBAAkB5N,IAAE+P,MAAoC,IAA9BL,EAAqB9B,GAAc,GAA7D,QACL3J,KAAK,IAAKwP,GACVxP,KAAK,IAAK,OE3DUyP,CAA+B/P,EAAGxB,GAE7DuP,GAAuBiB,e,8BCnEZgB,GAAa,SAACC,GAAU,IAAD,EACVC,mBAAS,MADC,oBAC3B1R,EAD2B,KACrB2R,EADqB,KAQlC,OANAtR,qBAAU,WACR,wBAAC,6BAAAuR,EAAA,sEAC4BC,aAAIJ,GADhC,OACOK,EADP,OAECH,EAAQG,GAFT,0CAAD,KAIC,CAACL,IACGzR,GC2HM+R,GAtHuB,WACpC,IAAMC,EAAUR,GAAWS,MADe,EAEAP,oBAAS,GAFT,oBAEnCQ,EAFmC,KAEpBC,EAFoB,KAU1C,OACE,kBAACxV,EAAA,EAAD,KACE,yBAAKgC,MAAO,CAAEyT,SAAU,SAAUC,IAAK,QACrC,kBAAC,EAAD,CAAatS,SAViB,SAACwF,EAAKvF,GACnCkS,IACHC,GAAiB,GACjBzC,GAAoBnK,EAAKvF,KAO6BA,KAAMgS,KAE5D,yBAAKrT,MAAO,CAAE2T,aAAc,SAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,uuBAUJ,yBAAK7T,MAAO,CAAE2T,aAAc,UAC3BJ,GAAiB,kBAAC,GAAD,CAAmBxH,OAAQ4E,GAAuBuB,aAAcpG,KAAM8E,GAAuBmB,eAC/G,yBAAK/R,MAAO,CAAE2T,aAAc,UAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,sIACA,4BACE,gIACA,kIACA,4BACG,IADH,iJAGU,QAKhB,yBAAK7T,MAAO,CAAE2T,aAAc,UAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,2BACE,6CADF,+KAEyC,uFAEzC,2BACE,4CADF,8JAIA,2BACE,4CADF,qJAEuC,+CAFvC,KAIA,2BACE,4CADF,+DACkF,8CADlF,iBAC4H,IAC1H,6CAFF,6MAOJ,yBAAK7T,MAAO,CAAE2T,aAAc,UAC3BJ,GAAiB,kBAAC,GAAD,CAAmBxH,OAAQ8E,GAAkBkB,aAAcjG,KAAM6E,GAAuBwB,eAC1G,yBAAKnS,MAAO,CAAE2T,aAAc,UAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,gNAMJ,yBAAK7T,MAAO,CAAE2T,aAAc,UAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,mUAOJ,yBAAK7T,MAAO,CAAE2T,aAAc,UAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,wLAMJ,yBAAK7T,MAAO,CAAE2T,aAAc,UAC3BJ,GAAiB,kBAAC,GAAD,CAAmBxH,OAAQ+E,GAAyBqB,aAAcrG,KAAM+E,GAAkB0B,sBAC5G,yBAAKvS,MAAO,CAAE2T,aAAc,UAC5B,kBAACC,GAAA,EAAD,CAAM5W,UAAU,SAASgD,MAAO,CAAEyT,SAAU,aAC1C,kBAACI,GAAA,EAAD,KACE,qLAMJ,yBAAK7T,MAAO,CAAE2T,aAAc,UAE5B,yBAAK3T,MAAO,CAAE2T,aAAc,UAE5B,yBAAK3T,MAAO,CAAE2T,aAAc,UArG9B,S,UCuGWG,GA9GO,WACpB,IAAMC,EAAkBlB,GAAWmB,MAEnC,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEnV,UAAW,SACXC,SAAU,EACVC,MAAOL,GAAI,aACXM,SAAUN,GAAI,gBACdO,YAAaP,GAAI,qBAEnB,kBAACV,EAAA,EAAD,CAAWhB,UAAU,0BACnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,+BACb,kBAAC,GAAD,OAEF,+MAIA,yFACA,kBAAC,GAAD,MACA,maAKA,4BACE,6OAIA,oHACA,oHACA,qHAEF,uMAIA,yCACA,m7BASA,kBAAC,EAAD,CAAaoE,SAAUsG,GAAuBrG,KAAM0S,EAAkB,CAACA,GAAmB,OAC1F,uLAIA,4fAMA,wBAAI/W,UAAU,QAAd,eACA,wvBAQA,2BACE,oDAEF,6QAIA,uGAEE,uBAAGP,KAAK,sDAAsDS,OAAO,SAAS4D,IAAI,uBAC/E,IADH,qBAEqB,KAJvB,yDAQA,kBAAC,EAAD,CAAaM,SAAU8I,GAAmB7I,KAAM4S,GAAiB3S,QAAM,IACvE,uBAAGtE,UAAU,QAAb,4RAKA,6zBAQA,oEACA,kBAAC0D,EAAA,EAAD,CAAQD,MAAM,UAAUvC,GAAG,eAAeC,IAAKC,KAA/C,+BAIF,kBAAC,EAAD,Q,uGC1GA8V,GAAuB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC3B,kBAACC,GAAA,EAAD,CAAOC,KAAK,KAAKC,YAAU,GACzB,+BACE,4BACE,6BACA,6CACA,0CACA,4CACA,yCAGJ,+BACGH,EAAKnQ,KAAI,SAACgC,EAAK5G,GACd,OACE,wBAAIC,IAAKD,GACP,4BAAK4G,EAAI,IACRA,EAAIqJ,MAAM,GAAGrL,KAAI,SAACuQ,EAAIC,GAAL,OAChB,wBAAInV,IAAKmV,GAAID,aAyGZE,GAhGK,WAClB,IAAMV,EAAkBlB,GAAW6B,MAC7BC,EAAmB9B,GAAW+B,MAC9BC,EAA6BhC,GAAWiC,MACxCC,EAAoClC,GAAWmC,MAC/CC,EAA0BpC,GAAWqC,MAE3C,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CACErW,UAAW,SACXC,SAAU,EACVC,MAAOL,GAAI,aACXM,SAAUN,GAAI,gBACdO,YAAaP,GAAI,qBAEnB,kBAACV,EAAA,EAAD,CAAWhB,UAAU,qBACnB,kBAACkD,EAAA,EAAD,CAAKlD,UAAU,+BACb,kBAAC,GAAD,OAEF,iQAIA,2BACE,sDAEF,4BACE,4VAGyC,KAEzC,gbAKA,gVAMF,wBAAIA,UAAU,QAAd,gDACA,kBAAC,EAAD,CACEoE,SAAU,SAACwF,EAAKvF,GAAN,OAAesG,GAA2Bf,EAAKvF,EAAM,CAAC,aAAc,eAC9EA,KAAMsT,GAAoBZ,EAAkB,CAACY,EAAkBZ,GAAmB,OAEpF,kBAAC,GAAD,CACEI,KAAM,CACJ,CAAC,IAAK,GAAI,GAAI,GAAI,KAClB,CAAC,MAAO,GAAI,GAAI,GAAI,IACpB,CAAC,KAAM,GAAI,GAAI,GAAI,IACnB,CAAC,KAAM,GAAI,GAAI,GAAI,KACnB,CAAC,KAAM,GAAI,GAAI,GAAI,IACnB,CAAC,WAAY,GAAI,GAAI,GAAI,QAG7B,wBAAInX,UAAU,QAAd,8DACA,kBAAC,EAAD,CACEoE,SAAU,SAACwF,EAAKvF,GAAN,OAAesG,GAA2Bf,EAAKvF,EAAM,CAAC,aAAc,yBAC9EA,KAAM4T,GAA2BF,EAAoC,CAACE,EAAyBF,GAAqC,OAEtI,kBAAC,GAAD,CACEZ,KAAM,CACJ,CAAC,IAAK,GAAI,GAAI,GAAI,KAClB,CAAC,MAAO,GAAI,GAAI,GAAI,IACpB,CAAC,KAAM,GAAI,GAAI,GAAI,IACnB,CAAC,KAAM,GAAI,GAAI,GAAI,KACnB,CAAC,KAAM,GAAI,GAAI,GAAI,IACnB,CAAC,WAAY,GAAI,GAAI,GAAI,QAG7B,wBAAInX,UAAU,QAAd,iDACA,kBAAC,EAAD,CACEoE,SAAU,SAACwF,EAAKvF,GAAN,OAAesG,GAA2Bf,EAAKvF,EAAM,CAAC,sBAAuB,eACvFA,KAAMwT,GAA8Bd,EAAkB,CAACc,EAA4Bd,GAAmB,OAExG,kBAAC,GAAD,CACEI,KAAM,CACJ,CAAC,IAAK,GAAI,GAAI,GAAI,KAClB,CAAC,MAAO,GAAI,GAAI,GAAI,IACpB,CAAC,KAAM,GAAI,GAAI,GAAI,IACnB,CAAC,KAAM,GAAI,GAAI,GAAI,KACnB,CAAC,KAAM,GAAI,GAAI,GAAI,IACnB,CAAC,WAAY,GAAI,GAAI,GAAI,SAI/B,kBAAC,EAAD,QCrIAgB,G,iLACeC,GACbxX,KAAKL,MAAM8X,SAASC,WAAaF,EAAUC,SAASC,UACtD7K,OAAO8K,SAAS,EAAG,K,+BAKrB,OAAO3X,KAAKL,MAAMiY,a,GARI/X,IAAMkB,WAYjB8W,eAAWN,ICD1BO,IAASC,OACP,kBAAC,IAAD,CAAeC,SAAUC,aACvB,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAChD,KAAK,IAAI6C,OAAQ,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CACEG,OAAK,EACLhD,KAAK,mBACL6C,OAAQ,kBACN,wBAAI3Y,UAAU,IAAd,yBACwB,kBAAC,GAAD,CAAO6E,OAAO,2BAI1C,kBAAC,IAAD,CAAOiU,OAAK,EAAChD,KAAK,oBAAoB6C,OAAQ,kBAAM,kBAAC,GAAD,SACpD,kBAAC,IAAD,CAAOG,OAAK,EAAChD,KAAK,eAAe6C,OAAQ,kBAAM,kBAAC,GAAD,SAC/C,kBAAC,IAAD,CAAUzX,GAAG,SAInB6X,SAASC,eAAe,U,0YClC1B1Z,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.c7d4cd59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bcea7572.png\";","module.exports = __webpack_public_path__ + \"static/media/polymtl.3034d991.png\";","module.exports = __webpack_public_path__ + \"static/media/aep.fda414f1.png\";","module.exports = __webpack_public_path__ + \"static/media/protocase.53bfde7a.png\";","module.exports = __webpack_public_path__ + \"static/media/ntx.bdd09ab5.png\";","module.exports = __webpack_public_path__ + \"static/media/diptrace.e3ba6abc.png\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-predicted.426e51a0.csv\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-electrophysiologist.9ec7437f.csv\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-openbci-electrophysiologist.f61cd2b4.csv\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-openbci-predicted.c2f4d4bd.csv\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Headroom from 'headroom.js';\nimport { Navbar as NavbarStrap, Container, NavbarBrand, NavItem, Nav, NavLink, UncontrolledTooltip } from 'reactstrap';\n\nimport Logo from 'assets/img/logo.png';\nimport text from './text.json';\n\nconst OutsideLink = ({ href, iconClass, linkName, tooltipText, tooltipID }) => {\n  return (\n    <NavItem>\n      <NavLink className=\"nav-link-icon\" href={href} id={tooltipID} target=\"_blank\">\n        <i className={`fa ${iconClass}`} />\n        <span className=\"nav-link-inner--text d-lg-none ml-2\">{linkName}</span>\n      </NavLink>\n      <UncontrolledTooltip delay={0} target={tooltipID}>\n        {tooltipText}\n      </UncontrolledTooltip>\n    </NavItem>\n  );\n};\n\nOutsideLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  iconClass: PropTypes.string,\n  linkName: PropTypes.string,\n  tooltipText: PropTypes.string,\n  tooltipID: PropTypes.string.isRequired,\n};\n\nOutsideLink.defaultProps = {\n  iconClass: '',\n  linkName: '',\n  tooltipText: '',\n};\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navbarstrapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const headroom = new Headroom(this.navbarstrapRef);\n    headroom.init();\n  }\n\n  render() {\n    return (\n      <div ref={(ref) => (this.navbarstrapRef = ref)} className=\"navbar-main navbar-transparent navbar-light headroom\">\n        <NavbarStrap id=\"navbar-main\" expand=\"lg\">\n          <Container>\n            <NavbarBrand className=\"mr-lg-5\" to=\"/\" tag={Link}>\n              <img alt=\"Polydodo\" src={Logo} />\n            </NavbarBrand>\n\n            <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n              <NavItem>\n                <NavLink to=\"/\" tag={Link}>\n                  {text['navbar_home']}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/record-my-sleep\" tag={Link}>\n                  {text['navbar_record']}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/analyze-my-sleep\" tag={Link}>\n                  {text['navbar_analyze']}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/performance\" tag={Link}>\n                  {text['navbar_performance']}\n                </NavLink>\n              </NavItem>\n            </Nav>\n\n            <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n              <OutsideLink\n                href=\"https://www.facebook.com/PolyCortex/\"\n                iconClass=\"fa-facebook-square\"\n                linkName=\"Facebook\"\n                tooltipText={text['navbar_facebook_tooltip']}\n                tooltipID=\"tooltip333589074\"\n              />\n              <OutsideLink\n                href=\"https://www.instagram.com/polycortex/\"\n                iconClass=\"fa-instagram\"\n                linkName=\"Instagram\"\n                tooltipText={text['navbar_instagram_tooltip']}\n                tooltipID=\"tooltip356693867\"\n              />\n              <OutsideLink\n                href=\"https://github.com/PolyCortex\"\n                iconClass=\"fa-github\"\n                linkName=\"Github\"\n                tooltipText={text['navbar_github_tooltip']}\n                tooltipID=\"tooltip112445449\"\n              />\n            </Nav>\n          </Container>\n        </NavbarStrap>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Col, Container } from 'reactstrap';\n\nconst Header = ({ sizeClass, shapeQty, title, subtitle, description }) => {\n  return (\n    <section className={`section section-lg section-shaped ${sizeClass}`}>\n      <div className=\"shape shape-style-1 shape-dark\">\n        {_.times(shapeQty, (i) => (\n          <span key={i} />\n        ))}\n      </div>\n      <Container>\n        <div className=\"col px-0\">\n          <Col lg=\"6\">\n            <h1 className=\"display-3 text-white\">\n              {title}\n              <span>{subtitle}</span>\n            </h1>\n            <p className=\"lead text-white\">{description}</p>\n          </Col>\n        </div>\n      </Container>\n\n      <div className=\"separator separator-bottom separator-skew\">\n        <svg preserveAspectRatio=\"none\" viewBox=\"0 0 2560 100\" x=\"0\" y=\"0\">\n          <polygon className=\"fill-white\" points=\"2560 0 2560 110 0 100\" />\n        </svg>\n      </div>\n    </section>\n  );\n};\n\nHeader.propTypes = {\n  sizeClass: PropTypes.string,\n  shapeQty: PropTypes.number,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  description: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  sizeClass: 'pb-150',\n  shapeQty: 5,\n  title: '',\n  subtitle: '',\n  description: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row } from 'reactstrap';\n\nimport text from './text.json';\n\nimport Polymtl from '../../assets/img/partners/polymtl.png';\nimport AEP from '../../assets/img/partners/aep.png';\nimport Protocase from '../../assets/img/partners/protocase.png';\nimport NTX from '../../assets/img/partners/ntx.png';\nimport Diptrace from '../../assets/img/partners/diptrace.png';\n\nconst Partner = ({ img, alt, width }) => {\n  return <img alt={alt} className=\"img-center img-fluid\" src={img} style={{ width: `${width}px` }} />;\n};\n\nPartner.propTypes = {\n  img: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.number,\n};\n\nPartner.defaultProps = {\n  alt: '...',\n  width: 100,\n};\n\nconst Partners = () => {\n  return (\n    <Container>\n      <h3 className=\"mt-md mb-5\">{text['sponsor_thank-you']}</h3>\n      <Row className=\"align-items-center mb-5\">\n        <Partner alt=\"Polytechnique Montréal\" img={Polymtl} width={125} />\n        <Partner alt=\"Association Étudiante de Polytechnique\" img={AEP} width={125} />\n        <Partner alt=\"NeurotechX\" img={NTX} width={125} />\n        <Partner alt=\"Protocase\" img={Protocase} width={125} />\n        <Partner alt=\"Diptrace\" img={Diptrace} width={125} />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Partners;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from 'reactstrap';\n\nimport Partners from './partners';\nimport text from './text.json';\n\nconst PlatformButton = ({ href, color, iconClass, tooltipText, tooltipID }) => {\n  return (\n    <>\n      <Button className=\"btn-icon-only rounded-circle ml-1\" color={color} href={href} id={tooltipID} target=\"_blank\">\n        <span className=\"btn-inner--icon\">\n          <i className={`fa ${iconClass}`} />\n        </span>\n      </Button>\n      <UncontrolledTooltip delay={0} target={tooltipID}>\n        {tooltipText}\n      </UncontrolledTooltip>\n    </>\n  );\n};\n\nPlatformButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  iconClass: PropTypes.string,\n  tooltipText: PropTypes.string,\n  tooltipID: PropTypes.string.isRequired,\n};\n\nPlatformButton.defaultProps = {\n  color: 'secondary',\n  iconClass: '',\n  tooltipText: '',\n};\n\nconst Copyright = () => {\n  return (\n    <div className=\"copyright\">\n      © {new Date().getFullYear()}{' '}\n      <a href=\"http://polycortex.polymtl.ca/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {text['footer_copyright_polycortex']}\n      </a>\n    </div>\n  );\n};\n\nconst Navfooter = () => {\n  return (\n    <Nav className=\" nav-footer justify-content-end\">\n      <NavItem>\n        <NavLink href=\"http://polycortex.polymtl.ca/\" target=\"_blank\">\n          {text['footer_about-us']}\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href=\"https://github.com/PolyCortex\" target=\"_blank\">\n          {text['footer_license']}\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Partners />\n        <Container>\n          <hr />\n          <h3 className=\"text-primary font-weight-light mb-2\">{text['support_title']}</h3>\n          <Row className=\"row-grid align-items-center mb-5\">\n            <Col className=\"mt-sm\" lg=\"8\">\n              <h4 className=\" mb-3 font-weight-light\">{text['support_platforms']}</h4>\n              <PlatformButton\n                href=\"https://www.facebook.com/polycortex\"\n                color=\"facebook\"\n                iconClass=\"fa-facebook\"\n                tooltipText={text['support_facebook_tooltip']}\n                tooltipID=\"tooltip_facebook\"\n              />\n              <PlatformButton\n                href=\"https://www.instagram.com/polycortex/\"\n                color=\"instagram\"\n                iconClass=\"fa-instagram\"\n                tooltipText={text['support_instagram_tooltip']}\n                tooltipID=\"tooltip_instagram\"\n              />\n              <PlatformButton\n                href=\"https://github.com/PolyCortex\"\n                color=\"github\"\n                iconClass=\"fa-github\"\n                tooltipText={text['support_github_tooltip']}\n                tooltipID=\"tooltip_github\"\n              />\n            </Col>\n\n            <Col className=\"text-lg-right\" lg=\"4\">\n              <h4 className=\"mb-3 font-weight-light\">{text['support_donate_text']}</h4>\n              <Button color=\"success\" href=\"https://soutien.polymtl.ca/vie-etudiante\" target=\"_blank\">\n                {text['support_donate_button']}\n              </Button>\n            </Col>\n          </Row>\n          <hr />\n          <Row className=\" align-items-center justify-content-md-between\">\n            <Col md=\"6\">\n              <Copyright />\n            </Col>\n            <Col md=\"6\">\n              <Navfooter />\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner, Row, Col } from 'reactstrap';\n\nconst D3Component = React.memo(({ callback, data, useDiv = false }) => {\n  if (data === null)\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Spinner style={{ width: '3rem', height: '3rem' }} />\n        </Col>\n      </Row>\n    );\n  const ref = useRef();\n  useEffect(() => {\n    callback(ref.current, data);\n  });\n  return useDiv ? <div ref={ref} /> : <svg ref={ref} />;\n});\n\nD3Component.propTypes = {\n  callback: PropTypes.func.isRequired,\n  data: PropTypes.any,\n};\n\nexport default D3Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Emoji = ({ symbol, label }) => (\n  <span role=\"img\" aria-label={label} aria-hidden={label ? 'false' : 'true'}>\n    {symbol}\n  </span>\n);\n\nEmoji.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nEmoji.defaultProps = {\n  label: '',\n};\n\nexport default Emoji;\n","import React from 'react';\nimport { Alert } from 'reactstrap';\nimport Emoji from './emoji';\n\nconst WIPWarning = () => {\n  return (\n    <Alert color=\"warning\">\n      <span>\n        <Emoji symbol=\"🚧\" />\n        <strong> This is a work in progress. </strong>\n        The following data is mocked. <Emoji symbol=\"🚧\" />\n      </span>\n    </Alert>\n  );\n};\n\nexport default WIPWarning;\n","export const CANVAS_DIMENSION = {\n  WIDTH: 1000,\n  HEIGHT: 400,\n};\nexport const MARGIN = {\n  TOP: 100,\n  RIGHT: 10,\n  BOTTOM: 70,\n  LEFT: 70,\n};\nexport const DIMENSION = {\n  WIDTH: CANVAS_DIMENSION.WIDTH - MARGIN.LEFT - MARGIN.RIGHT,\n  HEIGHT: CANVAS_DIMENSION.HEIGHT - MARGIN.TOP - MARGIN.BOTTOM,\n};\nexport const COMPARATIVE_COLORS = {\n  Classifier: '#efce31',\n  'Sleep-EDF': '#006aff',\n  Electrophysiologist: '#ff7575',\n};\n","import * as d3 from 'd3';\nimport { DIMENSION, MARGIN } from './constants';\n\nconst getHoveredData = (data, x, mouse, bisectTime) => {\n  const timestamps = data[0].values.map((x) => x.timestamp);\n  const currentTimeDate = x.invert(mouse[0]);\n  const idx = bisectTime(timestamps, currentTimeDate, 1);\n  const epochIdx = currentTimeDate - timestamps[idx - 1] > timestamps[idx] - currentTimeDate ? idx : idx - 1;\n\n  return data.map((x) => {\n    x.currentValue = x.values[epochIdx];\n    return x;\n  });\n};\n\nconst createMouseOver = (g, x, y, data, color) => {\n  const { WIDTH, HEIGHT } = DIMENSION;\n  const bisectTime = d3.bisector((d) => d).left; // https://github.com/d3/d3-array#bisector_left\n\n  // Act as a child of `g` to make sure mouse events are received from the whole chart (not only the lines)\n  g.append('rect').attr('width', WIDTH).attr('height', HEIGHT).attr('opacity', 0);\n\n  const lineHover = g\n    .append('line')\n    .attr('class', 'lineHover')\n    .attr('y1', HEIGHT)\n    .attr('y2', 0)\n    .attr('stroke-width', 1)\n    .style('stroke', '#999')\n    .style('shape-rendering', 'crispEdges')\n    .style('opacity', 0);\n\n  const dateHover = g\n    .append('text')\n    .attr('class', 'lineHoverDate')\n    .attr('text-anchor', 'middle')\n    .attr('font-size', 15)\n    .attr('font-weight', 'bold')\n    .style('opacity', 0);\n\n  const circleHover = g\n    .selectAll('.hoverCircle')\n    .data(data)\n    .enter()\n    .append('circle')\n    .attr('class', 'hoverCircle')\n    .style('fill', 'none')\n    .attr('stroke', (x) => color(x.name))\n    .attr('r', 5)\n    .attr('stroke-width', '1px')\n    .style('opacity', 0);\n\n  const textHover = g\n    .selectAll('.textHover')\n    .data(data)\n    .enter()\n    .append('text')\n    .attr('class', 'textHover')\n    .style('fill', 'black')\n    .attr('text-anchor', 'start')\n    .attr('font-size', 12)\n    .style('opacity', 0)\n    .attr('stroke', (x) => color(x.name))\n    .attr('dy', (_, i) => 1 + i * 1.25 + 'em');\n\n  const mouseMove = function () {\n    const mouse = d3.mouse(this);\n\n    const hoveredData = getHoveredData(data, x, mouse, bisectTime);\n    const timestamp = hoveredData[0].currentValue.timestamp;\n\n    lineHover.attr('x1', mouse[0]).attr('x2', mouse[0]).style('opacity', 1);\n\n    dateHover\n      .text(d3.timeFormat('%H:%M:%S')(timestamp))\n      .attr('transform', `translate(${x(timestamp)},${HEIGHT + MARGIN.BOTTOM - 10})`)\n      .style('opacity', 1);\n\n    circleHover\n      .attr('cy', (x) => y(x.currentValue.sleepStage))\n      .attr('cx', x(timestamp))\n      .style('opacity', 1);\n\n    textHover\n      .attr('transform', `translate(${x(timestamp)},${(5 / 6) * HEIGHT})`)\n      .text((x) => `${x.name}: ${x.currentValue.sleepStage}`)\n      .style('opacity', 1);\n\n    x(timestamp) > (4 / 5) * WIDTH ? textHover.attr('text-anchor', 'end').attr('dx', -10) : textHover.attr('text-anchor', 'start').attr('dx', 10);\n  };\n\n  const mouseLeave = () => {\n    lineHover.style('opacity', 0);\n    dateHover.style('opacity', 0);\n    circleHover.style('opacity', 0);\n    textHover.style('opacity', 0);\n  };\n\n  g.on('mousemove', mouseMove).on('mouseleave', mouseLeave);\n};\n\nexport default createMouseOver;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport createMouseOver from './mouse_over';\nimport { DIMENSION, MARGIN } from './constants';\n\nconst createHypnogramChart = (g, data, x, y, xAxis, yAxis, color, chartTitle, hypnogramNames, comparativeColors) => {\n  const line = createLine(x, y);\n  const g_chart = g.append('g').attr('class', 'hypnogram-lines');\n  g_chart\n    .selectAll()\n    .data(data)\n    .enter()\n    .append('path')\n    .attr('class', 'line')\n    .attr('fill', 'none')\n    .attr('d', (x) => line(x.values))\n    .attr('stroke', (x) => color(x.name))\n    .attr('stroke-width', 2);\n\n  createMouseOver(g_chart, x, y, data, color);\n  createAxes(g, xAxis, yAxis);\n  createTitle(g, chartTitle);\n  createLegend(g, hypnogramNames, comparativeColors);\n};\n\nconst createLine = (x, y) =>\n  d3\n    .line()\n    .x((d) => x(d.timestamp))\n    .y((d) => y(d.sleepStage))\n    .curve(d3.curveStepAfter);\n\nconst createAxes = (g, xAxis, yAxis) => {\n  const { HEIGHT, WIDTH } = DIMENSION;\n\n  g.append('g').attr('class', 'x axis').attr('transform', `translate(0,${HEIGHT})`).call(xAxis);\n\n  g.append('g').attr('class', 'y axis').call(yAxis);\n\n  g.append('text')\n    .text('Time')\n    .attr('text-anchor', 'end')\n    .attr('x', WIDTH)\n    .attr('y', HEIGHT + (2 / 3) * MARGIN.BOTTOM);\n\n  g.append('text')\n    .text('Sleep stage')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -HEIGHT / 2)\n    .attr('y', -(2 / 3) * MARGIN.LEFT);\n};\n\nconst createTitle = (g, title) => {\n  g.append('text')\n    .text(title)\n    .attr('class', 'chart-title')\n    .attr('text-anchor', 'middle')\n    .attr('y', -(3 / 4) * MARGIN.TOP)\n    .attr('x', (1 / 2) * DIMENSION.WIDTH);\n};\n\nconst createLegend = (g, hypnogramNames, comparativeColors) => {\n  const legendData = _.zip(hypnogramNames, comparativeColors).map((x) => {\n    return {\n      name: x[0],\n      color: x[1],\n    };\n  });\n\n  g.selectAll('.rect.legend')\n    .data(legendData)\n    .enter()\n    .append('rect')\n    .attr('class', 'legend')\n    .attr('stroke-width', 1)\n    .attr('fill', (x) => x.color)\n    .attr('width', '1em')\n    .attr('height', '1em')\n    .attr('y', -(1 / 2) * MARGIN.TOP)\n    .attr('x', (_, i) => `${i * 8}em`);\n\n  g.selectAll('.text.legend')\n    .data(legendData)\n    .enter()\n    .append('text')\n    .attr('class', 'legend')\n    .text((x) => x.name)\n    .attr('font-size', 12)\n    .attr('dominant-baseline', 'hanging')\n    .attr('y', -(1 / 2) * MARGIN.TOP)\n    .attr('dy', 0.25 + 'em')\n    .attr('x', (_, i) => `${1.5 + i * 11}em`);\n};\n\nexport default createHypnogramChart;\n","export const TRANSITION_TIME_MS = 1000;\nexport const STAGE_TO_COLOR = {\n  W: '#E3624B',\n  N1: '#B0C9D9',\n  N2: '#4da6fe',\n  N3: '#48587f',\n  REM: '#FFD443',\n};\nexport const STAGES_ORDERED = ['W', 'REM', 'N1', 'N2', 'N3'];\nexport const EPOCH_DURATION_SEC = 30;\nexport const EPOCH_DURATION_MS = EPOCH_DURATION_SEC * 1000;\n","export const convertTimestampsToDates = (data) =>\n  data.map((row) =>\n    Object({\n      ...row,\n      timestamp: parseTimestampToDate(row.timestamp),\n    }),\n  );\n\nconst parseTimestampToDate = (timestamp) => {\n  // To convert UNIX timestamp to JS Date, we have to convert number of seconds to milliseconds.\n  const date = new Date(timestamp * 1000);\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDay(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n};\n","import * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport createHypnogramChart from './line_charts';\nimport { DIMENSION, MARGIN, COMPARATIVE_COLORS, CANVAS_DIMENSION } from './constants';\nimport { STAGES_ORDERED } from '../constants';\nimport { convertTimestampsToDates } from '../utils';\n\nconst initializeScales = (comparativeColors) =>\n  Object({\n    x: d3.scaleTime([0, DIMENSION.WIDTH]),\n    y: d3.scaleOrdinal(_.range(0, DIMENSION.HEIGHT + 1, DIMENSION.HEIGHT / STAGES_ORDERED.length)),\n    colors: d3.scaleOrdinal(comparativeColors),\n  });\n\nconst initializeAxes = (x, y) =>\n  Object({\n    xAxis: d3.axisBottom(x).tickFormat(d3.timeFormat('%H:%M')),\n    yAxis: d3.axisLeft(y),\n  });\n\nconst createDrawingGroup = (svg) => svg.append('g').attr('transform', `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`);\n\nconst preprocessData = (data, hypnogramNames) => {\n  data = data.map((hypno) => convertTimestampsToDates(hypno));\n\n  return _.zip(data, hypnogramNames).map((x) =>\n    Object({\n      name: x[1],\n      values: x[0],\n    }),\n  );\n};\n\nconst setDomainOnScales = (x, y, colors, data) => {\n  const dates = data[0].values.map((datum) => datum.timestamp);\n  x.domain([d3.min(dates), d3.max(dates)]);\n  y.domain(STAGES_ORDERED);\n  colors.domain(data.map((x) => x.name));\n};\n\nconst createHypnogram = (containerNode, data, chartTitle, hypnogramNames, comparativeColors) => {\n  const svg = d3.select(containerNode).attr('viewBox', `0, 0, ${CANVAS_DIMENSION.WIDTH}, ${CANVAS_DIMENSION.HEIGHT}`);\n  const { x, y, colors } = initializeScales(comparativeColors);\n  const { xAxis, yAxis } = initializeAxes(x, y);\n  const g = createDrawingGroup(svg);\n\n  data = preprocessData(data, hypnogramNames);\n  setDomainOnScales(x, y, colors, data);\n  createHypnogramChart(g, data, x, y, xAxis, yAxis, colors, chartTitle, hypnogramNames, comparativeColors);\n};\n\nexport const createSingleHypnogram = (containerNode, data) => {\n  createHypnogram(containerNode, data, 'Hypnogram', ['Classifier'], [COMPARATIVE_COLORS.Classifier]);\n};\n\nexport const createComparativeHypnogram = (containerNode, data, hypnogramNames) => {\n  createHypnogram(\n    containerNode,\n    data,\n    `Agreement between ${hypnogramNames[0]} and ${hypnogramNames[1]}`,\n    hypnogramNames,\n    hypnogramNames.map((x) => COMPARATIVE_COLORS[x]),\n  );\n};\n","export const PADDING = 100;\nexport const NB_SPECTROGRAM = 2;\nexport const FREQUENCY_KEY = 'frequencies';\nexport const NB_POINTS_COLOR_INTERPOLATION = 3;\nexport const TITLE_FONT_SIZE = '18px';\nexport const CANVAS_WIDTH_TO_HEIGHT_RATIO = 700 / 1000; // width to height ratio\nexport const CANVAS_HEIGHT_WINDOW_FACTOR = 0.8;\nexport const MARGIN = {\n  TOP: 50,\n  RIGHT: 120,\n  BOTTOM: 50,\n  LEFT: 70,\n};\n","import * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport {\n  MARGIN,\n  CANVAS_WIDTH_TO_HEIGHT_RATIO,\n  FREQUENCY_KEY,\n  TITLE_FONT_SIZE,\n  NB_SPECTROGRAM,\n  PADDING,\n  CANVAS_HEIGHT_WINDOW_FACTOR,\n} from './constants';\nimport { EPOCH_DURATION_SEC } from '../constants';\nimport { createLegend } from './legend';\n\nconst initializeScales = ({ spectrogramWidth, singleSpectrogramHeight }) =>\n  Object({\n    x: d3.scaleLinear([0, spectrogramWidth]),\n    yLinear: d3.scaleLinear([singleSpectrogramHeight, 0]),\n    yBand: d3.scaleBand([singleSpectrogramHeight, 0]),\n    yColor: d3.scaleLinear([singleSpectrogramHeight, 0]),\n    color: d3.scaleSequential().interpolator(d3.interpolatePlasma),\n  });\n\nconst initializeAxes = (x, y) =>\n  Object({\n    xAxis: d3.axisBottom(x).tickFormat((d) => `${d}h`),\n    yAxis: d3.axisLeft(y).ticks(5, 's'),\n  });\n\nconst setDomainOnScales = (currentData, frequencies, preprocessedData, x, yBand, yLinear, color, yColor) => {\n  x.domain([0, getHoursFromIndex(currentData.length)]);\n  yBand.domain(frequencies);\n  yLinear.domain([_.first(frequencies), _.last(frequencies)]);\n  color.domain(d3.extent(preprocessedData, ({ Intensity }) => Intensity));\n  yColor.domain(d3.extent(preprocessedData, ({ Intensity }) => Intensity));\n};\n\nconst preprocessData = (powerAmplitudesByTimestamp, frequencies) =>\n  _.flatMap(powerAmplitudesByTimestamp, (powerAmplitudeSingleTimestamp, index) =>\n    _.map(_.zip(powerAmplitudeSingleTimestamp, frequencies), ([intensity, frequency]) =>\n      Object({\n        Intensity: intensity,\n        Frequency: frequency,\n        Timestamp: getHoursFromIndex(index),\n      }),\n    ),\n  );\n\nconst getHoursFromIndex = (idx) => (idx * EPOCH_DURATION_SEC) / 3600;\n\nconst createDrawingGroups = (g, spectrogramWidth) =>\n  Object({\n    spectrogramDrawingGroup: g.append('g').attr('transform', `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`),\n    legendDrawingGroup: g.append('g').attr('transform', `translate(${MARGIN.LEFT + spectrogramWidth}, ${MARGIN.TOP})`),\n  });\n\nconst getScalesAndAxes = (data, channel, dimensions) => {\n  const { x, yLinear, yBand, yColor, color } = initializeScales(dimensions);\n  const { xAxis, yAxis } = initializeAxes(x, yLinear);\n  const preprocessedData = preprocessData(data[channel], data.frequencies);\n\n  setDomainOnScales(data[channel], data.frequencies, preprocessedData, x, yBand, yLinear, color, yColor);\n\n  return { data: preprocessedData, x, yBand, yColor, color, xAxis, yAxis };\n};\n\nconst createAxes = (g, xAxis, yAxis, singleSpectrogramHeight, spectrogramWidth) => {\n  g.append('text')\n    .attr('class', 'x axis')\n    .attr('y', singleSpectrogramHeight + MARGIN.BOTTOM)\n    .attr('x', spectrogramWidth / 2)\n    .attr('fill', 'currentColor')\n    .style('text-anchor', 'middle')\n    .text('Time');\n\n  g.append('text')\n    .attr('class', 'y axis')\n    .attr('transform', 'rotate(-90)')\n    .attr('y', -MARGIN.LEFT)\n    .attr('x', -singleSpectrogramHeight / 2)\n    .attr('dy', '1em')\n    .attr('fill', 'currentColor')\n    .style('text-anchor', 'middle')\n    .text('Frequency (Hz)');\n\n  g.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', `translate(0, ${singleSpectrogramHeight})`)\n    .call(xAxis)\n    .selectAll('text')\n    .style('font-size', TITLE_FONT_SIZE);\n\n  g.append('g').attr('class', 'y axis').call(yAxis).selectAll('text').style('font-size', TITLE_FONT_SIZE);\n};\n\nconst createTitle = (g, channelName, spectrogramWidth) =>\n  g\n    .append('text')\n    .attr('x', spectrogramWidth / 2)\n    .attr('y', -MARGIN.TOP / 3)\n    .style('text-anchor', 'middle')\n    .style('font-size', TITLE_FONT_SIZE)\n    .text(`Spectrogram of channel ${channelName}`);\n\nconst createSpectrogramRectangles = (canvas, scalesAndAxesBySpectrogram, { singleSpectrogramCanvasHeight }) => {\n  const context = canvas.node().getContext('2d');\n\n  _.each(scalesAndAxesBySpectrogram, ({ x, yBand, color, data }, index) => {\n    context.resetTransform();\n    context.translate(MARGIN.LEFT, MARGIN.TOP + index * singleSpectrogramCanvasHeight[index]);\n\n    _.each(data, ({ Timestamp, Frequency, Intensity }) => {\n      context.beginPath();\n      context.fillRect(x(Timestamp), yBand(Frequency), x(getHoursFromIndex(1)), yBand.bandwidth());\n      context.fillStyle = color(Intensity);\n      context.fill();\n      context.stroke();\n    });\n  });\n};\n\nconst createSpectrogramAxesAndLegend = (\n  svg,\n  scalesAndAxesBySpectrogram,\n  channelNames,\n  { canvasWidth, spectrogramWidth, singleSpectrogramCanvasHeight, singleSpectrogramHeight },\n) =>\n  _.forEach(_.zip(scalesAndAxesBySpectrogram, channelNames), ([{ xAxis, yAxis, color, yColor }, channel], index) => {\n    const currentSpectrogramDrawingGroup = svg\n      .append('g')\n      .attr('transform', `translate(0, ${index * singleSpectrogramCanvasHeight[index]})`)\n      .attr('width', canvasWidth)\n      .attr('height', singleSpectrogramCanvasHeight[index]);\n\n    const { spectrogramDrawingGroup, legendDrawingGroup } = createDrawingGroups(currentSpectrogramDrawingGroup, spectrogramWidth);\n\n    createTitle(spectrogramDrawingGroup, channel, spectrogramWidth);\n    createAxes(spectrogramDrawingGroup, xAxis, yAxis, singleSpectrogramHeight, spectrogramWidth);\n    createLegend(legendDrawingGroup, color, yColor, singleSpectrogramHeight);\n  });\n\nconst getSpectrogramCanvasHeight = (spectrogramHeight) =>\n  _.range(NB_SPECTROGRAM).map((x) => {\n    let height = spectrogramHeight / NB_SPECTROGRAM;\n    if (x === 0) {\n      height += MARGIN.TOP;\n    } else if (x === NB_SPECTROGRAM - 1) {\n      height += MARGIN.BOTTOM;\n    }\n    return height;\n  });\n\nconst createSpectrogram = (containerNode, data) => {\n  /*\n  Considering the number of rectangles to display is well over 1k,\n  we will use a canvas instead of a svg element to display the visualisation.\n  (https://stackoverflow.com/a/50143500).\n  We will seperatly create the axes and legend, overlaid over the canvas element, because d3-axis\n  module was only conceived to be used inside a svg element.\n  We have done so by setting the same dimensions to both svg and canvas, and then by\n  setting the first element's position, in this case the canvas, to absolute.\n  */\n  const parentDiv = d3.select(containerNode);\n  const canvasWidth = parentDiv.node().getBoundingClientRect().width;\n  const canvasHeight = Math.min(canvasWidth * CANVAS_WIDTH_TO_HEIGHT_RATIO, window.innerHeight * CANVAS_HEIGHT_WINDOW_FACTOR);\n  const dimensions = {\n    canvasWidth: canvasWidth,\n    canvasHeight: canvasHeight,\n    spectrogramWidth: canvasWidth - MARGIN.LEFT - MARGIN.RIGHT,\n    spectrogramsHeight: canvasHeight - MARGIN.TOP - MARGIN.BOTTOM,\n    singleSpectrogramCanvasHeight: getSpectrogramCanvasHeight(canvasHeight - MARGIN.TOP - MARGIN.BOTTOM),\n    singleSpectrogramHeight: (canvasHeight - MARGIN.BOTTOM - MARGIN.TOP - PADDING) / NB_SPECTROGRAM,\n  };\n\n  const channelNames = _.filter(_.keys(data), (keyName) => keyName !== FREQUENCY_KEY);\n  const scalesAndAxesBySpectrogram = _.map(channelNames, (name) => getScalesAndAxes(data, name, dimensions));\n\n  const canvas = parentDiv\n    .append('canvas')\n    .attr('width', dimensions.canvasWidth)\n    .attr('height', dimensions.canvasHeight)\n    .style('position', 'absolute');\n  const svg = parentDiv.append('svg').attr('width', dimensions.canvasWidth).attr('height', dimensions.canvasHeight);\n\n  createSpectrogramRectangles(canvas, scalesAndAxesBySpectrogram, dimensions);\n  createSpectrogramAxesAndLegend(svg, scalesAndAxesBySpectrogram, channelNames, dimensions);\n};\n\nexport default createSpectrogram;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\nimport { MARGIN, NB_POINTS_COLOR_INTERPOLATION, TITLE_FONT_SIZE } from './constants';\n\nexport const createLegend = (svg, color, y, spectrogramHeight) => {\n  const interpolate = d3.interpolate(color.domain()[0], color.domain()[1]);\n\n  const colors = _.map(_.range(NB_POINTS_COLOR_INTERPOLATION + 1), (x) => color(interpolate(x / NB_POINTS_COLOR_INTERPOLATION)));\n\n  const svgDefs = svg.append('defs');\n  const GRADIENT_ID = 'mainGradient';\n\n  svgDefs\n    .append('linearGradient')\n    .attr('id', GRADIENT_ID)\n    .attr('x1', '0%')\n    .attr('x2', '0%')\n    .attr('y1', '100%')\n    .attr('y2', '0%')\n    .selectAll('stop')\n    .data(colors)\n    .enter()\n    .append('stop')\n    .attr('stop-color', (d) => d)\n    .attr('offset', (_, i) => i / (colors.length - 1));\n  svg\n    .append('rect')\n    .attr('fill', `url(#${GRADIENT_ID})`)\n    .attr('x', MARGIN.RIGHT / 10)\n    .attr('y', 0)\n    .attr('width', MARGIN.RIGHT / 6)\n    .attr('height', spectrogramHeight);\n\n  const yAxis = d3.axisRight(y).ticks(5, 's');\n  svg\n    .append('g')\n    .attr('class', 'y axis')\n    .attr('transform', `translate(${MARGIN.RIGHT / 3.7},0)`)\n    .call(yAxis)\n    .selectAll('text');\n\n  svg\n    .append('text')\n    .attr('class', 'y axis')\n    .attr('transform', 'rotate(90)')\n    .attr('y', -MARGIN.RIGHT)\n    .attr('x', spectrogramHeight / 2)\n    .attr('dy', '1em')\n    .attr('fill', 'currentColor')\n    .style('text-anchor', 'middle')\n    .style('font-size', TITLE_FONT_SIZE)\n    .text('Power (uV²/Hz)');\n};\n","import React from 'react';\nimport { Waypoint } from 'react-waypoint';\n\nconst WaypointDirection = ({ onUp = () => {}, onDown = () => {} }) => (\n  <Waypoint onEnter={({ previousPosition }) => (previousPosition === Waypoint.below ? onDown() : onUp())} bottomOffset=\"99%\" fireOnRapidScroll />\n);\n\nexport default WaypointDirection;\n","import _ from 'lodash';\n\nimport { convertTimestampsToDates } from '../utils';\nimport { STAGES_ORDERED, EPOCH_DURATION_SEC } from '../constants';\n\nexport const preprocessData = (data) => {\n  data = convertTimestampsToDates(data);\n  const annotations = convertEpochsToAnnotations(data);\n  const stageTimeProportions = getStageTimeProportions(data);\n  const firstStageIndexes = findFirstStageIndex(annotations);\n\n  return {\n    epochs: data,\n    annotations,\n    stageTimeProportions,\n    firstStageIndexes,\n  };\n};\n\nconst convertEpochsToAnnotations = (data) => {\n  const annotations = [];\n  const nbEpochs = data.length;\n  let currentAnnotationStart = data[0].timestamp;\n  let currentSleepStage = data[0].sleepStage;\n  let currentAnnotationEpochCount = 0;\n\n  const isNextAnnotation = (sleepStage, index) => sleepStage !== currentSleepStage || index === data.length - 1;\n\n  const saveCurrentAnnotation = (timestamp) => {\n    annotations.push({\n      stage: currentSleepStage,\n      proportion: currentAnnotationEpochCount / nbEpochs,\n      start: currentAnnotationStart,\n      end: timestamp,\n      duration: currentAnnotationEpochCount * EPOCH_DURATION_SEC,\n    });\n  };\n\n  data.forEach(({ timestamp, sleepStage }, index) => {\n    currentAnnotationEpochCount++;\n\n    if (isNextAnnotation(sleepStage, index)) {\n      saveCurrentAnnotation(timestamp);\n      currentAnnotationStart = timestamp;\n      currentSleepStage = sleepStage;\n      currentAnnotationEpochCount = 0;\n    }\n  });\n\n  return annotations;\n};\n\nconst getStageTimeProportions = (data) => {\n  const nbEpochPerSleepStage = _.countBy(data.map((x) => x.sleepStage));\n  const proportionPerSleepStage = _.mapValues(nbEpochPerSleepStage, (countPerStage) => countPerStage / data.length);\n\n  return proportionPerSleepStage;\n};\n\n//Finds the index of the first element of each sleep stage (for Viz 3)\nconst findFirstStageIndex = (annotations) =>\n  STAGES_ORDERED.reduce(\n    (firstStageIndexes, stage) =>\n      Object({\n        ...firstStageIndexes,\n        [stage]: annotations.findIndex((element) => element.stage === stage),\n      }),\n    {},\n  );\n","import { STAGES_ORDERED } from '../constants';\n\nexport const CANVAS_DIMENSION = {\n  WIDTH: 1000,\n  HEIGHT: 600,\n};\nexport const MARGIN = {\n  TOP: 90,\n  RIGHT: 70,\n  BOTTOM: 50,\n  LEFT: 70,\n};\nexport const DIMENSION = {\n  WIDTH: CANVAS_DIMENSION.WIDTH - MARGIN.LEFT - MARGIN.RIGHT,\n  HEIGHT: CANVAS_DIMENSION.HEIGHT - MARGIN.TOP - MARGIN.BOTTOM,\n};\n\nexport const BAR_HEIGHT = DIMENSION.HEIGHT / STAGES_ORDERED.length;\n","import { STAGES_ORDERED } from 'd3/constants';\nimport { MARGIN } from './constants';\n\nconst SQUARE_SIZE = 20;\nconst LABEL_Y_OFFSET = 55;\nconst COLOR_Y_OFFSET = 40;\nconst MAP_STAGE_TO_LABEL_OFFSET = {\n  W: 0,\n  REM: 55,\n  N1: 135,\n  N2: 200,\n  N3: 270,\n};\nconst MAP_STAGE_TO_COLOR_OFFSET = {\n  W: MAP_STAGE_TO_LABEL_OFFSET.W + 25,\n  REM: MAP_STAGE_TO_LABEL_OFFSET.REM + 50,\n  N1: MAP_STAGE_TO_LABEL_OFFSET.N1 + 35,\n  N2: MAP_STAGE_TO_LABEL_OFFSET.N2 + 35,\n  N3: MAP_STAGE_TO_LABEL_OFFSET.N3 + 35,\n};\n\nexport const createLegend = (svg, color) => {\n  svg\n    .selectAll('names')\n    .data(STAGES_ORDERED)\n    .enter()\n    .append('text')\n    .attr('class', 'legend')\n    .attr('x', (stage) => MAP_STAGE_TO_LABEL_OFFSET[stage])\n    .attr('y', LABEL_Y_OFFSET)\n    .text((d) => d)\n    .style('fill', (_, i) => color(i))\n    .style('font-size', '20px')\n    .attr('text-anchor', 'left')\n    .style('alignment-baseline', 'middle')\n    .attr('transform', `translate(${MARGIN.LEFT}, 0)`);\n\n  svg\n    .selectAll('dots')\n    .data(STAGES_ORDERED)\n    .enter()\n    .append('rect')\n    .attr('class', 'legend')\n    .attr('x', (stage) => MAP_STAGE_TO_COLOR_OFFSET[stage])\n    .attr('y', COLOR_Y_OFFSET)\n    .attr('width', SQUARE_SIZE)\n    .attr('height', SQUARE_SIZE)\n    .style('fill', (_, i) => color(i))\n    .attr('transform', `translate(${MARGIN.LEFT}, 0)`);\n};\n","import * as d3 from 'd3';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { BAR_HEIGHT, DIMENSION } from './constants';\nimport { EPOCH_DURATION_MS, TRANSITION_TIME_MS, STAGES_ORDERED } from '../constants';\n\nexport const createTimelineChartCallbacks = (g, xTime, xTimeAxis, color, tooltip) =>\n  Object({\n    fromInitial: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      setAttrOnAnnotationRects(annotationRects, xTime, 0, color, tooltip);\n\n      g.append('g').attr('class', 'x axis').attr('transform', `translate(0, ${BAR_HEIGHT})`).call(xTimeAxis);\n    },\n    fromInstance: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      g.selectAll('.y.axis').remove();\n\n      setAttrOnAnnotationRects(annotationRects, xTime, 0, color, tooltip);\n\n      transitionHorizontalAxis(g, BAR_HEIGHT);\n    },\n  });\n\nexport const createInstanceChartCallbacks = (g, data, xTime, xTimeAxis, yAxis, color, tooltip) =>\n  Object({\n    fromTimeline: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      createVerticalAxis(g, yAxis, color);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n      setAttrOnAnnotationRects(annotationRects, xTime, getVerticalPositionCallback, color, tooltip);\n    },\n    fromBarChart: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n      const xProportionCallback = getOffsetSleepStageProportionCallback(data);\n      annotationRects.attr('x', xProportionCallback).attr('width', ({ end, start }) => xTime(end) - xTime(start));\n\n      g.selectAll('text.proportion').remove();\n\n      g.select('.x.axis').interrupt().transition().call(xTimeAxis);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n\n      setAttrOnAnnotationRects(annotationRects, xTime, getVerticalPositionCallback, color, tooltip);\n    },\n  });\n\nexport const createBarChartCallbacks = (g, data, xAxisLinear, yAxis, color, tip) =>\n  Object({\n    fromInstance: () => {\n      const { firstStageIndexes, stageTimeProportions } = data;\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n      const xProportionCallback = getOffsetSleepStageProportionCallback(data);\n\n      g.select('.x.axis').transition().call(xAxisLinear);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n\n      setTooltip(annotationRects, tip)\n        .transition()\n        .duration(TRANSITION_TIME_MS)\n        .attr('y', getVerticalPositionCallback)\n        .attr('x', xProportionCallback)\n        .on('end', () => {\n          // Only keep the first rectangle of each stage to be visible\n          g.selectAll('.rect-stacked').attr('x', 0).attr('width', getFirstRectangleProportionWidthCallback(firstStageIndexes, stageTimeProportions));\n          createProportionLabels(g, data);\n        });\n    },\n    fromStackedBarChart: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      g.selectAll('text.label-sleepType').remove();\n      g.selectAll('text.proportion').remove();\n\n      createVerticalAxis(g, yAxis, color);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n\n      annotationRects\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('y', (d) => BAR_HEIGHT * STAGES_ORDERED.indexOf(d.stage))\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('x', 0)\n        .on('end', () => createProportionLabels(g, data));\n    },\n  });\n\nexport const createStackedBarChartCallbacks = (g, data) =>\n  Object({\n    fromBarChart: () => {\n      const { annotations, firstStageIndexes, stageTimeProportions, epochs } = data;\n      const firstAnnotationsByStage = _.filter(annotations, ({ stage }, index) => firstStageIndexes[stage] === index);\n      const getHorizontalPositionSleepStage = ({ stage }) =>\n        (getCumulativeProportionOfNightAtStart(stage, stageTimeProportions) + stageTimeProportions[stage] / 2) * DIMENSION.WIDTH;\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      g.selectAll('.y.axis').remove();\n      g.selectAll('text.proportion').remove();\n\n      transitionHorizontalAxis(g, BAR_HEIGHT);\n\n      annotationRects\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('x', ({ stage }) => getCumulativeProportionOfNightAtStart(stage, stageTimeProportions) * DIMENSION.WIDTH)\n        .attr('width', getFirstRectangleProportionWidthCallback(firstStageIndexes, stageTimeProportions))\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('y', 0);\n\n      g.selectAll('.text')\n        .data(firstAnnotationsByStage)\n        .enter()\n        .append('text')\n        .attr('class', 'proportion')\n        .style('text-anchor', 'middle')\n        .append('tspan')\n        .text(({ stage }) => moment.utc(stageTimeProportions[stage] * epochs.length * EPOCH_DURATION_MS).format('HH:mm'))\n        .attr('x', getHorizontalPositionSleepStage)\n        .attr('y', 40)\n        .append('tspan')\n        .text(({ stage }) => `${_.round(stageTimeProportions[stage] * 100, 2)}%`)\n        .attr('x', getHorizontalPositionSleepStage)\n        .attr('y', 60);\n    },\n  });\n\nconst setAttrOnAnnotationRects = (annotationRects, x, yPosition, color, tooltip) =>\n  setTooltip(annotationRects, tooltip)\n    .attr('height', BAR_HEIGHT)\n    .transition()\n    .duration(TRANSITION_TIME_MS)\n    .attr('x', ({ start }) => x(start))\n    .attr('y', yPosition)\n    .attr('width', ({ end, start }) => x(end) - x(start))\n    .attr('fill', ({ stage }) => color(stage));\n\nconst setTooltip = (element, tooltip) =>\n  element\n    .on('mouseover', function (d) {\n      tooltip.show(d, this);\n      d3.select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function () {\n      tooltip.hide();\n      d3.select(this).style('opacity', 1);\n    });\n\nconst getVerticalPositionCallback = (d) => BAR_HEIGHT * STAGES_ORDERED.indexOf(d.stage);\n\nconst getFirstRectangleProportionWidthCallback = (firstStageIndexes, stageTimeProportions) => ({ stage }, i) =>\n  i === firstStageIndexes[stage] ? stageTimeProportions[stage] * DIMENSION.WIDTH : 0;\n\nconst createVerticalAxis = (g, yAxis, color) =>\n  g\n    .append('g')\n    .attr('class', 'y axis')\n    .style('font-size', '1.5rem')\n    .transition()\n    .duration(TRANSITION_TIME_MS)\n    .call(yAxis)\n    .selectAll('text')\n    .attr('class', 'y-label')\n    .attr('y', BAR_HEIGHT / 2)\n    .attr('x', -10)\n    .style('fill', (d) => color(d))\n    .attr('text-anchor', 'left')\n    .style('alignment-baseline', 'middle');\n\nconst transitionHorizontalAxis = (g, yPosition) =>\n  g.select('.x.axis').transition().duration(TRANSITION_TIME_MS).attr('transform', `translate(0, ${yPosition})`);\n\nconst createProportionLabels = (g, data) =>\n  g\n    .selectAll('text.proportion')\n    .data(data.annotations)\n    .enter()\n    .append('text')\n    .attr('class', 'proportion')\n    .text(({ stage }, i) => (i === data.firstStageIndexes[stage] ? `${_.round(data.stageTimeProportions[stage] * 100, 2)}%` : ''))\n    .attr('x', DIMENSION.WIDTH / 20)\n    .attr('y', ({ stage }) => BAR_HEIGHT * STAGES_ORDERED.indexOf(stage) + BAR_HEIGHT / 2)\n    .style('fill', 'black');\n\nconst getCumulativeProportionOfNightAtStart = (stage, totalStageProportions) =>\n  _.sum(\n    _.slice(\n      STAGES_ORDERED.map((stage_ordered) => totalStageProportions[stage_ordered]),\n      0,\n      _.indexOf(STAGES_ORDERED, stage),\n    ),\n  );\n\nconst getOffsetSleepStageProportionCallback = (data) => {\n  const { annotations, stageTimeProportions } = data;\n  const cumulSumProportions = cumulSum(\n    _.mapValues(stageTimeProportions, (proportion, stage) =>\n      _.filter(annotations, (d) => d.stage === stage).map((annotation) => annotation.proportion / proportion),\n    ),\n  );\n  const annotationIndexSleepStage = annotations.map((annotation) => {\n    return _.indexOf(\n      _.filter(annotations, (d) => d.stage === annotation.stage),\n      annotation,\n    );\n  });\n\n  return (d, index) => DIMENSION.WIDTH * stageTimeProportions[d.stage] * cumulSumProportions[d.stage][annotationIndexSleepStage[index]];\n};\n\nconst cumulSum = (annotationsProportionByStage) =>\n  _.mapValues(annotationsProportionByStage, (annotationsProportion) => {\n    const currentCumulSum = [0];\n    annotationsProportion.forEach((proportion, index) => {\n      if (index !== annotationsProportion.length - 1) {\n        currentCumulSum.push(proportion + currentCumulSum[index]);\n      }\n    });\n    return currentCumulSum;\n  });\n","import tip from 'd3-tip';\nimport moment from 'moment';\n\nimport { EPOCH_DURATION_MS } from '../constants';\n\nexport const initializeTooltips = (svg, data) => {\n  const barToolTip = initializeTooltip(svg, getBarToolTipText);\n  const stackedToolTip = initializeTooltip(svg, (d) => getStackedToolTipText(d, data.stageTimeProportions, data.epochs.length));\n\n  return { barToolTip, stackedToolTip };\n};\n\nconst initializeTooltip = (svg, getToolTipText) => {\n  const tooltip = tip().attr('class', 'd3-tip').offset([-10, 0]);\n  svg.call(tooltip);\n  tooltip.html(getToolTipText);\n\n  return tooltip;\n};\n\nconst getBarToolTipText = (d) => {\n  return `Stage : <strong> ${d.stage} </strong> <br>\n            Range  :  <strong> ${moment(d.start).format('HH:mm:ss')} </strong>\n              - <strong> ${moment(d.end).format('HH:mm:ss')} </strong> <br>\n            Duration: <strong> ${moment.utc(moment(d.end).diff(d.start)).format('HH:mm:ss')} </strong>`;\n};\n\nconst getStackedToolTipText = (d, stageTimeProportions, nbEpochs) =>\n  `Stage : <strong> ${d.stage} </strong><br>  Duration : <strong> ${moment\n    .utc(stageTimeProportions[d.stage] * nbEpochs * EPOCH_DURATION_MS)\n    .format('HH:mm:ss')} </strong><br>`;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { preprocessData } from './preproc';\nimport { createLegend } from './legend';\nimport { createTimelineChartCallbacks, createInstanceChartCallbacks, createBarChartCallbacks, createStackedBarChartCallbacks } from './chart_states';\nimport { MARGIN, CANVAS_DIMENSION, BAR_HEIGHT, DIMENSION } from './constants';\nimport { STAGES_ORDERED, STAGE_TO_COLOR } from '../constants';\nimport { initializeTooltips } from './mouse_over';\n\nexport let instanceChartCallbacks = {};\nexport let timelineChartCallbacks = {};\nexport let barChartCallbacks = {};\nexport let stackedBarChartCallbacks = {};\n\nconst initializeScales = () => {\n  const { WIDTH, HEIGHT } = DIMENSION;\n  const xTime = d3.scaleTime([0, WIDTH]);\n  const xLinear = d3.scaleLinear([0, WIDTH]);\n  const y = d3.scaleOrdinal(_.range(0, HEIGHT + 1, BAR_HEIGHT));\n  const colors = d3.scaleOrdinal(STAGES_ORDERED.map((x) => STAGE_TO_COLOR[x]));\n\n  return { xTime, xLinear, y, colors };\n};\n\nconst setDomainOnScales = (xTime, xLinear, y, colors, epochs) => {\n  const start = _.first(epochs).timestamp;\n  const end = _.last(epochs).timestamp;\n  const nightDuration = moment.duration(moment(end).diff(start));\n\n  xTime.domain([start, end]);\n  xLinear.domain([0, nightDuration.asHours()]);\n  y.domain(STAGES_ORDERED);\n  colors.domain(STAGES_ORDERED);\n};\n\nconst initializeAxes = (xTime, xLinear, y) => {\n  const xTimeAxis = d3.axisBottom(xTime).tickFormat((d) => `${d.getHours()}h`);\n  const xLinearAxis = d3.axisBottom(xLinear).tickFormat((d) => `${d}h`);\n  const yAxis = d3.axisLeft(y).tickSize(-DIMENSION.WIDTH); //will create the lines in second visualisation\n\n  return { xTimeAxis, xLinearAxis, yAxis };\n};\n\nconst createDrawingGroup = (svg) => svg.append('g').attr('transform', `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`);\n\nconst bindAnnotationsToRects = (g, annotations) => g.selectAll('.rect').data(annotations).enter().append('rect').attr('class', 'rect-stacked');\n\nconst createEvolvingChart = (containerNode, data) => {\n  const svg = d3.select(containerNode).attr('viewBox', `0, 0, ${CANVAS_DIMENSION.WIDTH}, ${CANVAS_DIMENSION.HEIGHT}`);\n  const { xTime, xLinear, y, colors } = initializeScales();\n  const { xTimeAxis, xLinearAxis, yAxis } = initializeAxes(xTime, xLinear, y);\n  const g = createDrawingGroup(svg);\n  createLegend(svg, colors);\n\n  data = preprocessData(data);\n\n  setDomainOnScales(xTime, xLinear, y, colors, data.epochs);\n  const { barToolTip, stackedToolTip } = initializeTooltips(svg, data);\n  bindAnnotationsToRects(g, data.annotations);\n\n  timelineChartCallbacks = createTimelineChartCallbacks(g, xTime, xTimeAxis, colors, barToolTip);\n\n  instanceChartCallbacks = createInstanceChartCallbacks(g, data, xTime, xTimeAxis, yAxis, colors, barToolTip);\n\n  barChartCallbacks = createBarChartCallbacks(g, data, xLinearAxis, yAxis, colors, stackedToolTip);\n\n  stackedBarChartCallbacks = createStackedBarChartCallbacks(g, data);\n\n  timelineChartCallbacks.fromInitial();\n};\n\nexport default createEvolvingChart;\n","import { useEffect, useState } from 'react';\nimport { csv } from 'd3';\n\nexport const useCSVData = (path) => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const receivedData = await csv(path);\n      setData(receivedData);\n    })();\n  }, [path]);\n  return data;\n};\n","import React, { useState } from 'react';\nimport { Container, Card, CardBody } from 'reactstrap';\n\nimport hypnogramCSVPath from 'assets/data/hypnogram.csv';\n\nimport D3Component from '../../components/d3component';\nimport WaypointDirection from '../../components/waypoint_direction';\n\nimport createEvolvingChart, {\n  instanceChartCallbacks,\n  timelineChartCallbacks,\n  barChartCallbacks,\n  stackedBarChartCallbacks,\n} from '../../d3/evolving_chart/evolving_chart';\nimport { useCSVData } from '../../hooks/api_hooks';\n\nconst StackedBarChartScrollyTelling = () => {\n  const csvData = useCSVData(hypnogramCSVPath);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const createEvolvingChartCallback = (svg, data) => {\n    if (!isInitialized) {\n      setIsInitialized(true);\n      createEvolvingChart(svg, data);\n    }\n  };\n\n  return (\n    <Container>\n      <div style={{ position: 'sticky', top: '10%' }}>\n        <D3Component callback={createEvolvingChartCallback} data={csvData} />\n      </div>\n      <div style={{ marginBottom: '50%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We can see that each colored block represents a part of your night. They are ordered from bed time to out of bed timestamps you’ve written\n            in your journal. Each color is associated with a specific sleep stage. You went to bed at 12:22 am and you got out of bed at 9:47 am,\n            which adds up to 9 hours and 25 minutes of time spent in bed. Of this total time, you spent 7 hours and 27 minutes actually sleeping. You\n            first fell asleep at XX:XX, to which we will refer to as sleep onset. The last non wake block ended at XX:XX, which can also be referred\n            to as sleep offset. During that night's sleep, you went through each of the 5 five stages. Let's try to see a little better what happened\n            about each of them.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {isInitialized && <WaypointDirection onDown={instanceChartCallbacks.fromTimeline} onUp={timelineChartCallbacks.fromInstance} />}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>Wake stage is of course the stage we want to minimize when in bed. It can be decomposed into two parts:</p>\n          <ul>\n            <li> Sleep latency : Time spent before falling asleep, which corresponds to X minutes in your case. </li>\n            <li> Wake after sleep onset (WASO): Time spent awake after first falling asleep and before waking up. </li>\n            <li>\n              {' '}\n              For healthy adults, it is normal to experience small awakenings during the night. Unprovoked awakenings are mostly during or after REM\n              stages.{' '}\n            </li>\n          </ul>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            <strong>REM stage</strong> stands for “Rapid Eyes Movements” and is also known as “paradoxical sleep”. It is associated with dreaming and,\n            as the National Sleep Foundation says, <strong>“the brain is awake and body paralyzed.”</strong>\n          </p>\n          <p>\n            <strong>N1 stage</strong> is associated with that drowsy feeling before falling asleep. Most people wouldn’t say they fell asleep if\n            they’ve been woken up from N1 sleep.\n          </p>\n          <p>\n            <strong>N2 stage</strong> still corresponds to a light sleep, but where the muscle activity decreases more, and the eyes have stopped\n            moving. It is called, along with N1, <strong>light sleep</strong>.\n          </p>\n          <p>\n            <strong>N3 stage</strong> is when you are deeply asleep, hence it’s also called <strong>deep sleep</strong>, or sometimes{' '}\n            <strong>slow wave</strong> sleep, and is the most difficult to wake up from. It is during those stages that your cells get repaired, and\n            that tissue grows. But how much time did you spend in each stage during the whole night?\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {isInitialized && <WaypointDirection onDown={barChartCallbacks.fromInstance} onUp={instanceChartCallbacks.fromBarChart} />}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            From here, we can look at your sleep efficiency, which is the proportion of time spent asleep over the overall time spent in bed. In your\n            case, it corresponds to 79%, or 7h27.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We are currently looking at your in bed sleep stage proportions. Wake time may be overrepresented, because it includes your sleep latency\n            and the time you spent in bed after waking up. In order to look at your actual stage proportions, we must cut them out from wake time to\n            only keep WASO.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We can see that the most prominent sleep stage is N2, which in your case corresponds to XXXX. How does your night compare to other\n            people’s night?\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {isInitialized && <WaypointDirection onDown={stackedBarChartCallbacks.fromBarChart} onUp={barChartCallbacks.fromStackedBarChart} />}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            As a rule of thumb, adults approximately stay 5% of their total sleep time in N1; 50% in N2; and 20% is in N3. The remaining 25% is REM\n            stage sleep.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {/* <WaypointDirection onDown={} /> */}\n      <div style={{ marginBottom: '125%' }} />\n      {/* <WaypointDirection onDown={} /> */}\n      <div style={{ marginBottom: '125%' }} />\n      &nbsp;\n    </Container>\n  );\n};\n\nexport default StackedBarChartScrollyTelling;\n","import React from 'react';\nimport { Container, Row, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport Navbar from '../../components/navbar/navbar';\nimport Header from '../../components/header';\nimport Footer from '../../components/footer/footer';\nimport D3Component from '../../components/d3component';\nimport WIPWarning from '../../components/wip_warning';\n\nimport { createSingleHypnogram } from '../../d3/hypnogram/hypnogram';\n\nimport text from './text.json';\nimport createSpectrogram from '../../d3/spectrogram/spectrogram';\nimport StackedBarChartScrollyTelling from './stacked_bar_chart_scrollytelling';\nimport { useCSVData } from '../../hooks/api_hooks';\n\nimport hypnogramDataSleepEDFPath from 'assets/data/hypnogram.csv';\nimport spectrogramData from 'assets/data/spectrograms.json';\n\nconst SleepAnalysis = () => {\n  const csvDataSleepEDF = useCSVData(hypnogramDataSleepEDFPath);\n\n  return (\n    <div>\n      <Navbar />\n      <Header\n        sizeClass={'pb-150'}\n        shapeQty={7}\n        title={text['header_title']}\n        subtitle={text['header_subtitle']}\n        description={text['header_description']}\n      />\n      <Container className=\"mt-5 mb-5 text-justify\">\n        <Row className=\"mb-5 justify-content-center\">\n          <WIPWarning />\n        </Row>\n        <p>\n          Of course, we are analyzing only one night of sleep so it is therefore tricky to draw general conclusions about your sleep. It is however\n          fascinating to see how your night was.\n        </p>\n        <p>Without further ado, this is what was your night of sleep:</p>\n        <StackedBarChartScrollyTelling />\n        <p>\n          We have seen that sleep can be decomposed in mainly two stages, whereas REM and NREM, and that we can observe different stage proportions\n          across age, gender and different sleep disorders. We’ve also defined other measures of your sleep architecture, such as your sleep latency,\n          efficiency and total sleep time. In order to improve your sleep hygiene, many elements can be considered:\n        </p>\n        <ul>\n          <li>\n            Alimentation: having a balanced diet and avoiding sources of caffeine can have a positive impact on one’s sleep. Chocolate, soft drink,\n            tea and decaffeinated coffee are unexpected sources of caffeine.\n          </li>\n          <li>Routine: going to sleep about at the same time, in a darkened and quiet environment.</li>\n          <li>Routine: going to sleep about at the same time, in a darkened and quiet environment.</li>\n          <li>Routine: going to sleep about at the same time, in a darkened and quiet environment.</li>\n        </ul>\n        <p>\n          Although we’ve looked at many aspects of your night’s sleep, we haven’t properly looked at your sleep dynamics, whereas how your sleep\n          evolves overnight.\n        </p>\n        <h4>Hypnogram</h4>\n        <p>\n          A hypnogram allows you to visually inspect the evolution of your night, through time. The vertical axis represents how hard it is to wake\n          up, namely the sleep deepness. We see that REM is one of the lightest sleep stages (along with N1), because we unknowingly wake up from that\n          stage. Those short periods of arousal often last no longer than 15 seconds, are followed by a lighter sleep stage, and cannot be remembered\n          the next morning. If they are too frequent, they can affect your sleep quality. [5] We can see that, throughout the night, stages follow\n          about the same pattern, whereas we go from NREM (either N1, N2 and N3) and then to REM, and so on. We call those sleep cycles, and those\n          typically range from four to six, each one lasting from 90 to 110 minutes. Another commonly looked at measurement is the time between sleep\n          onset and the first REM epoch, namely REM latency, which corresponds to 20 minutes.\n        </p>\n        <D3Component callback={createSingleHypnogram} data={csvDataSleepEDF ? [csvDataSleepEDF] : null} />\n        <p>\n          Sleep cycles take place in a broader process, named the circadian rhythm. It is the one that regulates our wake and sleep cycles over a 24\n          hours period.\n        </p>\n        <p>\n          You’ve been able to visualize and inspect your night of sleep, which we’ve classified only based on your EEG recordings. In a sleep lab,\n          electrophysiology technicians generally look at your EEG, EOG and submental EMG, and then manually classify each epoch of 30 seconds that\n          compose your night. By looking at your EEG recordings, we can see some patterns that can help electrophysiology technicians, and our\n          classifier, discriminate sleep stages throughout the night.\n        </p>\n        <h4 className=\"mt-5\">Spectrogram</h4>\n        <p>\n          Above, we can see the same chart from the first visualization, which represents your sleep stages through the night. Below it, there are\n          spectrograms of both your EEG channels. Spectrograms can be viewed as if we took all of your nights signal, we’ve separated it in contiguous\n          30 seconds chunks, stacked then horizontally and to which we’ve applied the fast fourier transform. We then have, for each 30 seconds epoch,\n          the corresponding amplitudes for each frequency that makes up the signal, hence the spectra. We then converted the scale to logarithmic, to\n          better see the differences in the spectrums. We then speak of signal power instead of signal amplitude, because we look at the spectrums in\n          a logarithmic scale.\n        </p>\n        <p>\n          <strong>How to read it?</strong>\n        </p>\n        <p>\n          Red therefore means that in that 30 seconds time frame, that particular frequency had a big amplitude. Green means that you had that\n          frequency with a lower amplitude. Dark blue means that you didn’t have that frequency in the signal.\n        </p>\n        <p>\n          To get a better understanding at how spectrograms work, you can check out\n          <a href=\"https://musiclab.chromeexperiments.com/Spectrogram/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {' '}\n            this visualization{' '}\n          </a>\n          that decomposes sound frequency from your microphone.\n        </p>\n        <D3Component callback={createSpectrogram} data={spectrogramData} useDiv />\n        <p className=\"mt-5\">\n          Generally, when talking about brain waves, we group certain frequencies together into bands. There are overall five frequency bands, where\n          each has a general associated behaviour, or state of mind. We will cover those when looking at time frames corresponding to each sleep\n          stage.\n        </p>\n        <p>\n          We can associate wake stages with low-amplitude activity in the 15 to 60 Hz frequency range, called the beta band. By slowly falling asleep,\n          the signal frequencies tend to decrease into the 4 to 8 Hz range, or the theta band, and to have larger amplitudes. These characteristics\n          are associated with N1. N2 stage has the same characteristics, and also includes sleep spindles. They last only a few seconds and are a\n          large oscillation in the 10 to 15 hz band. Because they do not occur during all of the 30 seconds period, they cannot be seen here. Stage\n          N3, also called slow wave sleep, is characterized by slower waves between 0.5 and 4 Hz, known as the delta range, with large amplitudes. REM\n          stage has the same characteristics as Wake stage, whereas there are low voltage high frequency activity.\n        </p>\n        <p>Wanna know how accurate this data is?</p>\n        <Button color=\"default\" to=\"/performance\" tag={Link}>\n          Check out the performances\n        </Button>\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default SleepAnalysis;\n","import React from 'react';\nimport { Container, Row, Table } from 'reactstrap';\n\nimport Navbar from '../../components/navbar/navbar';\nimport Header from '../../components/header';\nimport WIPWarning from '../../components/wip_warning';\nimport Footer from '../../components/footer/footer';\nimport D3Component from '../../components/d3component';\n\nimport text from './text.json';\nimport { createComparativeHypnogram } from 'd3/hypnogram/hypnogram';\nimport { useCSVData } from '../../hooks/api_hooks';\n\nimport hypnogramDataSleepEDF from 'assets/data/hypnogram.csv';\nimport hypnogramDataPredicted from 'assets/data/hypnogram-predicted.csv';\nimport hypnogramDataElectrophysiologist from 'assets/data/hypnogram-electrophysiologist.csv';\nimport hypnogramDataOpenBCIElectrophysiologist from 'assets/data/hypnogram-openbci-electrophysiologist.csv';\nimport hypnogramDataPredictedOpenBCI from 'assets/data/hypnogram-openbci-predicted.csv';\n\nconst ClassificationReport = ({ rows }) => (\n  <Table size=\"sm\" responsive>\n    <thead>\n      <tr>\n        <th></th>\n        <th>Precision (%)</th>\n        <th>Recall (%)</th>\n        <th>F1-Score (%)</th>\n        <th>Support</th>\n      </tr>\n    </thead>\n    <tbody>\n      {rows.map((row, i) => {\n        return (\n          <tr key={i}>\n            <th>{row[0]}</th>\n            {row.slice(1).map((el, j) => (\n              <td key={j}>{el}</td>\n            ))}\n          </tr>\n        );\n      })}\n    </tbody>\n  </Table>\n);\n\nconst Performance = () => {\n  const csvDataSleepEDF = useCSVData(hypnogramDataSleepEDF);\n  const csvDataPredicted = useCSVData(hypnogramDataPredicted);\n  const csvDataElectrophysiologist = useCSVData(hypnogramDataElectrophysiologist);\n  const csvDataOpenBCIElectrophysiologist = useCSVData(hypnogramDataOpenBCIElectrophysiologist);\n  const csvDataPredictedOpenBCI = useCSVData(hypnogramDataPredictedOpenBCI);\n\n  return (\n    <div>\n      <Navbar />\n      <Header\n        sizeClass={'pb-100'}\n        shapeQty={7}\n        title={text['header_title']}\n        subtitle={text['header_subtitle']}\n        description={text['header_description']}\n      />\n      <Container className=\"mt-5 text-justify\">\n        <Row className=\"mb-5 justify-content-center\">\n          <WIPWarning />\n        </Row>\n        <p>\n          Ever wonder what is the value of this application? This page aims to illustrate the relative performance of our sleep scoring compared to\n          clinical hypnogram scoring (which is usually considered the state-of-the-art technique).\n        </p>\n        <p>\n          <strong>Here is the plan:</strong>\n        </p>\n        <ul>\n          <li>\n            First, we will check how our classifier’s scoring agrees with the scoring within the Physionet's Sleep-EDF dataset. Of course, we will\n            perform this agreement test on a subset of EEG data that was never trained on. This subset is composed of full nights of sleep coming from\n            five subject of a different age group.{' '}\n          </li>\n          <li>\n            Then, we will check how this classifier performs on a full night recorded on one of our members. In order to be able to make comparisons,\n            we ask for the help of a medical electrophysiologist to score our data. This manual scoring will serve as reference to get an idea of the\n            accuracy of our model on data acquired using an OpenBCI under non-clinical conditions. The AASM manual was used for scoring.\n          </li>\n          <li>\n            Finally, we will present the scoring differences between the medical electrophysiologist and Sleep-EDF. To do this, we will take a random\n            night in our dataset. This will allow us to qualify somewhat the previous results and maybe get an idea of the usual disagreement level\n            between professional scorers.\n          </li>\n        </ul>\n        <h3 className=\"mt-5\">Classifier's accuracy according to Sleep-EDF</h3>\n        <D3Component\n          callback={(svg, data) => createComparativeHypnogram(svg, data, ['Classifier', 'Sleep-EDF'])}\n          data={csvDataPredicted && csvDataSleepEDF ? [csvDataPredicted, csvDataSleepEDF] : null}\n        />\n        <ClassificationReport\n          rows={[\n            ['W', 92, 93, 92, 242],\n            ['REM', 56, 50, 52, 86],\n            ['N1', 80, 82, 70, 32],\n            ['N2', 75, 72, 23, 368],\n            ['N3', 96, 97, 96, 68],\n            ['Accuracy', '', '', 82, 796],\n          ]}\n        />\n        <h3 className=\"mt-5\">Classifier's accuracy according to the electrophysiologist</h3>\n        <D3Component\n          callback={(svg, data) => createComparativeHypnogram(svg, data, ['Classifier', 'Electrophysiologist'])}\n          data={csvDataPredictedOpenBCI && csvDataOpenBCIElectrophysiologist ? [csvDataPredictedOpenBCI, csvDataOpenBCIElectrophysiologist] : null}\n        />\n        <ClassificationReport\n          rows={[\n            ['W', 85, 93, 92, 304],\n            ['REM', 52, 50, 52, 83],\n            ['N1', 76, 80, 78, 37],\n            ['N2', 75, 60, 68, 366],\n            ['N3', 92, 93, 92, 65],\n            ['Accuracy', '', '', 74, 842],\n          ]}\n        />\n        <h3 className=\"mt-5\">Electrophysiologist and Sleep-EDF's agreement</h3>\n        <D3Component\n          callback={(svg, data) => createComparativeHypnogram(svg, data, ['Electrophysiologist', 'Sleep-EDF'])}\n          data={csvDataElectrophysiologist && csvDataSleepEDF ? [csvDataElectrophysiologist, csvDataSleepEDF] : null}\n        />\n        <ClassificationReport\n          rows={[\n            ['W', 92, 93, 92, 304],\n            ['REM', 56, 50, 52, 83],\n            ['N1', 74, 72, 73, 37],\n            ['N2', 70, 64, 67, 366],\n            ['N3', 89, 87, 87, 65],\n            ['Accuracy', '', '', 73, 842],\n          ]}\n        />\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Performance;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport 'argon-design-system-react/src/assets/vendor/nucleo/css/nucleo.css';\nimport 'argon-design-system-react/src/assets/vendor/font-awesome/css/font-awesome.min.css';\nimport 'argon-design-system-react/src/assets/scss/argon-design-system-react.scss';\nimport 'assets/css/visualisation.css';\n\nimport SleepAnalysis from 'views/sleep_analysis/sleep_analysis';\nimport Performance from 'views/performance/performance';\nimport ScrollToTop from 'components/scroll_to_top';\nimport Emoji from 'components/emoji';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ScrollToTop>\n      <Switch>\n        <Route exact path=\"/\" render={() => <SleepAnalysis />} />\n        <Route\n          exact\n          path=\"/record-my-sleep\"\n          render={() => (\n            <h1 className=\"\">\n              Under Construction... <Emoji symbol=\"🏗️\" />\n            </h1>\n          )}\n        />\n        <Route exact path=\"/analyze-my-sleep\" render={() => <SleepAnalysis />} />\n        <Route exact path=\"/performance\" render={() => <Performance />} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </ScrollToTop>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/hypnogram.391fef8a.csv\";"],"sourceRoot":""}