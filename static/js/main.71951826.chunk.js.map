{"version":3,"sources":["assets/img/partners/polymtl.png","assets/img/partners/aep.png","assets/img/partners/protocase.png","assets/img/partners/ntx.png","assets/img/partners/diptrace.png","assets/img/logo.png","assets/data/hypnogram-labelled.csv","assets/data/hypnogram-predicted.csv","assets/data/hypnogram-electrophysiologist.csv","assets/data/hypnogram-openbci-electrophysiologist.csv","components/header.js","components/footer/partners.js","components/footer/index.js","components/navbar/index.js","components/d3component.js","components/emoji.js","components/wip_warning.js","d3/hypnogram/constants.js","d3/hypnogram/mouse_over.js","d3/hypnogram/line_charts.js","d3/constants.js","d3/utils.js","d3/hypnogram/hypnogram.js","components/d3component_scrollytelling.js","components/waypoint_direction.js","d3/evolving_chart/preproc.js","d3/evolving_chart/constants.js","d3/evolving_chart/legend.js","d3/evolving_chart/chart_states.js","d3/evolving_chart/mouse_over.js","d3/evolving_chart/evolving_chart.js","hooks/api_hooks.js","views/sleep-analysis/stacked_bar_chart_scrollytelling.js","d3/spectrogram/constants.js","d3/spectrogram/axes_legend.js","d3/spectrogram/spectrogram.js","views/sleep-analysis/spectrogram_scrollytelling.js","views/sleep-analysis/index.js","views/performance/index.js","views/analyze-sleep/waiting-for-server-to-be-ready.js","requests/analayze-sleep.js","requests/constants.js","requests/object-to-formdata.js","views/analyze-sleep/upload-form.js","requests/ping-server.js","views/analyze-sleep/index.js","components/scroll_to_top.js","index.js","assets/data/hypnogram-openbci-predicted.csv"],"names":["module","exports","Header","sizeClass","shapeQty","title","subtitle","description","className","_","times","i","key","Container","Col","lg","preserveAspectRatio","viewBox","x","y","points","defaultProps","Partner","img","alt","width","src","style","Partners","text","Row","Polymtl","AEP","NTX","Protocase","Diptrace","PlatformButton","href","color","iconClass","tooltipText","tooltipID","Button","id","target","UncontrolledTooltip","delay","Copyright","Date","getFullYear","rel","Navfooter","Nav","NavItem","NavLink","Footer","React","Component","render","md","OutsideLink","linkName","Navbar","constructor","props","super","this","navbarstrapRef","createRef","componentDidMount","Headroom","init","ref","expand","NavbarBrand","to","tag","Link","Logo","navbar","D3Component","memo","callback","data","useDiv","Spinner","height","useRef","useEffect","current","Emoji","symbol","label","role","aria-label","aria-hidden","WIPWarning","Alert","CANVAS_DIMENSION","MARGIN","DIMENSION","WIDTH","HEIGHT","COMPARATIVE_COLORS","Classifier","Electrophysiologist","createMouseOver","g","bisectTime","d3","d","left","append","attr","lineHover","dateHover","circleHover","selectAll","enter","name","textHover","on","mouse","timestamp","timestamps","values","map","currentTimeDate","invert","idx","epochIdx","currentValue","getHoveredData","sleepStage","createLine","curve","createAxes","xAxis","yAxis","call","createTitle","createLegend","hypnogramNames","comparativeColors","legendData","zip","createHypnogramChart","chartTitle","line","g_chart","STAGE_TO_COLOR","W","N1","N2","N3","REM","STAGES_ORDERED","convertTimestampsToDates","row","Object","parseTimestampToDate","convertEpochsToAnnotations","annotations","nbEpochs","length","currentAnnotationStart","currentSleepStage","currentAnnotationEpochCount","forEach","index","isSleepStageTransition","push","stage","proportion","start","end","duration","saveCurrentAnnotation","date","getUTCFullYear","getUTCMonth","getUTCDay","getUTCHours","getUTCMinutes","getUTCSeconds","createHypnogram","containerNode","svg","range","colors","initializeScales","tickFormat","initializeAxes","createDrawingGroup","dates","datum","domain","setDomainOnScales","hypno","preprocessData","createSingleHypnogram","createComparativeHypnogram","D3ComponentScrollyTelling","isInitialized","setIsInitialized","WaypointDirection","onUp","onDown","onEnter","previousPosition","Waypoint","below","bottomOffset","fireOnRapidScroll","getStageTimeProportions","nbEpochPerSleepStage","countBy","mapValues","countPerStage","findFirstStageIndex","reduce","firstStageIndexes","findIndex","element","BAR_HEIGHT","MAP_STAGE_TO_LABEL_OFFSET","MAP_STAGE_TO_COLOR_OFFSET","setAttrOnAnnotationRects","annotationRects","yPosition","tooltip","setTooltip","transition","show","hide","getVerticalPositionCallback","indexOf","getFirstRectangleProportionWidthCallback","stageTimeProportions","createVerticalAxis","transitionHorizontalAxis","select","createProportionLabels","round","getCumulativeProportionOfNightAtStart","totalStageProportions","sum","slice","stage_ordered","getOffsetSleepStageProportionCallback","cumulSumProportions","cumulSum","filter","annotation","annotationIndexSleepStage","annotationsProportionByStage","annotationsProportion","currentCumulSum","initializeTooltip","getToolTipText","tip","offset","html","getBarToolTipText","moment","format","utc","diff","getStackedToolTipText","EPOCH_DURATION_SEC","instanceChartCallbacks","timelineChartCallbacks","barChartCallbacks","stackedBarChartCallbacks","createEvolvingChart","xTime","xLinear","xTimeAxis","getHours","xLinearAxis","tickSize","epochs","first","last","nightDuration","asHours","barToolTip","stackedToolTip","initializeTooltips","bindAnnotationsToRects","fromInitial","interrupt","fromInstance","remove","createTimelineChartCallbacks","fromTimeline","fromBarChart","xProportionCallback","createInstanceChartCallbacks","xAxisLinear","fromStackedBarChart","TRANSITION_TIME_MS","createBarChartCallbacks","firstAnnotationsByStage","getHorizontalPositionSleepStage","createStackedBarChartCallbacks","useCSVData","path","useState","setData","a","csv","receivedData","StackedBarChartScrollyTelling","csvData","hypnogramCSVPath","position","top","marginBottom","Card","CardBody","TITLE_POSITION_Y","drawSpectrogramAxesAndLegend","scalesAndAxesBySpectrogram","canvasWidth","spectrogramWidth","singleSpectrogramCanvasHeight","singleSpectrogramHeight","yColor","channel","spectrogramDrawingGroup","legendDrawingGroup","createDrawingGroups","channelName","drawTitle","drawAxes","spectrogramHeight","interpolate","NB_POINTS_COLOR_INTERPOLATION","ticks","drawLegend","spectrogramCallbacks","getScalesAndAxes","dimensions","yLinear","yBand","interpolator","rectangles","frequencies","intensity","drawSpectrogramRectangles","canvas","highlightedSleepStage","context","node","getContext","each","rectangleWidth","resetTransform","translate","frequency","beginPath","fillRect","bandwidth","globalAlpha","isHighlighted","fillStyle","fill","stroke","createSpectrogram","parentDiv","getBoundingClientRect","canvasHeight","Math","min","window","innerHeight","spectrogramsHeight","NB_SPECTROGRAM","getDimensions","channelNames","keys","keyName","includes","preprocessedData","powerAmplitudesByTimestamp","hypnogram","flatMap","powerAmplitudeSingleTimestamp","zipObject","createSpectrogramWithHighlightedStageCallback","ctx","clearRect","SpectrogramScrollyTelling","csvDataSleepEDF","hypnogramDataSleepEDFPath","spectrogramWithHypnogramData","spectrogramData","SleepAnalysis","ClassificationReport","rows","Table","size","responsive","el","j","Performance","hypnogramDataSleepEDF","csvDataPredicted","hypnogramDataPredicted","csvDataElectrophysiologist","hypnogramDataElectrophysiologist","csvDataOpenBCIElectrophysiologist","hypnogramDataOpenBCIElectrophysiologist","csvDataPredictedOpenBCI","hypnogramDataPredictedOpenBCI","WaitingForServerToBeReady","analyzeSleep","formData","Axios","post","obj","FormData","objectToFormData","headers","filterOutDateTimeFields","entries","value","endsWith","mergeDateTimeFields","field","replace","filterInDateTimeFields","fieldPrefix","fieldName","startsWith","join","getTime","onSubmit","fromEntries","file","toPromise","results","console","log","error","UploadForm","useForm","register","handleSubmit","padding","sm","Form","CustomInput","innerRef","required","accept","bsSize","type","FormGroup","Label","for","form","inline","Input","max","placeholder","InputGroup","pingServer","get","pipe","catchError","of","AnalyzeSleep","serverReady","setServerReady","period","subscription","timer","exhaustMap","subscribe","ready","unsubscribe","hidden","ScrollToTop","componentDidUpdate","prevProps","location","pathname","scrollTo","children","withRouter","ReactDOM","basename","process","exact","document","getElementById"],"mappings":"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","file":"static/js/main.71951826.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/polymtl.3034d991.png\";","module.exports = __webpack_public_path__ + \"static/media/aep.fda414f1.png\";","module.exports = __webpack_public_path__ + \"static/media/protocase.53bfde7a.png\";","module.exports = __webpack_public_path__ + \"static/media/ntx.bdd09ab5.png\";","module.exports = __webpack_public_path__ + \"static/media/diptrace.e3ba6abc.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.bcea7572.png\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-labelled.391fef8a.csv\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-predicted.426e51a0.csv\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-electrophysiologist.9ec7437f.csv\";","module.exports = __webpack_public_path__ + \"static/media/hypnogram-openbci-electrophysiologist.d90b1368.csv\";","import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Col, Container } from 'reactstrap';\n\nconst Header = ({ sizeClass, shapeQty, title, subtitle, description }) => {\n  return (\n    <section className={`section section-lg section-shaped ${sizeClass}`}>\n      <div className=\"shape shape-style-1 shape-dark\">\n        {_.times(shapeQty, (i) => (\n          <span key={i} />\n        ))}\n      </div>\n      <Container>\n        <div className=\"col px-0\">\n          <Col lg=\"6\">\n            <h1 className=\"display-3 text-white\">\n              {title}\n              <span>{subtitle}</span>\n            </h1>\n            <p className=\"lead text-white\">{description}</p>\n          </Col>\n        </div>\n      </Container>\n\n      <div className=\"separator separator-bottom separator-skew\">\n        <svg preserveAspectRatio=\"none\" viewBox=\"0 0 2560 100\" x=\"0\" y=\"0\">\n          <polygon className=\"fill-white\" points=\"2560 0 2560 110 0 100\" />\n        </svg>\n      </div>\n    </section>\n  );\n};\n\nHeader.propTypes = {\n  sizeClass: PropTypes.string,\n  shapeQty: PropTypes.number,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  description: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  sizeClass: 'pb-150',\n  shapeQty: 5,\n  title: '',\n  subtitle: '',\n  description: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row } from 'reactstrap';\n\nimport text from './text.json';\n\nimport Polymtl from 'assets/img/partners/polymtl.png';\nimport AEP from 'assets/img/partners/aep.png';\nimport Protocase from 'assets/img/partners/protocase.png';\nimport NTX from 'assets/img/partners/ntx.png';\nimport Diptrace from 'assets/img/partners/diptrace.png';\n\nconst Partner = ({ img, alt, width }) => {\n  return <img alt={alt} className=\"img-center img-fluid\" src={img} style={{ width: `${width}px` }} />;\n};\n\nPartner.propTypes = {\n  img: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.number,\n};\n\nPartner.defaultProps = {\n  alt: '...',\n  width: 100,\n};\n\nconst Partners = () => {\n  return (\n    <Container>\n      <h3 className=\"mt-md mb-5\">{text['sponsor_thank-you']}</h3>\n      <Row className=\"align-items-center mb-5\">\n        <Partner alt=\"Polytechnique Montréal\" img={Polymtl} width={125} />\n        <Partner alt=\"Association Étudiante de Polytechnique\" img={AEP} width={125} />\n        <Partner alt=\"NeurotechX\" img={NTX} width={125} />\n        <Partner alt=\"Protocase\" img={Protocase} width={125} />\n        <Partner alt=\"Diptrace\" img={Diptrace} width={125} />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Partners;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from 'reactstrap';\n\nimport Partners from './partners';\nimport text from './text.json';\n\nconst PlatformButton = ({ href, color, iconClass, tooltipText, tooltipID }) => {\n  return (\n    <>\n      <Button className=\"btn-icon-only rounded-circle ml-1\" color={color} href={href} id={tooltipID} target=\"_blank\">\n        <span className=\"btn-inner--icon\">\n          <i className={`fa ${iconClass}`} />\n        </span>\n      </Button>\n      <UncontrolledTooltip delay={0} target={tooltipID}>\n        {tooltipText}\n      </UncontrolledTooltip>\n    </>\n  );\n};\n\nPlatformButton.propTypes = {\n  href: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  iconClass: PropTypes.string,\n  tooltipText: PropTypes.string,\n  tooltipID: PropTypes.string.isRequired,\n};\n\nPlatformButton.defaultProps = {\n  color: 'secondary',\n  iconClass: '',\n  tooltipText: '',\n};\n\nconst Copyright = () => {\n  return (\n    <div className=\"copyright\">\n      © {new Date().getFullYear()}{' '}\n      <a href=\"http://polycortex.polymtl.ca/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {text['footer_copyright_polycortex']}\n      </a>\n    </div>\n  );\n};\n\nconst Navfooter = () => {\n  return (\n    <Nav className=\" nav-footer justify-content-end\">\n      <NavItem>\n        <NavLink href=\"http://polycortex.polymtl.ca/\" target=\"_blank\">\n          {text['footer_about-us']}\n        </NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink href=\"https://github.com/PolyCortex\" target=\"_blank\">\n          {text['footer_license']}\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Partners />\n        <Container>\n          <hr />\n          <h3 className=\"text-primary font-weight-light mb-2\">{text['support_title']}</h3>\n          <Row className=\"row-grid align-items-center mb-5\">\n            <Col className=\"mt-sm\" lg=\"8\">\n              <h4 className=\" mb-3 font-weight-light\">{text['support_platforms']}</h4>\n              <PlatformButton\n                href=\"https://www.facebook.com/polycortex\"\n                color=\"facebook\"\n                iconClass=\"fa-facebook\"\n                tooltipText={text['support_facebook_tooltip']}\n                tooltipID=\"tooltip_facebook\"\n              />\n              <PlatformButton\n                href=\"https://www.instagram.com/polycortex/\"\n                color=\"instagram\"\n                iconClass=\"fa-instagram\"\n                tooltipText={text['support_instagram_tooltip']}\n                tooltipID=\"tooltip_instagram\"\n              />\n              <PlatformButton\n                href=\"https://github.com/PolyCortex\"\n                color=\"github\"\n                iconClass=\"fa-github\"\n                tooltipText={text['support_github_tooltip']}\n                tooltipID=\"tooltip_github\"\n              />\n            </Col>\n\n            <Col className=\"text-lg-right\" lg=\"4\">\n              <h4 className=\"mb-3 font-weight-light\">{text['support_donate_text']}</h4>\n              <Button color=\"success\" href=\"https://soutien.polymtl.ca/vie-etudiante\" target=\"_blank\">\n                {text['support_donate_button']}\n              </Button>\n            </Col>\n          </Row>\n          <hr />\n          <Row className=\" align-items-center justify-content-md-between\">\n            <Col md=\"6\">\n              <Copyright />\n            </Col>\n            <Col md=\"6\">\n              <Navfooter />\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Headroom from 'headroom.js';\nimport { Navbar as NavbarStrap, Container, NavbarBrand, NavItem, Nav, NavLink, UncontrolledTooltip } from 'reactstrap';\n\nimport Logo from 'assets/img/logo.png';\nimport text from './text.json';\n\nconst OutsideLink = ({ href, iconClass, linkName, tooltipText, tooltipID }) => {\n  return (\n    <NavItem>\n      <NavLink className=\"nav-link-icon\" href={href} id={tooltipID} target=\"_blank\">\n        <i className={`fa ${iconClass}`} />\n        <span className=\"nav-link-inner--text d-lg-none ml-2\">{linkName}</span>\n      </NavLink>\n      <UncontrolledTooltip delay={0} target={tooltipID}>\n        {tooltipText}\n      </UncontrolledTooltip>\n    </NavItem>\n  );\n};\n\nOutsideLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  iconClass: PropTypes.string,\n  linkName: PropTypes.string,\n  tooltipText: PropTypes.string,\n  tooltipID: PropTypes.string.isRequired,\n};\n\nOutsideLink.defaultProps = {\n  iconClass: '',\n  linkName: '',\n  tooltipText: '',\n};\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navbarstrapRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const headroom = new Headroom(this.navbarstrapRef);\n    headroom.init();\n  }\n\n  render() {\n    return (\n      <div ref={(ref) => (this.navbarstrapRef = ref)} className=\"navbar-main navbar-transparent navbar-light headroom\">\n        <NavbarStrap id=\"navbar-main\" expand=\"lg\">\n          <Container>\n            <NavbarBrand className=\"mr-lg-5\" to=\"/\" tag={Link}>\n              <img alt=\"Polydodo\" src={Logo} />\n            </NavbarBrand>\n\n            <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\n              <NavItem>\n                <NavLink to=\"/\" tag={Link}>\n                  {text['navbar_home']}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/record-my-sleep\" tag={Link}>\n                  {text['navbar_record']}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/analyze-my-sleep\" tag={Link}>\n                  {text['navbar_analyze']}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink to=\"/performance\" tag={Link}>\n                  {text['navbar_performance']}\n                </NavLink>\n              </NavItem>\n            </Nav>\n\n            <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\n              <OutsideLink\n                href=\"https://www.facebook.com/PolyCortex/\"\n                iconClass=\"fa-facebook-square\"\n                linkName=\"Facebook\"\n                tooltipText={text['navbar_facebook_tooltip']}\n                tooltipID=\"tooltip333589074\"\n              />\n              <OutsideLink\n                href=\"https://www.instagram.com/polycortex/\"\n                iconClass=\"fa-instagram\"\n                linkName=\"Instagram\"\n                tooltipText={text['navbar_instagram_tooltip']}\n                tooltipID=\"tooltip356693867\"\n              />\n              <OutsideLink\n                href=\"https://github.com/PolyCortex\"\n                iconClass=\"fa-github\"\n                linkName=\"Github\"\n                tooltipText={text['navbar_github_tooltip']}\n                tooltipID=\"tooltip112445449\"\n              />\n            </Nav>\n          </Container>\n        </NavbarStrap>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner, Row, Col } from 'reactstrap';\n\nconst D3Component = React.memo(({ callback, data, useDiv = false }) => {\n  if (data === null)\n    return (\n      <Row>\n        <Col className=\"text-center\">\n          <Spinner style={{ width: '3rem', height: '3rem' }} />\n        </Col>\n      </Row>\n    );\n  const ref = useRef();\n  useEffect(() => {\n    callback(ref.current, data);\n  });\n  return useDiv ? <div ref={ref} /> : <svg ref={ref} />;\n});\n\nD3Component.propTypes = {\n  callback: PropTypes.func.isRequired,\n  data: PropTypes.any,\n  // Using a div node instead of a svg node allows usage of child components of other types:\n  // i.g., for performance issues, we used both canvas & svg child elements in a visualisation.\n  useDiv: PropTypes.bool,\n};\n\nexport default D3Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Emoji = ({ symbol, label }) => (\n  <span role=\"img\" aria-label={label} aria-hidden={label ? 'false' : 'true'}>\n    {symbol}\n  </span>\n);\n\nEmoji.propTypes = {\n  symbol: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nEmoji.defaultProps = {\n  label: '',\n};\n\nexport default Emoji;\n","import React from 'react';\nimport { Alert } from 'reactstrap';\nimport Emoji from './emoji';\n\nconst WIPWarning = () => {\n  return (\n    <Alert color=\"warning\">\n      <span>\n        <Emoji symbol=\"🚧\" />\n        <strong> This is a work in progress. </strong>\n        The following data is mocked. <Emoji symbol=\"🚧\" />\n      </span>\n    </Alert>\n  );\n};\n\nexport default WIPWarning;\n","export const CANVAS_DIMENSION = {\n  WIDTH: 1000,\n  HEIGHT: 400,\n};\nexport const MARGIN = {\n  TOP: 100,\n  RIGHT: 10,\n  BOTTOM: 70,\n  LEFT: 70,\n};\nexport const DIMENSION = {\n  WIDTH: CANVAS_DIMENSION.WIDTH - MARGIN.LEFT - MARGIN.RIGHT,\n  HEIGHT: CANVAS_DIMENSION.HEIGHT - MARGIN.TOP - MARGIN.BOTTOM,\n};\nexport const COMPARATIVE_COLORS = {\n  Classifier: '#efce31',\n  'Sleep-EDF': '#006aff',\n  Electrophysiologist: '#ff7575',\n};\n","import * as d3 from 'd3';\nimport { DIMENSION, MARGIN } from './constants';\n\nconst getHoveredData = (data, x, mouse, bisectTime) => {\n  const timestamps = data[0].values.map((x) => x.timestamp);\n  const currentTimeDate = x.invert(mouse[0]);\n  const idx = bisectTime(timestamps, currentTimeDate, 1);\n  const epochIdx = currentTimeDate - timestamps[idx - 1] > timestamps[idx] - currentTimeDate ? idx : idx - 1;\n\n  return data.map((x) => {\n    x.currentValue = x.values[epochIdx];\n    return x;\n  });\n};\n\nconst createMouseOver = (g, x, y, data, color) => {\n  const { WIDTH, HEIGHT } = DIMENSION;\n  const bisectTime = d3.bisector((d) => d).left; // https://github.com/d3/d3-array#bisector_left\n\n  // Act as a child of `g` to make sure mouse events are received from the whole chart (not only the lines)\n  g.append('rect').attr('width', WIDTH).attr('height', HEIGHT).attr('opacity', 0);\n\n  const lineHover = g\n    .append('line')\n    .attr('class', 'lineHover')\n    .attr('y1', HEIGHT)\n    .attr('y2', 0)\n    .attr('stroke-width', 1)\n    .style('stroke', '#999')\n    .style('shape-rendering', 'crispEdges')\n    .style('opacity', 0);\n\n  const dateHover = g\n    .append('text')\n    .attr('class', 'lineHoverDate')\n    .attr('text-anchor', 'middle')\n    .attr('font-size', 15)\n    .attr('font-weight', 'bold')\n    .style('opacity', 0);\n\n  const circleHover = g\n    .selectAll('.hoverCircle')\n    .data(data)\n    .enter()\n    .append('circle')\n    .attr('class', 'hoverCircle')\n    .style('fill', 'none')\n    .attr('stroke', (x) => color(x.name))\n    .attr('r', 5)\n    .attr('stroke-width', '1px')\n    .style('opacity', 0);\n\n  const textHover = g\n    .selectAll('.textHover')\n    .data(data)\n    .enter()\n    .append('text')\n    .attr('class', 'textHover')\n    .style('fill', 'black')\n    .attr('text-anchor', 'start')\n    .attr('font-size', 12)\n    .style('opacity', 0)\n    .attr('stroke', (x) => color(x.name))\n    .attr('dy', (_, i) => 1 + i * 1.25 + 'em');\n\n  const mouseMove = function () {\n    const mouse = d3.mouse(this);\n\n    const hoveredData = getHoveredData(data, x, mouse, bisectTime);\n    const timestamp = hoveredData[0].currentValue.timestamp;\n\n    lineHover.attr('x1', mouse[0]).attr('x2', mouse[0]).style('opacity', 1);\n\n    dateHover\n      .text(d3.timeFormat('%H:%M:%S')(timestamp))\n      .attr('transform', `translate(${x(timestamp)},${HEIGHT + MARGIN.BOTTOM - 10})`)\n      .style('opacity', 1);\n\n    circleHover\n      .attr('cy', (x) => y(x.currentValue.sleepStage))\n      .attr('cx', x(timestamp))\n      .style('opacity', 1);\n\n    textHover\n      .attr('transform', `translate(${x(timestamp)},${(5 / 6) * HEIGHT})`)\n      .text((x) => `${x.name}: ${x.currentValue.sleepStage}`)\n      .style('opacity', 1);\n\n    x(timestamp) > (4 / 5) * WIDTH ? textHover.attr('text-anchor', 'end').attr('dx', -10) : textHover.attr('text-anchor', 'start').attr('dx', 10);\n  };\n\n  const mouseLeave = () => {\n    lineHover.style('opacity', 0);\n    dateHover.style('opacity', 0);\n    circleHover.style('opacity', 0);\n    textHover.style('opacity', 0);\n  };\n\n  g.on('mousemove', mouseMove).on('mouseleave', mouseLeave);\n};\n\nexport default createMouseOver;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport createMouseOver from './mouse_over';\nimport { DIMENSION, MARGIN } from './constants';\n\nconst createHypnogramChart = (g, data, x, y, xAxis, yAxis, color, chartTitle, hypnogramNames, comparativeColors) => {\n  const line = createLine(x, y);\n  const g_chart = g.append('g').attr('class', 'hypnogram-lines');\n  g_chart\n    .selectAll()\n    .data(data)\n    .enter()\n    .append('path')\n    .attr('class', 'line')\n    .attr('fill', 'none')\n    .attr('d', (x) => line(x.values))\n    .attr('stroke', (x) => color(x.name))\n    .attr('stroke-width', 2);\n\n  createMouseOver(g_chart, x, y, data, color);\n  createAxes(g, xAxis, yAxis);\n  createTitle(g, chartTitle);\n  createLegend(g, hypnogramNames, comparativeColors);\n};\n\nconst createLine = (x, y) =>\n  d3\n    .line()\n    .x((d) => x(d.timestamp))\n    .y((d) => y(d.sleepStage))\n    .curve(d3.curveStepAfter);\n\nconst createAxes = (g, xAxis, yAxis) => {\n  const { HEIGHT, WIDTH } = DIMENSION;\n\n  g.append('g').attr('class', 'x axis').attr('transform', `translate(0,${HEIGHT})`).call(xAxis);\n\n  g.append('g').attr('class', 'y axis').call(yAxis);\n\n  g.append('text')\n    .text('Time')\n    .attr('text-anchor', 'end')\n    .attr('x', WIDTH)\n    .attr('y', HEIGHT + (2 / 3) * MARGIN.BOTTOM);\n\n  g.append('text')\n    .text('Sleep stage')\n    .attr('text-anchor', 'middle')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -HEIGHT / 2)\n    .attr('y', -(2 / 3) * MARGIN.LEFT);\n};\n\nconst createTitle = (g, title) => {\n  g.append('text')\n    .text(title)\n    .attr('class', 'chart-title')\n    .attr('text-anchor', 'middle')\n    .attr('y', -(3 / 4) * MARGIN.TOP)\n    .attr('x', (1 / 2) * DIMENSION.WIDTH);\n};\n\nconst createLegend = (g, hypnogramNames, comparativeColors) => {\n  const legendData = _.zip(hypnogramNames, comparativeColors).map((x) => {\n    return {\n      name: x[0],\n      color: x[1],\n    };\n  });\n\n  g.selectAll('.rect.legend')\n    .data(legendData)\n    .enter()\n    .append('rect')\n    .attr('class', 'legend')\n    .attr('stroke-width', 1)\n    .attr('fill', (x) => x.color)\n    .attr('width', '1em')\n    .attr('height', '1em')\n    .attr('y', -(1 / 2) * MARGIN.TOP)\n    .attr('x', (_, i) => `${i * 8}em`);\n\n  g.selectAll('.text.legend')\n    .data(legendData)\n    .enter()\n    .append('text')\n    .attr('class', 'legend')\n    .text((x) => x.name)\n    .attr('font-size', 12)\n    .attr('dominant-baseline', 'hanging')\n    .attr('y', -(1 / 2) * MARGIN.TOP)\n    .attr('dy', 0.25 + 'em')\n    .attr('x', (_, i) => `${1.5 + i * 11}em`);\n};\n\nexport default createHypnogramChart;\n","export const TRANSITION_TIME_MS = 1000;\nexport const STAGE_TO_COLOR = {\n  W: '#E3624B',\n  N1: '#B0C9D9',\n  N2: '#4da6fe',\n  N3: '#48587f',\n  REM: '#FFD443',\n};\nexport const STAGES_ORDERED = ['W', 'REM', 'N1', 'N2', 'N3'];\nexport const EPOCH_DURATION_SEC = 30;\nexport const EPOCH_DURATION_MS = EPOCH_DURATION_SEC * 1000;\n","import { EPOCH_DURATION_SEC } from './constants';\n\nexport const convertTimestampsToDates = (data) =>\n  data.map((row) =>\n    Object({\n      ...row,\n      timestamp: parseTimestampToDate(row.timestamp),\n    }),\n  );\n\nexport const convertEpochsToAnnotations = (data) => {\n  // Epochs (original data format):\n  //    Epochs are equal-length spans of data extracted from raw continuous data [from MNE library glossary].\n  //    In our case, each epoch corresponds to a 30s portion of the night with its corresponding sleep stage label.\n  // Annotations (destination data format):\n  //    An annotation is defined by an onset, a duration, and a string description [from MNE library glossary].\n  //    In our case, an annotation is a contiguous period of the night where a subject stayed in the same sleep stage.\n\n  const annotations = [];\n  const nbEpochs = data.length;\n  let currentAnnotationStart = data[0].timestamp;\n  let currentSleepStage = data[0].sleepStage;\n  let currentAnnotationEpochCount = 0;\n\n  const isSleepStageTransition = (sleepStage, index) =>\n    sleepStage !== currentSleepStage || index === data.length - 1;\n\n  const saveCurrentAnnotation = (timestamp) => {\n    annotations.push({\n      stage: currentSleepStage,\n      proportion: currentAnnotationEpochCount / nbEpochs,\n      start: currentAnnotationStart,\n      end: timestamp,\n      duration: currentAnnotationEpochCount * EPOCH_DURATION_SEC,\n    });\n  };\n\n  data.forEach(({ timestamp, sleepStage }, index) => {\n    currentAnnotationEpochCount++;\n\n    if (isSleepStageTransition(sleepStage, index)) {\n      saveCurrentAnnotation(timestamp);\n      currentAnnotationStart = timestamp;\n      currentSleepStage = sleepStage;\n      currentAnnotationEpochCount = 0;\n    }\n  });\n\n  return annotations;\n};\n\nconst parseTimestampToDate = (timestamp) => {\n  // To convert UNIX timestamp to JS Date, we have to convert number of seconds to milliseconds.\n  const date = new Date(timestamp * 1000);\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDay(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds(),\n  );\n};\n","import * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport createHypnogramChart from './line_charts';\nimport { DIMENSION, MARGIN, COMPARATIVE_COLORS, CANVAS_DIMENSION } from './constants';\nimport { STAGES_ORDERED } from '../constants';\nimport { convertTimestampsToDates } from '../utils';\n\nconst initializeScales = (comparativeColors) =>\n  Object({\n    x: d3.scaleTime([0, DIMENSION.WIDTH]),\n    y: d3.scaleOrdinal(_.range(0, DIMENSION.HEIGHT + 1, DIMENSION.HEIGHT / STAGES_ORDERED.length)),\n    colors: d3.scaleOrdinal(comparativeColors),\n  });\n\nconst initializeAxes = (x, y) =>\n  Object({\n    xAxis: d3.axisBottom(x).tickFormat(d3.timeFormat('%H:%M')),\n    yAxis: d3.axisLeft(y),\n  });\n\nconst createDrawingGroup = (svg) => svg.append('g').attr('transform', `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`);\n\nconst preprocessData = (data, hypnogramNames) => {\n  data = data.map((hypno) => convertTimestampsToDates(hypno));\n\n  return _.zip(data, hypnogramNames).map((x) =>\n    Object({\n      name: x[1],\n      values: x[0],\n    }),\n  );\n};\n\nconst setDomainOnScales = (x, y, colors, data) => {\n  const dates = data[0].values.map((datum) => datum.timestamp);\n  x.domain([d3.min(dates), d3.max(dates)]);\n  y.domain(STAGES_ORDERED);\n  colors.domain(data.map((x) => x.name));\n};\n\nconst createHypnogram = (containerNode, data, chartTitle, hypnogramNames, comparativeColors) => {\n  const svg = d3.select(containerNode).attr('viewBox', `0, 0, ${CANVAS_DIMENSION.WIDTH}, ${CANVAS_DIMENSION.HEIGHT}`);\n  const { x, y, colors } = initializeScales(comparativeColors);\n  const { xAxis, yAxis } = initializeAxes(x, y);\n  const g = createDrawingGroup(svg);\n\n  data = preprocessData(data, hypnogramNames);\n  setDomainOnScales(x, y, colors, data);\n  createHypnogramChart(g, data, x, y, xAxis, yAxis, colors, chartTitle, hypnogramNames, comparativeColors);\n};\n\nexport const createSingleHypnogram = (containerNode, data) => {\n  createHypnogram(containerNode, data, 'Hypnogram', ['Classifier'], [COMPARATIVE_COLORS.Classifier]);\n};\n\nexport const createComparativeHypnogram = (containerNode, data, hypnogramNames) => {\n  createHypnogram(\n    containerNode,\n    data,\n    `Agreement between ${hypnogramNames[0]} and ${hypnogramNames[1]}`,\n    hypnogramNames,\n    hypnogramNames.map((x) => COMPARATIVE_COLORS[x]),\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport D3Component from './d3component';\n\nconst D3ComponentScrollyTelling = ({\n  callback,\n  data,\n  isInitialized,\n  setIsInitialized,\n  useDiv = false,\n}) => {\n  const createCallback = (svg, data) => {\n    if (!isInitialized) {\n      setIsInitialized(true);\n      callback(svg, data);\n    }\n  };\n\n  return <D3Component callback={createCallback} data={data} useDiv={useDiv} />;\n};\n\nD3ComponentScrollyTelling.propTypes = {\n  callback: PropTypes.func.isRequired,\n  isInitialized: PropTypes.bool,\n  setIsInitialized: PropTypes.func,\n  data: PropTypes.any,\n  // Using a div node instead of a svg node allows usage of child components of other types:\n  // i.g., for performance issues, we used both canvas & svg child elements in a visualisation.\n  useDiv: PropTypes.bool,\n};\n\nexport default D3ComponentScrollyTelling;\n","import React from 'react';\nimport { Waypoint } from 'react-waypoint';\n\nconst WaypointDirection = ({ onUp = () => {}, onDown = () => {} }) => (\n  <Waypoint onEnter={({ previousPosition }) => (previousPosition === Waypoint.below ? onDown() : onUp())} bottomOffset=\"99%\" fireOnRapidScroll />\n);\n\nexport default WaypointDirection;\n","import _ from 'lodash';\n\nimport { convertTimestampsToDates, convertEpochsToAnnotations } from '../utils';\nimport { STAGES_ORDERED } from '../constants';\n\nexport const preprocessData = (data) => {\n  data = convertTimestampsToDates(data);\n  const annotations = convertEpochsToAnnotations(data);\n  const stageTimeProportions = getStageTimeProportions(data);\n  const firstStageIndexes = findFirstStageIndex(annotations);\n\n  return {\n    epochs: data,\n    annotations,\n    stageTimeProportions,\n    firstStageIndexes,\n  };\n};\n\nconst getStageTimeProportions = (data) => {\n  const nbEpochPerSleepStage = _.countBy(data.map((x) => x.sleepStage));\n  const proportionPerSleepStage = _.mapValues(nbEpochPerSleepStage, (countPerStage) => countPerStage / data.length);\n\n  return proportionPerSleepStage;\n};\n\n//Finds the index of the first element of each sleep stage (for Viz 3)\nconst findFirstStageIndex = (annotations) =>\n  STAGES_ORDERED.reduce(\n    (firstStageIndexes, stage) =>\n      Object({\n        ...firstStageIndexes,\n        [stage]: annotations.findIndex((element) => element.stage === stage),\n      }),\n    {},\n  );\n","import { STAGES_ORDERED } from '../constants';\n\nexport const CANVAS_DIMENSION = {\n  WIDTH: 1000,\n  HEIGHT: 600,\n};\nexport const MARGIN = {\n  TOP: 90,\n  RIGHT: 70,\n  BOTTOM: 50,\n  LEFT: 70,\n};\nexport const DIMENSION = {\n  WIDTH: CANVAS_DIMENSION.WIDTH - MARGIN.LEFT - MARGIN.RIGHT,\n  HEIGHT: CANVAS_DIMENSION.HEIGHT - MARGIN.TOP - MARGIN.BOTTOM,\n};\n\nexport const BAR_HEIGHT = DIMENSION.HEIGHT / STAGES_ORDERED.length;\n","import { STAGES_ORDERED } from 'd3/constants';\nimport { MARGIN } from './constants';\n\nconst SQUARE_SIZE = 20;\nconst LABEL_Y_OFFSET = 55;\nconst COLOR_Y_OFFSET = 40;\nconst MAP_STAGE_TO_LABEL_OFFSET = {\n  W: 0,\n  REM: 55,\n  N1: 135,\n  N2: 200,\n  N3: 270,\n};\nconst MAP_STAGE_TO_COLOR_OFFSET = {\n  W: MAP_STAGE_TO_LABEL_OFFSET.W + 25,\n  REM: MAP_STAGE_TO_LABEL_OFFSET.REM + 50,\n  N1: MAP_STAGE_TO_LABEL_OFFSET.N1 + 35,\n  N2: MAP_STAGE_TO_LABEL_OFFSET.N2 + 35,\n  N3: MAP_STAGE_TO_LABEL_OFFSET.N3 + 35,\n};\n\nexport const createLegend = (svg, color) => {\n  svg\n    .selectAll('names')\n    .data(STAGES_ORDERED)\n    .enter()\n    .append('text')\n    .attr('class', 'legend')\n    .attr('x', (stage) => MAP_STAGE_TO_LABEL_OFFSET[stage])\n    .attr('y', LABEL_Y_OFFSET)\n    .text((d) => d)\n    .style('fill', (_, i) => color(i))\n    .style('font-size', '20px')\n    .attr('text-anchor', 'left')\n    .style('alignment-baseline', 'middle')\n    .attr('transform', `translate(${MARGIN.LEFT}, 0)`);\n\n  svg\n    .selectAll('dots')\n    .data(STAGES_ORDERED)\n    .enter()\n    .append('rect')\n    .attr('class', 'legend')\n    .attr('x', (stage) => MAP_STAGE_TO_COLOR_OFFSET[stage])\n    .attr('y', COLOR_Y_OFFSET)\n    .attr('width', SQUARE_SIZE)\n    .attr('height', SQUARE_SIZE)\n    .style('fill', (_, i) => color(i))\n    .attr('transform', `translate(${MARGIN.LEFT}, 0)`);\n};\n","import * as d3 from 'd3';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { BAR_HEIGHT, DIMENSION } from './constants';\nimport { EPOCH_DURATION_MS, TRANSITION_TIME_MS, STAGES_ORDERED } from '../constants';\n\nexport const createTimelineChartCallbacks = (g, xTime, xTimeAxis, color, tooltip) =>\n  Object({\n    fromInitial: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      setAttrOnAnnotationRects(annotationRects, xTime, 0, color, tooltip);\n\n      g.append('g').attr('class', 'x axis').attr('transform', `translate(0, ${BAR_HEIGHT})`).call(xTimeAxis);\n    },\n    fromInstance: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      g.selectAll('.y.axis').remove();\n\n      setAttrOnAnnotationRects(annotationRects, xTime, 0, color, tooltip);\n\n      transitionHorizontalAxis(g, BAR_HEIGHT);\n    },\n  });\n\nexport const createInstanceChartCallbacks = (g, data, xTime, xTimeAxis, yAxis, color, tooltip) =>\n  Object({\n    fromTimeline: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      createVerticalAxis(g, yAxis, color);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n      setAttrOnAnnotationRects(annotationRects, xTime, getVerticalPositionCallback, color, tooltip);\n    },\n    fromBarChart: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n      const xProportionCallback = getOffsetSleepStageProportionCallback(data);\n      annotationRects.attr('x', xProportionCallback).attr('width', ({ end, start }) => xTime(end) - xTime(start));\n\n      g.selectAll('text.proportion').remove();\n\n      g.select('.x.axis').interrupt().transition().call(xTimeAxis);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n\n      setAttrOnAnnotationRects(annotationRects, xTime, getVerticalPositionCallback, color, tooltip);\n    },\n  });\n\nexport const createBarChartCallbacks = (g, data, xAxisLinear, yAxis, color, tip) =>\n  Object({\n    fromInstance: () => {\n      const { firstStageIndexes, stageTimeProportions } = data;\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n      const xProportionCallback = getOffsetSleepStageProportionCallback(data);\n\n      g.select('.x.axis').transition().call(xAxisLinear);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n\n      setTooltip(annotationRects, tip)\n        .transition()\n        .duration(TRANSITION_TIME_MS)\n        .attr('y', getVerticalPositionCallback)\n        .attr('x', xProportionCallback)\n        .on('end', () => {\n          // Only keep the first rectangle of each stage to be visible\n          g.selectAll('.rect-stacked').attr('x', 0).attr('width', getFirstRectangleProportionWidthCallback(firstStageIndexes, stageTimeProportions));\n          createProportionLabels(g, data);\n        });\n    },\n    fromStackedBarChart: () => {\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      g.selectAll('text.label-sleepType').remove();\n      g.selectAll('text.proportion').remove();\n\n      createVerticalAxis(g, yAxis, color);\n      transitionHorizontalAxis(g, STAGES_ORDERED.length * BAR_HEIGHT);\n\n      annotationRects\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('y', (d) => BAR_HEIGHT * STAGES_ORDERED.indexOf(d.stage))\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('x', 0)\n        .on('end', () => createProportionLabels(g, data));\n    },\n  });\n\nexport const createStackedBarChartCallbacks = (g, data) =>\n  Object({\n    fromBarChart: () => {\n      const { annotations, firstStageIndexes, stageTimeProportions, epochs } = data;\n      const firstAnnotationsByStage = _.filter(annotations, ({ stage }, index) => firstStageIndexes[stage] === index);\n      const getHorizontalPositionSleepStage = ({ stage }) =>\n        (getCumulativeProportionOfNightAtStart(stage, stageTimeProportions) + stageTimeProportions[stage] / 2) * DIMENSION.WIDTH;\n      const annotationRects = g.selectAll('.rect-stacked').interrupt();\n\n      g.selectAll('.y.axis').remove();\n      g.selectAll('text.proportion').remove();\n\n      transitionHorizontalAxis(g, BAR_HEIGHT);\n\n      annotationRects\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('x', ({ stage }) => getCumulativeProportionOfNightAtStart(stage, stageTimeProportions) * DIMENSION.WIDTH)\n        .attr('width', getFirstRectangleProportionWidthCallback(firstStageIndexes, stageTimeProportions))\n        .transition()\n        .duration(TRANSITION_TIME_MS / 2)\n        .attr('y', 0);\n\n      g.selectAll('.text')\n        .data(firstAnnotationsByStage)\n        .enter()\n        .append('text')\n        .attr('class', 'proportion')\n        .style('text-anchor', 'middle')\n        .append('tspan')\n        .text(({ stage }) => moment.utc(stageTimeProportions[stage] * epochs.length * EPOCH_DURATION_MS).format('HH:mm'))\n        .attr('x', getHorizontalPositionSleepStage)\n        .attr('y', 40)\n        .append('tspan')\n        .text(({ stage }) => `${_.round(stageTimeProportions[stage] * 100, 2)}%`)\n        .attr('x', getHorizontalPositionSleepStage)\n        .attr('y', 60);\n    },\n  });\n\nconst setAttrOnAnnotationRects = (annotationRects, x, yPosition, color, tooltip) =>\n  setTooltip(annotationRects, tooltip)\n    .attr('height', BAR_HEIGHT)\n    .transition()\n    .duration(TRANSITION_TIME_MS)\n    .attr('x', ({ start }) => x(start))\n    .attr('y', yPosition)\n    .attr('width', ({ end, start }) => x(end) - x(start))\n    .attr('fill', ({ stage }) => color(stage));\n\nconst setTooltip = (element, tooltip) =>\n  element\n    .on('mouseover', function (d) {\n      tooltip.show(d, this);\n      d3.select(this).style('opacity', 0.8);\n    })\n    .on('mouseout', function () {\n      tooltip.hide();\n      d3.select(this).style('opacity', 1);\n    });\n\nconst getVerticalPositionCallback = (d) => BAR_HEIGHT * STAGES_ORDERED.indexOf(d.stage);\n\nconst getFirstRectangleProportionWidthCallback = (firstStageIndexes, stageTimeProportions) => ({ stage }, i) =>\n  i === firstStageIndexes[stage] ? stageTimeProportions[stage] * DIMENSION.WIDTH : 0;\n\nconst createVerticalAxis = (g, yAxis, color) =>\n  g\n    .append('g')\n    .attr('class', 'y axis')\n    .style('font-size', '1.5rem')\n    .transition()\n    .duration(TRANSITION_TIME_MS)\n    .call(yAxis)\n    .selectAll('text')\n    .attr('class', 'y-label')\n    .attr('y', BAR_HEIGHT / 2)\n    .attr('x', -10)\n    .style('fill', (d) => color(d))\n    .attr('text-anchor', 'left')\n    .style('alignment-baseline', 'middle');\n\nconst transitionHorizontalAxis = (g, yPosition) =>\n  g.select('.x.axis').transition().duration(TRANSITION_TIME_MS).attr('transform', `translate(0, ${yPosition})`);\n\nconst createProportionLabels = (g, data) =>\n  g\n    .selectAll('text.proportion')\n    .data(data.annotations)\n    .enter()\n    .append('text')\n    .attr('class', 'proportion')\n    .text(({ stage }, i) => (i === data.firstStageIndexes[stage] ? `${_.round(data.stageTimeProportions[stage] * 100, 2)}%` : ''))\n    .attr('x', DIMENSION.WIDTH / 20)\n    .attr('y', ({ stage }) => BAR_HEIGHT * STAGES_ORDERED.indexOf(stage) + BAR_HEIGHT / 2)\n    .style('fill', 'black');\n\nconst getCumulativeProportionOfNightAtStart = (stage, totalStageProportions) =>\n  _.sum(\n    _.slice(\n      STAGES_ORDERED.map((stage_ordered) => totalStageProportions[stage_ordered]),\n      0,\n      _.indexOf(STAGES_ORDERED, stage),\n    ),\n  );\n\nconst getOffsetSleepStageProportionCallback = (data) => {\n  const { annotations, stageTimeProportions } = data;\n  const cumulSumProportions = cumulSum(\n    _.mapValues(stageTimeProportions, (proportion, stage) =>\n      _.filter(annotations, (d) => d.stage === stage).map((annotation) => annotation.proportion / proportion),\n    ),\n  );\n  const annotationIndexSleepStage = annotations.map((annotation) => {\n    return _.indexOf(\n      _.filter(annotations, (d) => d.stage === annotation.stage),\n      annotation,\n    );\n  });\n\n  return (d, index) => DIMENSION.WIDTH * stageTimeProportions[d.stage] * cumulSumProportions[d.stage][annotationIndexSleepStage[index]];\n};\n\nconst cumulSum = (annotationsProportionByStage) =>\n  _.mapValues(annotationsProportionByStage, (annotationsProportion) => {\n    const currentCumulSum = [0];\n    annotationsProportion.forEach((proportion, index) => {\n      if (index !== annotationsProportion.length - 1) {\n        currentCumulSum.push(proportion + currentCumulSum[index]);\n      }\n    });\n    return currentCumulSum;\n  });\n","import tip from 'd3-tip';\nimport moment from 'moment';\n\nimport { EPOCH_DURATION_MS } from '../constants';\n\nexport const initializeTooltips = (svg, data) => {\n  const barToolTip = initializeTooltip(svg, getBarToolTipText);\n  const stackedToolTip = initializeTooltip(svg, (d) => getStackedToolTipText(d, data.stageTimeProportions, data.epochs.length));\n\n  return { barToolTip, stackedToolTip };\n};\n\nconst initializeTooltip = (svg, getToolTipText) => {\n  const tooltip = tip().attr('class', 'd3-tip').offset([-10, 0]);\n  svg.call(tooltip);\n  tooltip.html(getToolTipText);\n\n  return tooltip;\n};\n\nconst getBarToolTipText = (d) => {\n  return `Stage : <strong> ${d.stage} </strong> <br>\n            Range  :  <strong> ${moment(d.start).format('HH:mm:ss')} </strong>\n              - <strong> ${moment(d.end).format('HH:mm:ss')} </strong> <br>\n            Duration: <strong> ${moment.utc(moment(d.end).diff(d.start)).format('HH:mm:ss')} </strong>`;\n};\n\nconst getStackedToolTipText = (d, stageTimeProportions, nbEpochs) =>\n  `Stage : <strong> ${d.stage} </strong><br>  Duration : <strong> ${moment\n    .utc(stageTimeProportions[d.stage] * nbEpochs * EPOCH_DURATION_MS)\n    .format('HH:mm:ss')} </strong><br>`;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport { preprocessData } from './preproc';\nimport { createLegend } from './legend';\nimport { createTimelineChartCallbacks, createInstanceChartCallbacks, createBarChartCallbacks, createStackedBarChartCallbacks } from './chart_states';\nimport { MARGIN, CANVAS_DIMENSION, BAR_HEIGHT, DIMENSION } from './constants';\nimport { STAGES_ORDERED, STAGE_TO_COLOR } from '../constants';\nimport { initializeTooltips } from './mouse_over';\n\nexport let instanceChartCallbacks = {};\nexport let timelineChartCallbacks = {};\nexport let barChartCallbacks = {};\nexport let stackedBarChartCallbacks = {};\n\nconst initializeScales = () => {\n  const { WIDTH, HEIGHT } = DIMENSION;\n  const xTime = d3.scaleTime([0, WIDTH]);\n  const xLinear = d3.scaleLinear([0, WIDTH]);\n  const y = d3.scaleOrdinal(_.range(0, HEIGHT + 1, BAR_HEIGHT));\n  const colors = d3.scaleOrdinal(STAGES_ORDERED.map((x) => STAGE_TO_COLOR[x]));\n\n  return { xTime, xLinear, y, colors };\n};\n\nconst setDomainOnScales = (xTime, xLinear, y, colors, epochs) => {\n  const start = _.first(epochs).timestamp;\n  const end = _.last(epochs).timestamp;\n  const nightDuration = moment.duration(moment(end).diff(start));\n\n  xTime.domain([start, end]);\n  xLinear.domain([0, nightDuration.asHours()]);\n  y.domain(STAGES_ORDERED);\n  colors.domain(STAGES_ORDERED);\n};\n\nconst initializeAxes = (xTime, xLinear, y) => {\n  const xTimeAxis = d3.axisBottom(xTime).tickFormat((d) => `${d.getHours()}h`);\n  const xLinearAxis = d3.axisBottom(xLinear).tickFormat((d) => `${d}h`);\n  const yAxis = d3.axisLeft(y).tickSize(-DIMENSION.WIDTH); //will create the lines in second visualisation\n\n  return { xTimeAxis, xLinearAxis, yAxis };\n};\n\nconst createDrawingGroup = (svg) => svg.append('g').attr('transform', `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`);\n\nconst bindAnnotationsToRects = (g, annotations) => g.selectAll('.rect').data(annotations).enter().append('rect').attr('class', 'rect-stacked');\n\nconst createEvolvingChart = (containerNode, data) => {\n  const svg = d3.select(containerNode).attr('viewBox', `0, 0, ${CANVAS_DIMENSION.WIDTH}, ${CANVAS_DIMENSION.HEIGHT}`);\n  const { xTime, xLinear, y, colors } = initializeScales();\n  const { xTimeAxis, xLinearAxis, yAxis } = initializeAxes(xTime, xLinear, y);\n  const g = createDrawingGroup(svg);\n  createLegend(svg, colors);\n\n  data = preprocessData(data);\n\n  setDomainOnScales(xTime, xLinear, y, colors, data.epochs);\n  const { barToolTip, stackedToolTip } = initializeTooltips(svg, data);\n  bindAnnotationsToRects(g, data.annotations);\n\n  timelineChartCallbacks = createTimelineChartCallbacks(g, xTime, xTimeAxis, colors, barToolTip);\n\n  instanceChartCallbacks = createInstanceChartCallbacks(g, data, xTime, xTimeAxis, yAxis, colors, barToolTip);\n\n  barChartCallbacks = createBarChartCallbacks(g, data, xLinearAxis, yAxis, colors, stackedToolTip);\n\n  stackedBarChartCallbacks = createStackedBarChartCallbacks(g, data);\n\n  timelineChartCallbacks.fromInitial();\n};\n\nexport default createEvolvingChart;\n","import { useEffect, useState } from 'react';\nimport { csv } from 'd3';\n\nexport const useCSVData = (path) => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const receivedData = await csv(path);\n      setData(receivedData);\n    })();\n  }, [path]);\n  return data;\n};\n","import React, { useState } from 'react';\nimport { Container, Card, CardBody } from 'reactstrap';\n\nimport hypnogramCSVPath from 'assets/data/hypnogram-openbci-predicted.csv';\n\nimport D3ComponentScrollyTelling from 'components/d3component_scrollytelling';\nimport WaypointDirection from 'components/waypoint_direction';\n\nimport createEvolvingChart, {\n  instanceChartCallbacks,\n  timelineChartCallbacks,\n  barChartCallbacks,\n  stackedBarChartCallbacks,\n} from 'd3/evolving_chart/evolving_chart';\nimport { useCSVData } from 'hooks/api_hooks';\n\nconst StackedBarChartScrollyTelling = () => {\n  const csvData = useCSVData(hypnogramCSVPath);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  return (\n    <Container>\n      <div style={{ position: 'sticky', top: '10%' }}>\n        <D3ComponentScrollyTelling\n          callback={createEvolvingChart}\n          data={csvData}\n          isInitialized={isInitialized}\n          setIsInitialized={setIsInitialized}\n        />\n      </div>\n      <div style={{ marginBottom: '50%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We can see that each colored block represents a part of your night.\n            They are ordered from bed time to out of bed timestamps you’ve\n            written in your journal. Each color is associated with a specific\n            sleep stage. You went to bed at 12:22 am and you got out of bed at\n            9:47 am, which adds up to 9 hours and 25 minutes of time spent in\n            bed. Of this total time, you spent 7 hours and 27 minutes actually\n            sleeping. You first fell asleep at XX:XX, to which we will refer to\n            as sleep onset. The last non wake block ended at XX:XX, which can\n            also be referred to as sleep offset. During that night's sleep, you\n            went through each of the 5 five stages. Let's try to see a little\n            better what happened about each of them.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {isInitialized && (\n        <WaypointDirection\n          onDown={instanceChartCallbacks.fromTimeline}\n          onUp={timelineChartCallbacks.fromInstance}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            Wake stage is of course the stage we want to minimize when in bed.\n            It can be decomposed into two parts:\n          </p>\n          <ul>\n            <li>\n              {' '}\n              Sleep latency : Time spent before falling asleep, which\n              corresponds to X minutes in your case.{' '}\n            </li>\n            <li>\n              {' '}\n              Wake after sleep onset (WASO): Time spent awake after first\n              falling asleep and before waking up.{' '}\n            </li>\n            <li>\n              {' '}\n              For healthy adults, it is normal to experience small awakenings\n              during the night. Unprovoked awakenings are mostly during or after\n              REM stages.{' '}\n            </li>\n          </ul>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            <strong>REM stage</strong> stands for “Rapid Eyes Movements” and is\n            also known as “paradoxical sleep”. It is associated with dreaming\n            and, as the National Sleep Foundation says,{' '}\n            <strong>“the brain is awake and body paralyzed.”</strong>\n          </p>\n          <p>\n            <strong>N1 stage</strong> is associated with that drowsy feeling\n            before falling asleep. Most people wouldn’t say they fell asleep if\n            they’ve been woken up from N1 sleep.\n          </p>\n          <p>\n            <strong>N2 stage</strong> still corresponds to a light sleep, but\n            where the muscle activity decreases more, and the eyes have stopped\n            moving. It is called, along with N1, <strong>light sleep</strong>.\n          </p>\n          <p>\n            <strong>N3 stage</strong> is when you are deeply asleep, hence it’s\n            also called <strong>deep sleep</strong>, or sometimes{' '}\n            <strong>slow wave</strong> sleep, and is the most difficult to wake\n            up from. It is during those stages that your cells get repaired, and\n            that tissue grows. But how much time did you spend in each stage\n            during the whole night?\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {isInitialized && (\n        <WaypointDirection\n          onDown={barChartCallbacks.fromInstance}\n          onUp={instanceChartCallbacks.fromBarChart}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            From here, we can look at your sleep efficiency, which is the\n            proportion of time spent asleep over the overall time spent in bed.\n            In your case, it corresponds to 79%, or 7h27.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We are currently looking at your in bed sleep stage proportions.\n            Wake time may be overrepresented, because it includes your sleep\n            latency and the time you spent in bed after waking up. In order to\n            look at your actual stage proportions, we must cut them out from\n            wake time to only keep WASO.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We can see that the most prominent sleep stage is N2, which in your\n            case corresponds to XXXX. How does your night compare to other\n            people’s night?\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {isInitialized && (\n        <WaypointDirection\n          onDown={stackedBarChartCallbacks.fromBarChart}\n          onUp={barChartCallbacks.fromStackedBarChart}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            As a rule of thumb, adults approximately stay 5% of their total\n            sleep time in N1; 50% in N2; and 20% is in N3. The remaining 25% is\n            REM stage sleep.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      {/* <WaypointDirection onDown={} /> */}\n      <div style={{ marginBottom: '125%' }} />\n      {/* <WaypointDirection onDown={} /> */}\n      <div style={{ marginBottom: '125%' }} />\n      &nbsp;\n    </Container>\n  );\n};\n\nexport default StackedBarChartScrollyTelling;\n","export const PADDING = 100;\nexport const NB_SPECTROGRAM = 2;\nexport const FREQUENCY_KEY = 'frequencies';\nexport const HYPNOGRAM_KEY = 'hypnogram';\nexport const NB_POINTS_COLOR_INTERPOLATION = 3;\nexport const NOT_HIGHLIGHTED_RECTANGLE_OPACITY = 0.5;\nexport const CANVAS_WIDTH_TO_HEIGHT_RATIO = 700 / 1000; // width to height ratio\nexport const CANVAS_HEIGHT_WINDOW_FACTOR = 0.8;\nexport const MARGIN = {\n  TOP: 50,\n  RIGHT: 120,\n  BOTTOM: 50,\n  LEFT: 70,\n};\nexport const TITLE_FONT_SIZE = '18px';\nexport const TITLE_POSITION_Y = -MARGIN.TOP / 3;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\nimport {\n  MARGIN,\n  NB_POINTS_COLOR_INTERPOLATION,\n  TITLE_FONT_SIZE,\n  TITLE_POSITION_Y,\n} from './constants';\n\nconst createDrawingGroups = (g, spectrogramWidth) =>\n  Object({\n    spectrogramDrawingGroup: g\n      .append('g')\n      .attr('transform', `translate(${MARGIN.LEFT}, ${MARGIN.TOP})`),\n    legendDrawingGroup: g\n      .append('g')\n      .attr(\n        'transform',\n        `translate(${MARGIN.LEFT + spectrogramWidth}, ${MARGIN.TOP})`,\n      ),\n  });\n\nconst drawTitle = (g, channelName, spectrogramWidth) =>\n  g\n    .append('text')\n    .attr('x', spectrogramWidth / 2)\n    .attr('y', TITLE_POSITION_Y)\n    .style('text-anchor', 'middle')\n    .style('font-size', TITLE_FONT_SIZE)\n    .text(`Spectrogram of channel ${channelName}`);\n\nconst drawAxes = (\n  g,\n  xAxis,\n  yAxis,\n  singleSpectrogramHeight,\n  spectrogramWidth,\n) => {\n  g.append('text')\n    .attr('class', 'x axis')\n    .attr('y', singleSpectrogramHeight + MARGIN.BOTTOM)\n    .attr('x', spectrogramWidth / 2)\n    .attr('fill', 'currentColor')\n    .style('text-anchor', 'middle')\n    .text('Time');\n\n  g.append('text')\n    .attr('class', 'y axis')\n    .attr('transform', 'rotate(-90)')\n    .attr('y', -MARGIN.LEFT)\n    .attr('x', -singleSpectrogramHeight / 2)\n    .attr('dy', '1em')\n    .attr('fill', 'currentColor')\n    .style('text-anchor', 'middle')\n    .text('Frequency (Hz)');\n\n  g.append('g')\n    .attr('class', 'x axis')\n    .attr('transform', `translate(0, ${singleSpectrogramHeight})`)\n    .call(xAxis)\n    .selectAll('text');\n\n  g.append('g').attr('class', 'y axis').call(yAxis).selectAll('text');\n};\n\nconst drawLegend = (svg, color, y, spectrogramHeight) => {\n  const interpolate = d3.interpolate(color.domain()[0], color.domain()[1]);\n\n  const colors = _.map(_.range(NB_POINTS_COLOR_INTERPOLATION + 1), (x) =>\n    color(interpolate(x / NB_POINTS_COLOR_INTERPOLATION)),\n  );\n\n  const svgDefs = svg.append('defs');\n  const GRADIENT_ID = 'mainGradient';\n\n  svgDefs\n    .append('linearGradient')\n    .attr('id', GRADIENT_ID)\n    .attr('x1', '0%')\n    .attr('x2', '0%')\n    .attr('y1', '100%')\n    .attr('y2', '0%')\n    .selectAll('stop')\n    .data(colors)\n    .enter()\n    .append('stop')\n    .attr('stop-color', (d) => d)\n    .attr('offset', (_, i) => i / (colors.length - 1));\n  svg\n    .append('rect')\n    .attr('fill', `url(#${GRADIENT_ID})`)\n    .attr('x', MARGIN.RIGHT / 10)\n    .attr('y', 0)\n    .attr('width', MARGIN.RIGHT / 6)\n    .attr('height', spectrogramHeight);\n\n  const yAxis = d3.axisRight(y).ticks(5, 's');\n  svg\n    .append('g')\n    .attr('class', 'y axis')\n    .attr('transform', `translate(${MARGIN.RIGHT / 3.7},0)`)\n    .call(yAxis)\n    .selectAll('text');\n\n  svg\n    .append('text')\n    .attr('class', 'y axis')\n    .attr('transform', 'rotate(90)')\n    .attr('y', -MARGIN.RIGHT)\n    .attr('x', spectrogramHeight / 2)\n    .attr('dy', '1em')\n    .attr('fill', 'currentColor')\n    .style('text-anchor', 'middle')\n    .text('Power (uV²/Hz)');\n};\n\nconst drawSpectrogramAxesAndLegend = (\n  svg,\n  scalesAndAxesBySpectrogram,\n  data,\n  {\n    canvasWidth,\n    spectrogramWidth,\n    singleSpectrogramCanvasHeight,\n    singleSpectrogramHeight,\n  },\n) =>\n  _.forEach(\n    _.zip(scalesAndAxesBySpectrogram, data),\n    ([{ xAxis, yAxis, color, yColor }, { channel }], index) => {\n      const currentSpectrogramDrawingGroup = svg\n        .append('g')\n        .attr(\n          'transform',\n          `translate(0, ${index * singleSpectrogramCanvasHeight[index]})`,\n        )\n        .attr('width', canvasWidth)\n        .attr('height', singleSpectrogramCanvasHeight[index]);\n\n      const {\n        spectrogramDrawingGroup,\n        legendDrawingGroup,\n      } = createDrawingGroups(currentSpectrogramDrawingGroup, spectrogramWidth);\n\n      drawTitle(spectrogramDrawingGroup, channel, spectrogramWidth);\n      drawAxes(\n        spectrogramDrawingGroup,\n        xAxis,\n        yAxis,\n        singleSpectrogramHeight,\n        spectrogramWidth,\n      );\n      drawLegend(legendDrawingGroup, color, yColor, singleSpectrogramHeight);\n    },\n  );\n\nexport default drawSpectrogramAxesAndLegend;\n","import * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport {\n  MARGIN,\n  CANVAS_WIDTH_TO_HEIGHT_RATIO,\n  FREQUENCY_KEY,\n  HYPNOGRAM_KEY,\n  NB_SPECTROGRAM,\n  PADDING,\n  CANVAS_HEIGHT_WINDOW_FACTOR,\n  NOT_HIGHLIGHTED_RECTANGLE_OPACITY,\n} from './constants';\nimport { STAGES_ORDERED } from '../constants';\nimport drawSpectrogramAxesAndLegend from './axes_legend';\nimport { convertTimestampsToDates } from '../utils';\n\n// keys are the sleep stage for which we want to display the spectrogram\n// accepted keys are: null (when all stages are highlighted), W, N1, N2, N3, REM\nexport let spectrogramCallbacks = {};\n\nconst getDimensions = (parentDiv) => {\n  const canvasWidth = parentDiv.node().getBoundingClientRect().width;\n  const canvasHeight = Math.min(\n    canvasWidth * CANVAS_WIDTH_TO_HEIGHT_RATIO,\n    window.innerHeight * CANVAS_HEIGHT_WINDOW_FACTOR,\n  );\n  const spectrogramsHeight = canvasHeight - MARGIN.TOP - MARGIN.BOTTOM;\n  const singleSpectrogramCanvasHeight = _.range(NB_SPECTROGRAM).map((x) => {\n    let height = spectrogramsHeight / NB_SPECTROGRAM;\n    if (x === 0) {\n      height += MARGIN.TOP;\n    } else if (x === NB_SPECTROGRAM - 1) {\n      height += MARGIN.BOTTOM;\n    }\n    return height;\n  });\n\n  return {\n    canvasWidth,\n    canvasHeight,\n    spectrogramsHeight,\n    singleSpectrogramCanvasHeight,\n    spectrogramWidth: canvasWidth - MARGIN.LEFT - MARGIN.RIGHT,\n    singleSpectrogramHeight: (spectrogramsHeight - PADDING) / NB_SPECTROGRAM,\n  };\n};\n\nconst preprocessData = (channel, data) => {\n  const powerAmplitudesByTimestamp = data[channel];\n  const frequencies = data[FREQUENCY_KEY];\n  const hypnogram = convertTimestampsToDates(data[HYPNOGRAM_KEY]);\n\n  return {\n    channel,\n    frequencies,\n    rectangles: _.flatMap(\n      _.zip(powerAmplitudesByTimestamp, hypnogram),\n      ([powerAmplitudeSingleTimestamp, { sleepStage, timestamp }]) =>\n        _.map(\n          _.zip(powerAmplitudeSingleTimestamp, frequencies),\n          ([intensity, frequency]) =>\n            Object({\n              intensity,\n              frequency,\n              timestamp,\n              sleepStage,\n            }),\n        ),\n    ),\n  };\n};\n\nconst initializeScales = ({ spectrogramWidth, singleSpectrogramHeight }) =>\n  Object({\n    x: d3.scaleTime([0, spectrogramWidth]),\n    yLinear: d3.scaleLinear([singleSpectrogramHeight, 0]),\n    yBand: d3.scaleBand([singleSpectrogramHeight, 0]),\n    yColor: d3.scaleLinear([singleSpectrogramHeight, 0]),\n    color: d3.scaleSequential().interpolator(d3.interpolatePlasma),\n  });\n\nconst setDomainOnScales = (\n  { rectangles, frequencies },\n  x,\n  yBand,\n  yLinear,\n  color,\n  yColor,\n) => {\n  x.domain([_.first(rectangles).timestamp, _.last(rectangles).timestamp]);\n  yBand.domain(frequencies);\n  yLinear.domain([_.first(frequencies), _.last(frequencies)]);\n  color.domain(d3.extent(rectangles, ({ intensity }) => intensity));\n  yColor.domain(d3.extent(rectangles, ({ intensity }) => intensity));\n};\n\nconst initializeAxes = (x, y) =>\n  Object({\n    xAxis: d3.axisBottom(x).tickFormat((d) => `${d.getHours()}h`),\n    yAxis: d3.axisLeft(y).ticks(5, 's'),\n  });\n\nconst getScalesAndAxes = (data, dimensions) => {\n  const { x, yLinear, yBand, yColor, color } = initializeScales(dimensions);\n  const { xAxis, yAxis } = initializeAxes(x, yLinear);\n\n  setDomainOnScales(data, x, yBand, yLinear, color, yColor);\n\n  return { x, yBand, yColor, color, xAxis, yAxis };\n};\n\nconst drawSpectrogramRectangles = (\n  canvas,\n  scalesAndAxesBySpectrogram,\n  data,\n  { singleSpectrogramCanvasHeight },\n  highlightedSleepStage,\n) => {\n  const context = canvas.node().getContext('2d');\n  const isHighlighted = (sleepStage) =>\n    highlightedSleepStage === null || highlightedSleepStage === sleepStage;\n\n  _.each(\n    _.zip(scalesAndAxesBySpectrogram, data),\n    ([{ x, yBand, color }, { rectangles, frequencies }], index) => {\n      const rectangleWidth =\n        x(rectangles[frequencies.length].timestamp) -\n        x(rectangles[0].timestamp);\n\n      context.resetTransform();\n      context.translate(\n        MARGIN.LEFT,\n        MARGIN.TOP + index * singleSpectrogramCanvasHeight[index],\n      );\n\n      _.each(rectangles, ({ timestamp, frequency, intensity, sleepStage }) => {\n        context.beginPath();\n        context.fillRect(\n          x(timestamp),\n          yBand(frequency),\n          rectangleWidth,\n          yBand.bandwidth(),\n        );\n        context.globalAlpha = isHighlighted(sleepStage)\n          ? 1\n          : NOT_HIGHLIGHTED_RECTANGLE_OPACITY;\n        context.fillStyle = color(intensity);\n        context.fill();\n        context.stroke();\n      });\n    },\n  );\n};\n\nconst createSpectrogram = (containerNode, data) => {\n  /*\n  Considering the number of rectangles to display is well over 1k,\n  we will use a canvas instead of a svg element to display the visualisation.\n  (https://stackoverflow.com/a/50143500).\n  We will seperatly create the axes and legend, overlaid over the canvas element, because d3-axis\n  module was only conceived to be used inside a svg element.\n  We have done so by setting the same dimensions to both svg and canvas, and then by\n  setting the first element's position, in this case the canvas, to absolute.\n  */\n  const parentDiv = d3.select(containerNode);\n  const dimensions = getDimensions(parentDiv);\n\n  const canvas = parentDiv\n    .append('canvas')\n    .attr('width', dimensions.canvasWidth)\n    .attr('height', dimensions.canvasHeight)\n    .style('position', 'absolute');\n  const svg = parentDiv\n    .append('svg')\n    .attr('width', dimensions.canvasWidth)\n    .attr('height', dimensions.canvasHeight);\n\n  const channelNames = _.filter(\n    _.keys(data),\n    (keyName) => !_.includes([FREQUENCY_KEY, HYPNOGRAM_KEY], keyName),\n  );\n  const preprocessedData = _.map(channelNames, (channel) =>\n    preprocessData(channel, data),\n  );\n  const scalesAndAxesBySpectrogram = _.map(preprocessedData, (data) =>\n    getScalesAndAxes(data, dimensions),\n  );\n\n  const createSpectrogramWithHighlightedStageCallback = (\n    highlightedSleepStage,\n  ) => () => {\n    const ctx = canvas.node().getContext('2d');\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, dimensions.canvasWidth, dimensions.canvasHeight);\n    ctx.stroke();\n\n    svg.selectAll('*').remove();\n\n    drawSpectrogramRectangles(\n      canvas,\n      scalesAndAxesBySpectrogram,\n      preprocessedData,\n      dimensions,\n      highlightedSleepStage,\n    );\n    drawSpectrogramAxesAndLegend(\n      svg,\n      scalesAndAxesBySpectrogram,\n      preprocessedData,\n      dimensions,\n    );\n  };\n\n  spectrogramCallbacks = _.zipObject(\n    [null, ...STAGES_ORDERED],\n    _.map([null, ...STAGES_ORDERED], (stage) =>\n      createSpectrogramWithHighlightedStageCallback(stage),\n    ),\n  );\n  spectrogramCallbacks[null]();\n};\n\nexport default createSpectrogram;\n","import React, { useState } from 'react';\nimport { Container, Card, CardBody } from 'reactstrap';\n\nimport { HYPNOGRAM_KEY } from '../../d3/spectrogram/constants';\nimport createSpectrogram, {\n  spectrogramCallbacks,\n} from '../../d3/spectrogram/spectrogram';\nimport D3ComponentScrollyTelling from '../../components/d3component_scrollytelling';\nimport WaypointDirection from '../../components/waypoint_direction';\n\nimport { useCSVData } from '../../hooks/api_hooks';\n\nimport hypnogramDataSleepEDFPath from 'assets/data/hypnogram-openbci-predicted.csv';\nimport spectrogramData from 'assets/data/spectrograms-openbci-predicted.json';\n\nconst SpectrogramScrollyTelling = () => {\n  const csvDataSleepEDF = useCSVData(hypnogramDataSleepEDFPath);\n  const spectrogramWithHypnogramData = csvDataSleepEDF\n    ? { ...spectrogramData, [HYPNOGRAM_KEY]: csvDataSleepEDF }\n    : null;\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  return (\n    <Container>\n      <div style={{ position: 'sticky', top: '10%' }}>\n        <D3ComponentScrollyTelling\n          callback={createSpectrogram}\n          data={spectrogramWithHypnogramData}\n          isInitialized={isInitialized}\n          setIsInitialized={setIsInitialized}\n          useDiv\n        />\n      </div>\n      <div style={{ marginBottom: '50%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            Here is represented spectrograms of both your EEG channels.\n            Spectrograms can be viewed as if we took all of your nights signal,\n            we’ve separated it in contiguous 30 seconds chunks, stacked then\n            horizontally and to which we’ve applied the fast fourier transform.\n            We then have, for each 30 seconds epoch, the corresponding\n            amplitudes for each frequency that makes up the signal, hence the\n            spectra.\n          </p>\n          <p>\n            We then converted the scale to logarithmic, to better see the\n            differences in the spectrums. We then speak of signal power instead\n            of signal amplitude, because we look at the spectrums in a\n            logarithmic scale.\n          </p>\n          <h5>How to read it?</h5>\n          <p>\n            Red therefore means that in that 30 seconds time frame, that\n            particular frequency had a big amplitude. Green means that you had\n            that frequency with a lower amplitude. Dark blue means that you\n            didn’t have that frequency in the signal.\n          </p>\n          <p>\n            To get a better understanding at how spectrograms work, you can{' '}\n            <a\n              href=\"https://musiclab.chromeexperiments.com/Spectrogram/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              check out this example\n            </a>{' '}\n            that decomposes sound frequency from your microphone.\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            Generally, when talking about brain waves, we group certain\n            frequencies together into bands. There are overall five frequency\n            bands, where each has a general associated behaviour, or state of\n            mind. We will cover those when looking at time frames corresponding\n            to each sleep stage.\n          </p>\n        </CardBody>\n      </Card>\n      {isInitialized && (\n        <WaypointDirection\n          onDown={spectrogramCallbacks['W']}\n          onUp={spectrogramCallbacks[null]}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            We can associate wake stages with low-amplitude activity in the 15\n            to 60 Hz frequency range, called the beta band. [6]\n          </p>\n        </CardBody>\n      </Card>\n      {isInitialized && (\n        <WaypointDirection\n          onDown={spectrogramCallbacks['N1']}\n          onUp={spectrogramCallbacks['W']}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            By slowly falling asleep, the signal frequencies tend to decrease\n            into the 4 to 8 Hz range, or the theta band, and to have larger\n            amplitudes. These characteristics are associated with N1.\n          </p>\n        </CardBody>\n      </Card>\n      {isInitialized && (\n        <WaypointDirection\n          onDown={spectrogramCallbacks['N2']}\n          onUp={spectrogramCallbacks['N1']}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            N2 stage has the same characteristics as N1, and also includes sleep\n            spindles. They last only a few seconds and are a large oscillation\n            in the 10 to 15 hz band. Because they do not occur during all of the\n            30 seconds period, they cannot be seen here. [6]\n          </p>\n        </CardBody>\n      </Card>\n      {isInitialized && (\n        <WaypointDirection\n          onDown={spectrogramCallbacks['N3']}\n          onUp={spectrogramCallbacks['N2']}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            Stage N3, also called slow wave sleep, is characterized by slower\n            waves between 0.5 and 4 Hz, known as the delta range, with large\n            amplitudes. [6]\n          </p>\n        </CardBody>\n      </Card>\n      {isInitialized && (\n        <WaypointDirection\n          onDown={spectrogramCallbacks['REM']}\n          onUp={spectrogramCallbacks['N3']}\n        />\n      )}\n      <div style={{ marginBottom: '125%' }} />\n      <Card className=\"shadow\" style={{ position: 'relative' }}>\n        <CardBody>\n          <p>\n            REM stage has the same characteristics as Wake stage, whereas there\n            are low voltage high frequency activity. [6]\n          </p>\n        </CardBody>\n      </Card>\n      <div style={{ marginBottom: '125%' }} />\n      &nbsp;\n    </Container>\n  );\n};\n\nexport default SpectrogramScrollyTelling;\n","import React from 'react';\nimport { Container, Row, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nimport Header from 'components/header';\nimport D3Component from 'components/d3component';\nimport WIPWarning from 'components/wip_warning';\n\nimport { createSingleHypnogram } from 'd3/hypnogram/hypnogram';\n\nimport text from './text.json';\nimport StackedBarChartScrollyTelling from './stacked_bar_chart_scrollytelling';\nimport SpectrogramScrollyTelling from './spectrogram_scrollytelling';\nimport { useCSVData } from 'hooks/api_hooks';\n\nimport hypnogramDataSleepEDFPath from 'assets/data/hypnogram-openbci-predicted.csv';\n\nconst SleepAnalysis = () => {\n  const csvDataSleepEDF = useCSVData(hypnogramDataSleepEDFPath);\n\n  return (\n    <div>\n      <Header\n        sizeClass={'pb-150'}\n        shapeQty={7}\n        title={text['header_title']}\n        subtitle={text['header_subtitle']}\n        description={text['header_description']}\n      />\n      <Container className=\"mt-5 mb-5 text-justify\">\n        <Row className=\"mb-5 justify-content-center\">\n          <WIPWarning />\n        </Row>\n        <p>\n          Of course, we are analyzing only one night of sleep so it is therefore\n          tricky to draw general conclusions about your sleep. It is however\n          fascinating to see how your night was.\n        </p>\n        <p>Without further ado, this is what was your night of sleep:</p>\n        <StackedBarChartScrollyTelling />\n        <p>\n          We have seen that sleep can be decomposed in mainly two stages,\n          whereas REM and NREM, and that we can observe different stage\n          proportions across age, gender and different sleep disorders. We’ve\n          also defined other measures of your sleep architecture, such as your\n          sleep latency, efficiency and total sleep time. In order to improve\n          your sleep hygiene, many elements can be considered:\n        </p>\n        <ul>\n          <li>\n            Alimentation: having a balanced diet and avoiding sources of\n            caffeine can have a positive impact on one’s sleep. Chocolate, soft\n            drink, tea and decaffeinated coffee are unexpected sources of\n            caffeine.\n          </li>\n          <li>\n            Routine: going to sleep about at the same time, in a darkened and\n            quiet environment.\n          </li>\n          <li>\n            Routine: going to sleep about at the same time, in a darkened and\n            quiet environment.\n          </li>\n          <li>\n            Routine: going to sleep about at the same time, in a darkened and\n            quiet environment.\n          </li>\n        </ul>\n        <p>\n          Although we’ve looked at many aspects of your night’s sleep, we\n          haven’t properly looked at your sleep dynamics, whereas how your sleep\n          evolves overnight.\n        </p>\n        <h4>Hypnogram</h4>\n        <p>\n          A hypnogram allows you to visually inspect the evolution of your\n          night, through time. The vertical axis represents how hard it is to\n          wake up, namely the sleep deepness. We see that REM is one of the\n          lightest sleep stages (along with N1), because we unknowingly wake up\n          from that stage. Those short periods of arousal often last no longer\n          than 15 seconds, are followed by a lighter sleep stage, and cannot be\n          remembered the next morning. If they are too frequent, they can affect\n          your sleep quality. [5] We can see that, throughout the night, stages\n          follow about the same pattern, whereas we go from NREM (either N1, N2\n          and N3) and then to REM, and so on. We call those sleep cycles, and\n          those typically range from four to six, each one lasting from 90 to\n          110 minutes. Another commonly looked at measurement is the time\n          between sleep onset and the first REM epoch, namely REM latency, which\n          corresponds to 20 minutes.\n        </p>\n        <D3Component\n          callback={createSingleHypnogram}\n          data={csvDataSleepEDF ? [csvDataSleepEDF] : null}\n        />\n        <p>\n          Sleep cycles take place in a broader process, named the circadian\n          rhythm. It is the one that regulates our wake and sleep cycles over a\n          24 hours period.\n        </p>\n        <p>\n          You’ve been able to visualize and inspect your night of sleep, which\n          we’ve classified only based on your EEG recordings. In a sleep lab,\n          electrophysiology technicians generally look at your EEG, EOG and\n          submental EMG, and then manually classify each epoch of 30 seconds\n          that compose your night. By looking at your EEG recordings, we can see\n          some patterns that can help electrophysiology technicians, and our\n          classifier, discriminate sleep stages throughout the night.\n        </p>\n        <h4 className=\"mt-5\">Spectrogram</h4>\n        <p>\n          Above, we can see the same chart from the first visualization, which\n          represents your sleep stages through the night. Below it, there are\n          spectrograms of both your EEG channels. Spectrograms can be viewed as\n          if we took all of your nights signal, we’ve separated it in contiguous\n          30 seconds chunks, stacked then horizontally and to which we’ve\n          applied the fast fourier transform. We then have, for each 30 seconds\n          epoch, the corresponding amplitudes for each frequency that makes up\n          the signal, hence the spectra. We then converted the scale to\n          logarithmic, to better see the differences in the spectrums. We then\n          speak of signal power instead of signal amplitude, because we look at\n          the spectrums in a logarithmic scale.\n        </p>\n        <p>\n          <strong>How to read it?</strong>\n        </p>\n        <p>\n          Red therefore means that in that 30 seconds time frame, that\n          particular frequency had a big amplitude. Green means that you had\n          that frequency with a lower amplitude. Dark blue means that you didn’t\n          have that frequency in the signal.\n        </p>\n        <p>\n          To get a better understanding at how spectrograms work, you can check\n          out\n          <a\n            href=\"https://musiclab.chromeexperiments.com/Spectrogram/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {' '}\n            this visualization{' '}\n          </a>\n          that decomposes sound frequency from your microphone.\n        </p>\n        <SpectrogramScrollyTelling />\n        <p className=\"mt-5\">\n          Generally, when talking about brain waves, we group certain\n          frequencies together into bands. There are overall five frequency\n          bands, where each has a general associated behaviour, or state of\n          mind. We will cover those when looking at time frames corresponding to\n          each sleep stage.\n        </p>\n        <p>\n          We can associate wake stages with low-amplitude activity in the 15 to\n          60 Hz frequency range, called the beta band. By slowly falling asleep,\n          the signal frequencies tend to decrease into the 4 to 8 Hz range, or\n          the theta band, and to have larger amplitudes. These characteristics\n          are associated with N1. N2 stage has the same characteristics, and\n          also includes sleep spindles. They last only a few seconds and are a\n          large oscillation in the 10 to 15 hz band. Because they do not occur\n          during all of the 30 seconds period, they cannot be seen here. Stage\n          N3, also called slow wave sleep, is characterized by slower waves\n          between 0.5 and 4 Hz, known as the delta range, with large amplitudes.\n          REM stage has the same characteristics as Wake stage, whereas there\n          are low voltage high frequency activity.\n        </p>\n        <p>Wanna know how accurate this data is?</p>\n        <Button color=\"default\" to=\"/performance\" tag={Link}>\n          Check out the performances\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nexport default SleepAnalysis;\n","import React from 'react';\nimport { Container, Row, Table } from 'reactstrap';\n\nimport Header from 'components/header';\nimport WIPWarning from 'components/wip_warning';\nimport D3Component from 'components/d3component';\n\nimport text from './text.json';\nimport { createComparativeHypnogram } from 'd3/hypnogram/hypnogram';\nimport { useCSVData } from 'hooks/api_hooks';\n\n// mock data\nimport hypnogramDataSleepEDF from 'assets/data/hypnogram-labelled.csv';\nimport hypnogramDataPredicted from 'assets/data/hypnogram-predicted.csv';\nimport hypnogramDataElectrophysiologist from 'assets/data/hypnogram-electrophysiologist.csv';\n// William's night data\nimport hypnogramDataOpenBCIElectrophysiologist from 'assets/data/hypnogram-openbci-electrophysiologist.csv';\nimport hypnogramDataPredictedOpenBCI from 'assets/data/hypnogram-openbci-predicted.csv';\n\nconst ClassificationReport = ({ rows }) => (\n  <Table size=\"sm\" responsive>\n    <thead>\n      <tr>\n        <th></th>\n        <th>Precision (%)</th>\n        <th>Recall (%)</th>\n        <th>F1-Score (%)</th>\n        <th>Support</th>\n      </tr>\n    </thead>\n    <tbody>\n      {rows.map((row, i) => {\n        return (\n          <tr key={i}>\n            <th>{row[0]}</th>\n            {row.slice(1).map((el, j) => (\n              <td key={j}>{el}</td>\n            ))}\n          </tr>\n        );\n      })}\n    </tbody>\n  </Table>\n);\n\nconst Performance = () => {\n  const csvDataSleepEDF = useCSVData(hypnogramDataSleepEDF);\n  const csvDataPredicted = useCSVData(hypnogramDataPredicted);\n  const csvDataElectrophysiologist = useCSVData(hypnogramDataElectrophysiologist);\n  const csvDataOpenBCIElectrophysiologist = useCSVData(hypnogramDataOpenBCIElectrophysiologist);\n  const csvDataPredictedOpenBCI = useCSVData(hypnogramDataPredictedOpenBCI);\n\n  return (\n    <div>\n      <Header\n        sizeClass={'pb-100'}\n        shapeQty={7}\n        title={text['header_title']}\n        subtitle={text['header_subtitle']}\n        description={text['header_description']}\n      />\n      <Container className=\"mt-5 text-justify\">\n        <Row className=\"mb-5 justify-content-center\">\n          <WIPWarning />\n        </Row>\n        <p>\n          Ever wonder what is the value of this application? This page aims to illustrate the relative performance of our sleep scoring compared to\n          clinical hypnogram scoring (which is usually considered the state-of-the-art technique).\n        </p>\n        <p>\n          <strong>Here is the plan:</strong>\n        </p>\n        <ul>\n          <li>\n            First, we will check how our classifier’s scoring agrees with the scoring within the Physionet's Sleep-EDF dataset. Of course, we will\n            perform this agreement test on a subset of EEG data that was never trained on. This subset is composed of full nights of sleep coming from\n            five subject of a different age group.{' '}\n          </li>\n          <li>\n            Then, we will check how this classifier performs on a full night recorded on one of our members. In order to be able to make comparisons,\n            we ask for the help of a medical electrophysiologist to score our data. This manual scoring will serve as reference to get an idea of the\n            accuracy of our model on data acquired using an OpenBCI under non-clinical conditions. The AASM manual was used for scoring.\n          </li>\n          <li>\n            Finally, we will present the scoring differences between the medical electrophysiologist and Sleep-EDF. To do this, we will take a random\n            night in our dataset. This will allow us to qualify somewhat the previous results and maybe get an idea of the usual disagreement level\n            between professional scorers.\n          </li>\n        </ul>\n        <h3 className=\"mt-5\">Classifier's accuracy according to Sleep-EDF</h3>\n        <D3Component\n          callback={(svg, data) => createComparativeHypnogram(svg, data, ['Classifier', 'Sleep-EDF'])}\n          data={csvDataPredicted && csvDataSleepEDF ? [csvDataPredicted, csvDataSleepEDF] : null}\n        />\n        <ClassificationReport\n          rows={[\n            ['W', 92, 93, 92, 242],\n            ['REM', 56, 50, 52, 86],\n            ['N1', 80, 82, 70, 32],\n            ['N2', 75, 72, 23, 368],\n            ['N3', 96, 97, 96, 68],\n            ['Accuracy', '', '', 82, 796],\n          ]}\n        />\n        <h3 className=\"mt-5\">Classifier's accuracy according to the electrophysiologist</h3>\n        <D3Component\n          callback={(svg, data) => createComparativeHypnogram(svg, data, ['Classifier', 'Electrophysiologist'])}\n          data={csvDataPredictedOpenBCI && csvDataOpenBCIElectrophysiologist ? [csvDataPredictedOpenBCI, csvDataOpenBCIElectrophysiologist] : null}\n        />\n        <ClassificationReport\n          rows={[\n            ['W', 85, 93, 92, 304],\n            ['REM', 52, 50, 52, 83],\n            ['N1', 76, 80, 78, 37],\n            ['N2', 75, 60, 68, 366],\n            ['N3', 92, 93, 92, 65],\n            ['Accuracy', '', '', 74, 842],\n          ]}\n        />\n        <h3 className=\"mt-5\">Electrophysiologist and Sleep-EDF's agreement</h3>\n        <D3Component\n          callback={(svg, data) => createComparativeHypnogram(svg, data, ['Electrophysiologist', 'Sleep-EDF'])}\n          data={csvDataElectrophysiologist && csvDataSleepEDF ? [csvDataElectrophysiologist, csvDataSleepEDF] : null}\n        />\n        <ClassificationReport\n          rows={[\n            ['W', 92, 93, 92, 304],\n            ['REM', 56, 50, 52, 83],\n            ['N1', 74, 72, 73, 37],\n            ['N2', 70, 64, 67, 366],\n            ['N3', 89, 87, 87, 65],\n            ['Accuracy', '', '', 73, 842],\n          ]}\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default Performance;\n","import React from 'react';\n\nconst WaitingForServerToBeReady = () => (\n  <div>\n    <h1>Waiting for local server to be running...</h1>\n  </div>\n);\n\nexport default WaitingForServerToBeReady;\n","import { SERVER_URL } from './constants';\nimport Axios from 'axios-observable';\nimport { objectToFormData } from './object-to-formdata';\n\nexport const analyzeSleep = (formData) =>\n  Axios.post(`${SERVER_URL}/analyze_sleep`, objectToFormData(formData), {\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n","export const SERVER_URL = 'http://localhost:8080';\n","export const objectToFormData = (obj) => {\n  const formData = new FormData();\n  for (const key in obj) {\n    formData.append(key, obj[key]);\n  }\n  return formData;\n};\n","import React from 'react';\nimport { Button, Container, CustomInput, Form, FormGroup, Label, Input, InputGroup, Col, Row } from 'reactstrap';\nimport { useForm } from 'react-hook-form';\nimport { analyzeSleep } from 'requests/analayze-sleep';\n\nconst dateFieldSuffix = '-date';\nconst timeFieldSuffix = '-time';\n\nconst filterInDateTimeFields = (data) =>\n  Object.keys(data)\n    .filter((field) => field.endsWith(timeFieldSuffix))\n    .map((field) => field.replace(timeFieldSuffix, ''));\n\nconst filterOutDateTimeFields = (data) =>\n  Object.entries(data).filter(([name, value]) => !(name.endsWith(dateFieldSuffix) || name.endsWith(timeFieldSuffix)));\n\nconst mergeDateTimeFields = (data) =>\n  filterInDateTimeFields(data).map((fieldPrefix) => [\n    fieldPrefix,\n    new Date(\n      Object.entries(data)\n        .filter(([fieldName, value]) => fieldName.startsWith(fieldPrefix))\n        .map(([fieldName, value]) => value)\n        .join(' '),\n    ).getTime(),\n  ]);\n\nconst onSubmit = async (data) => {\n  let formData = Object.fromEntries([...filterOutDateTimeFields(data), ...mergeDateTimeFields(data)]);\n  formData = { ...formData, file: formData.file[0] };\n  try {\n    const results = await analyzeSleep(formData).toPromise();\n    console.log(results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst UploadForm = () => {\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <Container style={{ padding: '2em 0' }}>\n      <Row>\n        <Col sm=\"12\" md={{ size: 8, offset: 2 }}>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <h3>Please enter your EEG recorded data and the information related to it:</h3>\n\n            <CustomInput\n              innerRef={register}\n              required\n              accept=\".csv, text/plain\"\n              bsSize=\"lg\"\n              type=\"file\"\n              id=\"file\"\n              name=\"file\"\n              label=\"Upload an OpenBCI CSV file\"\n            />\n\n            <FormGroup>\n              <Label for=\"openbci-device\">OpenBCI device</Label>\n              <Row>\n                <Col md={6}>\n                  <CustomInput innerRef={register} required type=\"select\" id=\"openbci-device\" name=\"device\">\n                    <option></option>\n                    <option>Cython</option>\n                    <option>Ganglion</option>\n                  </CustomInput>\n                </Col>\n              </Row>\n            </FormGroup>\n\n            <Row form>\n              <Col md={6}>\n                <FormGroup inline>\n                  <Label for=\"sex\">Sex</Label>\n                  <CustomInput required type=\"radio\" id=\"male\" name=\"sex\" label=\"Male\" />\n                  <CustomInput required type=\"radio\" id=\"female\" name=\"sex\" label=\"Female\" />\n                </FormGroup>\n              </Col>\n              <Col md={6}>\n                <FormGroup>\n                  <Label for=\"age\">Age</Label>\n                  <Input\n                    innerRef={register}\n                    required\n                    type=\"number\"\n                    name=\"age\"\n                    id=\"age\"\n                    min=\"0\"\n                    max=\"125\"\n                    placeholder=\"Enter your age\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n\n            <div>\n              <Row form>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label>Time when OpenBCI stream started</Label>\n                    <InputGroup>\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"date\"\n                        name={`stream_start${dateFieldSuffix}`}\n                        id={`stream_start${dateFieldSuffix}`}\n                      />\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"time\"\n                        name={`stream_start${timeFieldSuffix}`}\n                        id={`stream_start${timeFieldSuffix}`}\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label>I went to bed at</Label>\n                    <InputGroup>\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"date\"\n                        name={`bedtime${dateFieldSuffix}`}\n                        id={`bedtime${dateFieldSuffix}`}\n                      />\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"time\"\n                        name={`bedtime${timeFieldSuffix}`}\n                        id={`bedtime${timeFieldSuffix}`}\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row form>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label>I think I fell asleep at</Label>\n                    <InputGroup>\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"date\"\n                        name={`sleeping${dateFieldSuffix}`}\n                        id={`sleeping${dateFieldSuffix}`}\n                      />\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"time\"\n                        name={`sleeping${timeFieldSuffix}`}\n                        id={`sleeping${timeFieldSuffix}`}\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n                <Col md={6}>\n                  <FormGroup>\n                    <Label>And woke up at</Label>\n                    <InputGroup>\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"date\"\n                        name={`wakeup${dateFieldSuffix}`}\n                        id={`wakeup${dateFieldSuffix}`}\n                      />\n                      <Input\n                        innerRef={register}\n                        required\n                        type=\"time\"\n                        name={`wakeup${timeFieldSuffix}`}\n                        id={`wakeup${timeFieldSuffix}`}\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </div>\n\n            <Button size=\"lg\" color=\"primary\">\n              Analyze my sleep\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default UploadForm;\n","import { SERVER_URL } from './constants';\nimport Axios from 'axios-observable';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { timer, of } from 'rxjs';\n\nconst pingServer = () =>\n  Axios.get(SERVER_URL).pipe(\n    map(() => true),\n    catchError(() => of(false)),\n  );\n\nexport const periodicPingServer = (period) => timer(0, period).pipe(exhaustMap(pingServer));\n","import React, { useEffect, useState } from 'react';\nimport { Container } from 'reactstrap';\nimport Header from 'components/header';\nimport WaitingForServerToBeReady from './waiting-for-server-to-be-ready';\nimport UploadForm from './upload-form';\nimport text from './text.json';\nimport { periodicPingServer } from 'requests/ping-server';\n\nconst AnalyzeSleep = () => {\n  const [serverReady, setServerReady] = useState(false);\n\n  useEffect(() => {\n    const subscription = periodicPingServer(200).subscribe(\n      (ready) => setServerReady(ready),\n      () => null,\n    );\n    return () => subscription.unsubscribe();\n  });\n\n  return (\n    <div>\n      <Header\n        sizeClass={'pb-100'}\n        shapeQty={7}\n        title={text['header_title']}\n        subtitle={text['header_subtitle']}\n        description={text['header_description']}\n      />\n      <Container className=\"mt-5 text-justify\">\n        <span hidden={!serverReady}>\n          <UploadForm />\n        </span>\n        <span hidden={serverReady}>\n          <WaitingForServerToBeReady />\n        </span>\n      </Container>\n    </div>\n  );\n};\n\nexport default AnalyzeSleep;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { Container } from 'reactstrap';\n\nimport 'argon-design-system-react/src/assets/vendor/nucleo/css/nucleo.css';\nimport 'argon-design-system-react/src/assets/vendor/font-awesome/css/font-awesome.min.css';\nimport 'argon-design-system-react/src/assets/scss/argon-design-system-react.scss';\nimport 'assets/css/visualisation.css';\n\nimport Header from 'components/header';\nimport Footer from 'components/footer';\nimport Navbar from 'components/navbar';\nimport SleepAnalysis from 'views/sleep-analysis';\nimport Performance from 'views/performance';\nimport AnalyzeSleep from 'views/analyze-sleep';\nimport ScrollToTop from 'components/scroll_to_top';\nimport Emoji from 'components/emoji';\n\nconst underConstruction = () => {\n  const text = {\n    header_title: 'Under',\n    header_subtitle: 'construction',\n    header_description: 'Please come back later',\n  };\n\n  return (\n    <div>\n      <Header\n        sizeClass={'pb-100'}\n        shapeQty={7}\n        title={text['header_title']}\n        subtitle={text['header_subtitle']}\n        description={text['header_description']}\n      />\n      <Container className=\"mt-5 text-justify\">\n        <h1 className=\"\">\n          Under Construction... <Emoji symbol=\"🏗️\" />\n        </h1>\n      </Container>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <ScrollToTop>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" render={() => <SleepAnalysis />} />\n        <Route exact path=\"/record-my-sleep\" render={underConstruction} />\n        <Route exact path=\"/analyze-my-sleep\" render={() => <AnalyzeSleep />} />\n        <Route exact path=\"/performance\" render={() => <Performance />} />\n        <Redirect to=\"/\" />\n      </Switch>\n      <Footer />\n    </ScrollToTop>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/hypnogram-openbci-predicted.abcbe357.csv\";"],"sourceRoot":""}